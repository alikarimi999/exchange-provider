{
	"id": "73fd9398c2b7974560befe372f8e12a2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/libraries/utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport '@openzeppelin/contracts/utils/cryptography/ECDSA.sol';\nimport '../interfaces/IExchangeAggregator.sol';\n\nlibrary utils {\n    using ECDSA for bytes32;\n    \n    function checkSig(address owner,bytes memory data, bytes memory sig) internal pure {\n        sig[64] = 0x1b;\n        if (hash(data).recover(sig) == owner) return ;\n        sig[64] = 0x1c;\n        require(hash(data).recover(sig) == owner,\"data tampered\");\n    }\n\n    function signer(IExchangeAggregator.swapData calldata data, bytes memory sig) public pure returns(address){\n        return hash(abi.encode(data)).recover(sig);\n    }\n\n    function hash(bytes memory data) private pure returns (bytes32) {\n        return keccak256(data);\n    }\n}"
			},
			"contracts/interfaces/IExchangeAggregator.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\ninterface IExchangeAggregator {\n    struct swapData{\n        address input;\n        uint totalAmount;\n        uint feeAmount;\n        address swapper;\n        bytes data;\n        address sender;\n    }\n\n    function swap(swapData calldata data,bytes calldata sig) external;\n    function swapNativeIn(swapData calldata data,bytes calldata sig) external payable;\n}"
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205377adc79bb987de03049c655529acbf51a3f7d36bb14c89a2d2f790fee54d6064736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205377adc79bb987de03049c655529acbf51a3f7d36bb14c89a2d2f790fee54d6064736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 PUSH24 0xADC79BB987DE03049C655529ACBF51A3F7D36BB14C89A2D2 0xF7 SWAP1 INVALID 0xE5 0x4D PUSH1 0x64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "188:2065:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205377adc79bb987de03049c655529acbf51a3f7d36bb14c89a2d2f790fee54d6064736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 PUSH24 0xADC79BB987DE03049C655529ACBF51A3F7D36BB14C89A2D2 0xF7 SWAP1 INVALID 0xE5 0x4D PUSH1 0x64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "188:2065:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205377adc79bb987de03049c655529acbf51a3f7d36bb14c89a2d2f790fee54d6064736f6c63430008110033",
									".code": [
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/interfaces/IExchangeAggregator.sol",
								"contracts/libraries/utils.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ECDSA": {
					"abi": [],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":369:6969  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":369:6969  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122080a3c66aba89fd7768a86883c8cf32dfd1597330e27d88c4d3a9567963f9e7b764736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080a3c66aba89fd7768a86883c8cf32dfd1597330e27d88c4d3a9567963f9e7b764736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 LOG3 0xC6 PUSH11 0xBA89FD7768A86883C8CF32 0xDF 0xD1 MSIZE PUSH20 0x30E27D88C4D3A9567963F9E7B764736F6C634300 ADDMOD GT STOP CALLER ",
							"sourceMap": "369:6600:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080a3c66aba89fd7768a86883c8cf32dfd1597330e27d88c4d3a9567963f9e7b764736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 LOG3 0xC6 PUSH11 0xBA89FD7768A86883C8CF32 0xDF 0xD1 MSIZE PUSH20 0x30E27D88C4D3A9567963F9E7B764736F6C634300 ADDMOD GT STOP CALLER ",
							"sourceMap": "369:6600:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 369,
									"end": 6969,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 369,
									"end": 6969,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122080a3c66aba89fd7768a86883c8cf32dfd1597330e27d88c4d3a9567963f9e7b764736f6c63430008110033",
									".code": [
										{
											"begin": 369,
											"end": 6969,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 369,
											"end": 6969,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 369,
											"end": 6969,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 369,
											"end": 6969,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 369,
											"end": 6969,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 369,
											"end": 6969,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 369,
											"end": 6969,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 369,
											"end": 6969,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 369,
											"end": 6969,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/interfaces/IExchangeAggregator.sol",
								"contracts/libraries/utils.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x06b89300806c928957832871b00126458e42874127857569a5fff7ff28093b10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7125301cdee2b0f9ec0b6c1796e4d19a7f601a8bab62a087b4e6c0fc9699f140\",\"dweb:/ipfs/QmZPh1JuMBL1eoJ9igYN1nDFZnnr1NAzSkq9FyvkSsKoKT\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200deb2d155cc73fbf04f3651b35566c36121307684f46e0e4f511e6d6a66133ad64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200deb2d155cc73fbf04f3651b35566c36121307684f46e0e4f511e6d6a66133ad64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xEB 0x2D ISZERO 0x5C 0xC7 EXTCODEHASH 0xBF DIV RETURN PUSH6 0x1B35566C3612 SGT SMOD PUSH9 0x4F46E0E4F511E6D6A6 PUSH2 0x33AD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "202:12302:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200deb2d155cc73fbf04f3651b35566c36121307684f46e0e4f511e6d6a66133ad64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xEB 0x2D ISZERO 0x5C 0xC7 EXTCODEHASH 0xBF DIV RETURN PUSH6 0x1B35566C3612 SGT SMOD PUSH9 0x4F46E0E4F511E6D6A6 PUSH2 0x33AD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "202:12302:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200deb2d155cc73fbf04f3651b35566c36121307684f46e0e4f511e6d6a66133ad64736f6c63430008110033",
									".code": [
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/interfaces/IExchangeAggregator.sol",
								"contracts/libraries/utils.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IExchangeAggregator.sol": {
				"IExchangeAggregator": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "input",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "totalAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "feeAmount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "swapper",
											"type": "address"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										}
									],
									"internalType": "struct IExchangeAggregator.swapData",
									"name": "data",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "input",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "totalAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "feeAmount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "swapper",
											"type": "address"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										}
									],
									"internalType": "struct IExchangeAggregator.swapData",
									"name": "data",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								}
							],
							"name": "swapNativeIn",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"swap((address,uint256,uint256,address,bytes,address),bytes)": "2906799b",
							"swapNativeIn((address,uint256,uint256,address,bytes,address),bytes)": "5d86acf1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"input\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"internalType\":\"struct IExchangeAggregator.swapData\",\"name\":\"data\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"input\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"internalType\":\"struct IExchangeAggregator.swapData\",\"name\":\"data\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"swapNativeIn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IExchangeAggregator.sol\":\"IExchangeAggregator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IExchangeAggregator.sol\":{\"keccak256\":\"0x18cf8828c63885315ed8cf8f05172f2877997c335b3fac1cf883bc89defe5680\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4554ae11997b92961c54bf6b8c6973c871924c273e935cb4060653c322b2dcb9\",\"dweb:/ipfs/QmeU2QxxJtiiCCec8PpQmUAKwntSJg3dJRaeuxKVJxWgXX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/utils.sol": {
				"utils": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "input",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "totalAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "feeAmount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "swapper",
											"type": "address"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										}
									],
									"internalType": "struct IExchangeAggregator.swapData",
									"name": "data",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								}
							],
							"name": "signer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/utils.sol\":170:766  library utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/utils.sol\":170:766  library utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4f5fdbe5\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/libraries/utils.sol\":490:655  function signer(IExchangeAggregator.swapData calldata data, bytes memory sig) public pure returns(address){... */\n    tag_2:\n      tag_3\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_4\n      swap2\n      swap1\n      tag_5\n      jump\t// in\n    tag_4:\n      tag_6\n      jump\t// in\n    tag_3:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_6:\n        /* \"contracts/libraries/utils.sol\":588:595  address */\n      0x00\n        /* \"contracts/libraries/utils.sol\":613:648  hash(abi.encode(data)).recover(sig) */\n      tag_10\n        /* \"contracts/libraries/utils.sol\":644:647  sig */\n      dup3\n        /* \"contracts/libraries/utils.sol\":613:635  hash(abi.encode(data)) */\n      tag_11\n        /* \"contracts/libraries/utils.sol\":629:633  data */\n      dup6\n        /* \"contracts/libraries/utils.sol\":618:634  abi.encode(data) */\n      add(0x20, mload(0x40))\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/libraries/utils.sol\":613:617  hash */\n      tag_14\n        /* \"contracts/libraries/utils.sol\":613:635  hash(abi.encode(data)) */\n      jump\t// in\n    tag_11:\n        /* \"contracts/libraries/utils.sol\":613:643  hash(abi.encode(data)).recover */\n      tag_15\n      swap1\n        /* \"contracts/libraries/utils.sol\":613:648  hash(abi.encode(data)).recover(sig) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_10:\n        /* \"contracts/libraries/utils.sol\":606:648  return hash(abi.encode(data)).recover(sig) */\n      swap1\n      pop\n        /* \"contracts/libraries/utils.sol\":490:655  function signer(IExchangeAggregator.swapData calldata data, bytes memory sig) public pure returns(address){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/utils.sol\":661:764  function hash(bytes memory data) private pure returns (bytes32) {... */\n    tag_14:\n        /* \"contracts/libraries/utils.sol\":716:723  bytes32 */\n      0x00\n        /* \"contracts/libraries/utils.sol\":752:756  data */\n      dup2\n        /* \"contracts/libraries/utils.sol\":742:757  keccak256(data) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/libraries/utils.sol\":735:757  return keccak256(data) */\n      swap1\n      pop\n        /* \"contracts/libraries/utils.sol\":661:764  function hash(bytes memory data) private pure returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3661:3888  function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3739:3746  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3759:3776  address recovered */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3778:3796  RecoverError error */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3800:3827  tryRecover(hash, signature) */\n      tag_18\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3811:3815  hash */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3817:3826  signature */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3800:3810  tryRecover */\n      tag_19\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3800:3827  tryRecover(hash, signature) */\n      jump\t// in\n    tag_18:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3758:3827  (address recovered, RecoverError error) = tryRecover(hash, signature) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3837:3855  _throwError(error) */\n      tag_20\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3849:3854  error */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3837:3848  _throwError */\n      tag_21\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3837:3855  _throwError(error) */\n      jump\t// in\n    tag_20:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3872:3881  recovered */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3865:3881  return recovered */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3661:3888  function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2145:2875  function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2226:2233  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2235:2247  RecoverError */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2283:2285  65 */\n      0x41\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2263:2272  signature */\n      dup4\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2263:2279  signature.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2263:2285  signature.length == 65 */\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2259:2869  if (signature.length == 65) {... */\n      tag_23\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2301:2310  bytes32 r */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2324:2333  bytes32 s */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2347:2354  uint8 v */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2599:2603  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2588:2597  signature */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2584:2604  add(signature, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2578:2605  mload(add(signature, 0x20)) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2573:2605  r := mload(add(signature, 0x20)) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2648:2652  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2637:2646  signature */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2633:2653  add(signature, 0x40) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2627:2654  mload(add(signature, 0x40)) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2622:2654  s := mload(add(signature, 0x40)) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2705:2709  0x60 */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2694:2703  signature */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2690:2710  add(signature, 0x60) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2684:2711  mload(add(signature, 0x60)) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2681:2682  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2676:2712  byte(0, mload(add(signature, 0x60))) */\n      byte\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2671:2712  v := byte(0, mload(add(signature, 0x60))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2746:2771  tryRecover(hash, v, r, s) */\n      tag_24\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2757:2761  hash */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2763:2764  v */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2766:2767  r */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2769:2770  s */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2746:2756  tryRecover */\n      tag_25\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2746:2771  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_24:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2739:2771  return tryRecover(hash, v, r, s) */\n      swap5\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n      jump(tag_22)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2259:2869  if (signature.length == 65) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2818:2819  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2822:2857  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2802:2858  return (address(0), RecoverError.InvalidSignatureLength) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2145:2875  function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {... */\n    tag_22:\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":570:1081  function _throwError(RecoverError error) private pure {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":647:667  RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":638:667  error == RecoverError.NoError */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_28\n      jumpi\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n    tag_28:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":638:643  error */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":638:667  error == RecoverError.NoError */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_31\n      jumpi\n      tag_32\n      tag_30\n      jump\t// in\n    tag_32:\n    tag_31:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":634:1075  if (error == RecoverError.NoError) {... */\n      iszero\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":683:690  return; */\n      tag_27\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":634:1075  if (error == RecoverError.NoError) {... */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":743:772  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":734:772  error == RecoverError.InvalidSignature */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_35\n      jumpi\n      tag_36\n      tag_30\n      jump\t// in\n    tag_36:\n    tag_35:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":734:739  error */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":734:772  error == RecoverError.InvalidSignature */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_37\n      jumpi\n      tag_38\n      tag_30\n      jump\t// in\n    tag_38:\n    tag_37:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":730:1075  if (error == RecoverError.InvalidSignature) {... */\n      tag_39\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":788:822  revert(\"ECDSA: invalid signature\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_40\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":730:1075  if (error == RecoverError.InvalidSignature) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":852:887  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":843:887  error == RecoverError.InvalidSignatureLength */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_43\n      jumpi\n      tag_44\n      tag_30\n      jump\t// in\n    tag_44:\n    tag_43:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":843:848  error */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":843:887  error == RecoverError.InvalidSignatureLength */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_45\n      jumpi\n      tag_46\n      tag_30\n      jump\t// in\n    tag_46:\n    tag_45:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":839:1075  if (error == RecoverError.InvalidSignatureLength) {... */\n      tag_47\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":903:944  revert(\"ECDSA: invalid signature length\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":839:1075  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":974:1004  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":965:1004  error == RecoverError.InvalidSignatureS */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_51\n      jumpi\n      tag_52\n      tag_30\n      jump\t// in\n    tag_52:\n    tag_51:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":965:970  error */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":965:1004  error == RecoverError.InvalidSignatureS */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_53\n      jumpi\n      tag_54\n      tag_30\n      jump\t// in\n    tag_54:\n    tag_53:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":961:1075  if (error == RecoverError.InvalidSignatureS) {... */\n      tag_55\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":1020:1064  revert(\"ECDSA: invalid signature 's' value\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":961:1075  if (error == RecoverError.InvalidSignatureS) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":570:1081  function _throwError(RecoverError error) private pure {... */\n    tag_27:\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5069:6563  function tryRecover(... */\n    tag_25:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5195:5202  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5204:5216  RecoverError */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6119:6185  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6114:6115  s */\n      dup4\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6106:6116  uint256(s) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6106:6185  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6102:6263  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_59\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6217:6218  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6221:6251  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6201:6252  return (address(0), RecoverError.InvalidSignatureS) */\n      swap2\n      pop\n      swap2\n      pop\n      jump(tag_58)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6102:6263  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6357:6371  address signer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6374:6398  ecrecover(hash, v, r, s) */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6384:6388  hash */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6390:6391  v */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6393:6394  r */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6396:6397  s */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6374:6398  ecrecover(hash, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      tag_60\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_63\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_63:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6357:6398  address signer = ecrecover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6430:6431  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6412:6432  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6412:6418  signer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6412:6432  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6408:6509  if (signer == address(0)) {... */\n      tag_64\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6464:6465  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6468:6497  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6448:6498  return (address(0), RecoverError.InvalidSignature) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      jump(tag_58)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6408:6509  if (signer == address(0)) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6527:6533  signer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6535:6555  RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6519:6556  return (signer, RecoverError.NoError) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5069:6563  function tryRecover(... */\n    tag_58:\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_65:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_66:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_67:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_68:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      dup1\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":500:733   */\n    tag_69:\n        /* \"#utility.yul\":574:579   */\n      0x00\n        /* \"#utility.yul\":615:618   */\n      0xc0\n        /* \"#utility.yul\":606:612   */\n      dup3\n        /* \"#utility.yul\":601:604   */\n      dup5\n        /* \"#utility.yul\":597:613   */\n      sub\n        /* \"#utility.yul\":593:619   */\n      slt\n        /* \"#utility.yul\":590:703   */\n      iszero\n      tag_116\n      jumpi\n        /* \"#utility.yul\":622:701   */\n      tag_117\n      tag_68\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":590:703   */\n    tag_116:\n        /* \"#utility.yul\":721:727   */\n      dup2\n        /* \"#utility.yul\":712:727   */\n      swap1\n      pop\n        /* \"#utility.yul\":500:733   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":739:856   */\n    tag_70:\n        /* \"#utility.yul\":848:849   */\n      0x00\n        /* \"#utility.yul\":845:846   */\n      dup1\n        /* \"#utility.yul\":838:850   */\n      revert\n        /* \"#utility.yul\":862:979   */\n    tag_71:\n        /* \"#utility.yul\":971:972   */\n      0x00\n        /* \"#utility.yul\":968:969   */\n      dup1\n        /* \"#utility.yul\":961:973   */\n      revert\n        /* \"#utility.yul\":985:1087   */\n    tag_72:\n        /* \"#utility.yul\":1026:1032   */\n      0x00\n        /* \"#utility.yul\":1077:1079   */\n      0x1f\n        /* \"#utility.yul\":1073:1080   */\n      not\n        /* \"#utility.yul\":1068:1070   */\n      0x1f\n        /* \"#utility.yul\":1061:1066   */\n      dup4\n        /* \"#utility.yul\":1057:1071   */\n      add\n        /* \"#utility.yul\":1053:1081   */\n      and\n        /* \"#utility.yul\":1043:1081   */\n      swap1\n      pop\n        /* \"#utility.yul\":985:1087   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1093:1273   */\n    tag_73:\n        /* \"#utility.yul\":1141:1218   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1138:1139   */\n      0x00\n        /* \"#utility.yul\":1131:1219   */\n      mstore\n        /* \"#utility.yul\":1238:1242   */\n      0x41\n        /* \"#utility.yul\":1235:1236   */\n      0x04\n        /* \"#utility.yul\":1228:1243   */\n      mstore\n        /* \"#utility.yul\":1262:1266   */\n      0x24\n        /* \"#utility.yul\":1259:1260   */\n      0x00\n        /* \"#utility.yul\":1252:1267   */\n      revert\n        /* \"#utility.yul\":1279:1560   */\n    tag_74:\n        /* \"#utility.yul\":1362:1389   */\n      tag_123\n        /* \"#utility.yul\":1384:1388   */\n      dup3\n        /* \"#utility.yul\":1362:1389   */\n      tag_72\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":1354:1360   */\n      dup2\n        /* \"#utility.yul\":1350:1390   */\n      add\n        /* \"#utility.yul\":1492:1498   */\n      dup2\n        /* \"#utility.yul\":1480:1490   */\n      dup2\n        /* \"#utility.yul\":1477:1499   */\n      lt\n        /* \"#utility.yul\":1456:1474   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1444:1454   */\n      dup3\n        /* \"#utility.yul\":1441:1475   */\n      gt\n        /* \"#utility.yul\":1438:1500   */\n      or\n        /* \"#utility.yul\":1435:1523   */\n      iszero\n      tag_124\n      jumpi\n        /* \"#utility.yul\":1503:1521   */\n      tag_125\n      tag_73\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":1435:1523   */\n    tag_124:\n        /* \"#utility.yul\":1543:1553   */\n      dup1\n        /* \"#utility.yul\":1539:1541   */\n      0x40\n        /* \"#utility.yul\":1532:1554   */\n      mstore\n        /* \"#utility.yul\":1322:1560   */\n      pop\n        /* \"#utility.yul\":1279:1560   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1566:1695   */\n    tag_75:\n        /* \"#utility.yul\":1600:1606   */\n      0x00\n        /* \"#utility.yul\":1627:1647   */\n      tag_127\n      tag_65\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":1617:1647   */\n      swap1\n      pop\n        /* \"#utility.yul\":1656:1689   */\n      tag_128\n        /* \"#utility.yul\":1684:1688   */\n      dup3\n        /* \"#utility.yul\":1676:1682   */\n      dup3\n        /* \"#utility.yul\":1656:1689   */\n      tag_74\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":1566:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:2008   */\n    tag_76:\n        /* \"#utility.yul\":1762:1766   */\n      0x00\n        /* \"#utility.yul\":1852:1870   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1844:1850   */\n      dup3\n        /* \"#utility.yul\":1841:1871   */\n      gt\n        /* \"#utility.yul\":1838:1894   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":1874:1892   */\n      tag_131\n      tag_73\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":1838:1894   */\n    tag_130:\n        /* \"#utility.yul\":1912:1941   */\n      tag_132\n        /* \"#utility.yul\":1934:1940   */\n      dup3\n        /* \"#utility.yul\":1912:1941   */\n      tag_72\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":1904:1941   */\n      swap1\n      pop\n        /* \"#utility.yul\":1996:2000   */\n      0x20\n        /* \"#utility.yul\":1990:1994   */\n      dup2\n        /* \"#utility.yul\":1986:2001   */\n      add\n        /* \"#utility.yul\":1978:2001   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:2008   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2014:2160   */\n    tag_77:\n        /* \"#utility.yul\":2111:2117   */\n      dup3\n        /* \"#utility.yul\":2106:2109   */\n      dup2\n        /* \"#utility.yul\":2101:2104   */\n      dup4\n        /* \"#utility.yul\":2088:2118   */\n      calldatacopy\n        /* \"#utility.yul\":2152:2153   */\n      0x00\n        /* \"#utility.yul\":2143:2149   */\n      dup4\n        /* \"#utility.yul\":2138:2141   */\n      dup4\n        /* \"#utility.yul\":2134:2150   */\n      add\n        /* \"#utility.yul\":2127:2154   */\n      mstore\n        /* \"#utility.yul\":2014:2160   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2166:2589   */\n    tag_78:\n        /* \"#utility.yul\":2243:2248   */\n      0x00\n        /* \"#utility.yul\":2268:2333   */\n      tag_135\n        /* \"#utility.yul\":2284:2332   */\n      tag_136\n        /* \"#utility.yul\":2325:2331   */\n      dup5\n        /* \"#utility.yul\":2284:2332   */\n      tag_76\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":2268:2333   */\n      tag_75\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":2259:2333   */\n      swap1\n      pop\n        /* \"#utility.yul\":2356:2362   */\n      dup3\n        /* \"#utility.yul\":2349:2354   */\n      dup2\n        /* \"#utility.yul\":2342:2363   */\n      mstore\n        /* \"#utility.yul\":2394:2398   */\n      0x20\n        /* \"#utility.yul\":2387:2392   */\n      dup2\n        /* \"#utility.yul\":2383:2399   */\n      add\n        /* \"#utility.yul\":2432:2435   */\n      dup5\n        /* \"#utility.yul\":2423:2429   */\n      dup5\n        /* \"#utility.yul\":2418:2421   */\n      dup5\n        /* \"#utility.yul\":2414:2430   */\n      add\n        /* \"#utility.yul\":2411:2436   */\n      gt\n        /* \"#utility.yul\":2408:2520   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":2439:2518   */\n      tag_138\n      tag_71\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":2408:2520   */\n    tag_137:\n        /* \"#utility.yul\":2529:2583   */\n      tag_139\n        /* \"#utility.yul\":2576:2582   */\n      dup5\n        /* \"#utility.yul\":2571:2574   */\n      dup3\n        /* \"#utility.yul\":2566:2569   */\n      dup6\n        /* \"#utility.yul\":2529:2583   */\n      tag_77\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":2249:2589   */\n      pop\n        /* \"#utility.yul\":2166:2589   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2608:2946   */\n    tag_79:\n        /* \"#utility.yul\":2663:2668   */\n      0x00\n        /* \"#utility.yul\":2712:2715   */\n      dup3\n        /* \"#utility.yul\":2705:2709   */\n      0x1f\n        /* \"#utility.yul\":2697:2703   */\n      dup4\n        /* \"#utility.yul\":2693:2710   */\n      add\n        /* \"#utility.yul\":2689:2716   */\n      slt\n        /* \"#utility.yul\":2679:2801   */\n      tag_141\n      jumpi\n        /* \"#utility.yul\":2720:2799   */\n      tag_142\n      tag_70\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":2679:2801   */\n    tag_141:\n        /* \"#utility.yul\":2837:2843   */\n      dup2\n        /* \"#utility.yul\":2824:2844   */\n      calldataload\n        /* \"#utility.yul\":2862:2940   */\n      tag_143\n        /* \"#utility.yul\":2936:2939   */\n      dup5\n        /* \"#utility.yul\":2928:2934   */\n      dup3\n        /* \"#utility.yul\":2921:2925   */\n      0x20\n        /* \"#utility.yul\":2913:2919   */\n      dup7\n        /* \"#utility.yul\":2909:2926   */\n      add\n        /* \"#utility.yul\":2862:2940   */\n      tag_78\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":2853:2940   */\n      swap2\n      pop\n        /* \"#utility.yul\":2669:2946   */\n      pop\n        /* \"#utility.yul\":2608:2946   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2952:3820   */\n    tag_5:\n        /* \"#utility.yul\":3057:3063   */\n      0x00\n        /* \"#utility.yul\":3065:3071   */\n      dup1\n        /* \"#utility.yul\":3114:3116   */\n      0x40\n        /* \"#utility.yul\":3102:3111   */\n      dup4\n        /* \"#utility.yul\":3093:3100   */\n      dup6\n        /* \"#utility.yul\":3089:3112   */\n      sub\n        /* \"#utility.yul\":3085:3117   */\n      slt\n        /* \"#utility.yul\":3082:3201   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":3120:3199   */\n      tag_146\n      tag_66\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":3082:3201   */\n    tag_145:\n        /* \"#utility.yul\":3268:3269   */\n      0x00\n        /* \"#utility.yul\":3257:3266   */\n      dup4\n        /* \"#utility.yul\":3253:3270   */\n      add\n        /* \"#utility.yul\":3240:3271   */\n      calldataload\n        /* \"#utility.yul\":3298:3316   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3290:3296   */\n      dup2\n        /* \"#utility.yul\":3287:3317   */\n      gt\n        /* \"#utility.yul\":3284:3401   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":3320:3399   */\n      tag_148\n      tag_67\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":3284:3401   */\n    tag_147:\n        /* \"#utility.yul\":3425:3506   */\n      tag_149\n        /* \"#utility.yul\":3498:3505   */\n      dup6\n        /* \"#utility.yul\":3489:3495   */\n      dup3\n        /* \"#utility.yul\":3478:3487   */\n      dup7\n        /* \"#utility.yul\":3474:3496   */\n      add\n        /* \"#utility.yul\":3425:3506   */\n      tag_69\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":3415:3506   */\n      swap3\n      pop\n        /* \"#utility.yul\":3211:3516   */\n      pop\n        /* \"#utility.yul\":3583:3585   */\n      0x20\n        /* \"#utility.yul\":3572:3581   */\n      dup4\n        /* \"#utility.yul\":3568:3586   */\n      add\n        /* \"#utility.yul\":3555:3587   */\n      calldataload\n        /* \"#utility.yul\":3614:3632   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3606:3612   */\n      dup2\n        /* \"#utility.yul\":3603:3633   */\n      gt\n        /* \"#utility.yul\":3600:3717   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":3636:3715   */\n      tag_151\n      tag_67\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":3600:3717   */\n    tag_150:\n        /* \"#utility.yul\":3741:3803   */\n      tag_152\n        /* \"#utility.yul\":3795:3802   */\n      dup6\n        /* \"#utility.yul\":3786:3792   */\n      dup3\n        /* \"#utility.yul\":3775:3784   */\n      dup7\n        /* \"#utility.yul\":3771:3793   */\n      add\n        /* \"#utility.yul\":3741:3803   */\n      tag_79\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":3731:3803   */\n      swap2\n      pop\n        /* \"#utility.yul\":3526:3813   */\n      pop\n        /* \"#utility.yul\":2952:3820   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3826:3952   */\n    tag_80:\n        /* \"#utility.yul\":3863:3870   */\n      0x00\n        /* \"#utility.yul\":3903:3945   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3896:3901   */\n      dup3\n        /* \"#utility.yul\":3892:3946   */\n      and\n        /* \"#utility.yul\":3881:3946   */\n      swap1\n      pop\n        /* \"#utility.yul\":3826:3952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3958:4054   */\n    tag_81:\n        /* \"#utility.yul\":3995:4002   */\n      0x00\n        /* \"#utility.yul\":4024:4048   */\n      tag_155\n        /* \"#utility.yul\":4042:4047   */\n      dup3\n        /* \"#utility.yul\":4024:4048   */\n      tag_80\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":4013:4048   */\n      swap1\n      pop\n        /* \"#utility.yul\":3958:4054   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4060:4186   */\n    tag_82:\n        /* \"#utility.yul\":4155:4179   */\n      tag_157\n        /* \"#utility.yul\":4173:4178   */\n      dup2\n        /* \"#utility.yul\":4155:4179   */\n      tag_81\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":4150:4153   */\n      dup3\n        /* \"#utility.yul\":4143:4180   */\n      mstore\n        /* \"#utility.yul\":4060:4186   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4192:4430   */\n    tag_8:\n        /* \"#utility.yul\":4293:4297   */\n      0x00\n        /* \"#utility.yul\":4331:4333   */\n      0x20\n        /* \"#utility.yul\":4320:4329   */\n      dup3\n        /* \"#utility.yul\":4316:4334   */\n      add\n        /* \"#utility.yul\":4308:4334   */\n      swap1\n      pop\n        /* \"#utility.yul\":4344:4423   */\n      tag_159\n        /* \"#utility.yul\":4420:4421   */\n      0x00\n        /* \"#utility.yul\":4409:4418   */\n      dup4\n        /* \"#utility.yul\":4405:4422   */\n      add\n        /* \"#utility.yul\":4396:4402   */\n      dup5\n        /* \"#utility.yul\":4344:4423   */\n      tag_82\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":4192:4430   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4436:4558   */\n    tag_83:\n        /* \"#utility.yul\":4509:4533   */\n      tag_161\n        /* \"#utility.yul\":4527:4532   */\n      dup2\n        /* \"#utility.yul\":4509:4533   */\n      tag_81\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":4502:4507   */\n      dup2\n        /* \"#utility.yul\":4499:4534   */\n      eq\n        /* \"#utility.yul\":4489:4552   */\n      tag_162\n      jumpi\n        /* \"#utility.yul\":4548:4549   */\n      0x00\n        /* \"#utility.yul\":4545:4546   */\n      dup1\n        /* \"#utility.yul\":4538:4550   */\n      revert\n        /* \"#utility.yul\":4489:4552   */\n    tag_162:\n        /* \"#utility.yul\":4436:4558   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4564:4703   */\n    tag_84:\n        /* \"#utility.yul\":4610:4615   */\n      0x00\n        /* \"#utility.yul\":4648:4654   */\n      dup2\n        /* \"#utility.yul\":4635:4655   */\n      calldataload\n        /* \"#utility.yul\":4626:4655   */\n      swap1\n      pop\n        /* \"#utility.yul\":4664:4697   */\n      tag_164\n        /* \"#utility.yul\":4691:4696   */\n      dup2\n        /* \"#utility.yul\":4664:4697   */\n      tag_83\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":4564:4703   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4709:4831   */\n    tag_85:\n        /* \"#utility.yul\":4761:4766   */\n      0x00\n        /* \"#utility.yul\":4786:4825   */\n      tag_166\n        /* \"#utility.yul\":4821:4823   */\n      0x20\n        /* \"#utility.yul\":4816:4819   */\n      dup5\n        /* \"#utility.yul\":4812:4824   */\n      add\n        /* \"#utility.yul\":4807:4810   */\n      dup5\n        /* \"#utility.yul\":4786:4825   */\n      tag_84\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":4777:4825   */\n      swap1\n      pop\n        /* \"#utility.yul\":4709:4831   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4837:4945   */\n    tag_86:\n        /* \"#utility.yul\":4914:4938   */\n      tag_168\n        /* \"#utility.yul\":4932:4937   */\n      dup2\n        /* \"#utility.yul\":4914:4938   */\n      tag_81\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":4909:4912   */\n      dup3\n        /* \"#utility.yul\":4902:4939   */\n      mstore\n        /* \"#utility.yul\":4837:4945   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4951:5028   */\n    tag_87:\n        /* \"#utility.yul\":4988:4995   */\n      0x00\n        /* \"#utility.yul\":5017:5022   */\n      dup2\n        /* \"#utility.yul\":5006:5022   */\n      swap1\n      pop\n        /* \"#utility.yul\":4951:5028   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5034:5156   */\n    tag_88:\n        /* \"#utility.yul\":5107:5131   */\n      tag_171\n        /* \"#utility.yul\":5125:5130   */\n      dup2\n        /* \"#utility.yul\":5107:5131   */\n      tag_87\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":5100:5105   */\n      dup2\n        /* \"#utility.yul\":5097:5132   */\n      eq\n        /* \"#utility.yul\":5087:5150   */\n      tag_172\n      jumpi\n        /* \"#utility.yul\":5146:5147   */\n      0x00\n        /* \"#utility.yul\":5143:5144   */\n      dup1\n        /* \"#utility.yul\":5136:5148   */\n      revert\n        /* \"#utility.yul\":5087:5150   */\n    tag_172:\n        /* \"#utility.yul\":5034:5156   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5162:5301   */\n    tag_89:\n        /* \"#utility.yul\":5208:5213   */\n      0x00\n        /* \"#utility.yul\":5246:5252   */\n      dup2\n        /* \"#utility.yul\":5233:5253   */\n      calldataload\n        /* \"#utility.yul\":5224:5253   */\n      swap1\n      pop\n        /* \"#utility.yul\":5262:5295   */\n      tag_174\n        /* \"#utility.yul\":5289:5294   */\n      dup2\n        /* \"#utility.yul\":5262:5295   */\n      tag_88\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":5162:5301   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5307:5429   */\n    tag_90:\n        /* \"#utility.yul\":5359:5364   */\n      0x00\n        /* \"#utility.yul\":5384:5423   */\n      tag_176\n        /* \"#utility.yul\":5419:5421   */\n      0x20\n        /* \"#utility.yul\":5414:5417   */\n      dup5\n        /* \"#utility.yul\":5410:5422   */\n      add\n        /* \"#utility.yul\":5405:5408   */\n      dup5\n        /* \"#utility.yul\":5384:5423   */\n      tag_89\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":5375:5423   */\n      swap1\n      pop\n        /* \"#utility.yul\":5307:5429   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5435:5543   */\n    tag_91:\n        /* \"#utility.yul\":5512:5536   */\n      tag_178\n        /* \"#utility.yul\":5530:5535   */\n      dup2\n        /* \"#utility.yul\":5512:5536   */\n      tag_87\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":5507:5510   */\n      dup3\n        /* \"#utility.yul\":5500:5537   */\n      mstore\n        /* \"#utility.yul\":5435:5543   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5549:5666   */\n    tag_92:\n        /* \"#utility.yul\":5658:5659   */\n      0x00\n        /* \"#utility.yul\":5655:5656   */\n      dup1\n        /* \"#utility.yul\":5648:5660   */\n      revert\n        /* \"#utility.yul\":5672:5789   */\n    tag_93:\n        /* \"#utility.yul\":5781:5782   */\n      0x00\n        /* \"#utility.yul\":5778:5779   */\n      dup1\n        /* \"#utility.yul\":5771:5783   */\n      revert\n        /* \"#utility.yul\":5795:5912   */\n    tag_94:\n        /* \"#utility.yul\":5904:5905   */\n      0x00\n        /* \"#utility.yul\":5901:5902   */\n      dup1\n        /* \"#utility.yul\":5894:5906   */\n      revert\n        /* \"#utility.yul\":5918:6629   */\n    tag_95:\n        /* \"#utility.yul\":5982:5987   */\n      0x00\n        /* \"#utility.yul\":5989:5995   */\n      dup1\n        /* \"#utility.yul\":6045:6048   */\n      dup4\n        /* \"#utility.yul\":6032:6049   */\n      calldataload\n        /* \"#utility.yul\":6137:6138   */\n      0x01\n        /* \"#utility.yul\":6131:6135   */\n      0x20\n        /* \"#utility.yul\":6127:6139   */\n      sub\n        /* \"#utility.yul\":6116:6124   */\n      dup5\n        /* \"#utility.yul\":6100:6114   */\n      calldatasize\n        /* \"#utility.yul\":6096:6125   */\n      sub\n        /* \"#utility.yul\":6092:6140   */\n      sub\n        /* \"#utility.yul\":6072:6090   */\n      dup2\n        /* \"#utility.yul\":6068:6141   */\n      slt\n        /* \"#utility.yul\":6058:6226   */\n      tag_183\n      jumpi\n        /* \"#utility.yul\":6145:6224   */\n      tag_184\n      tag_94\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":6058:6226   */\n    tag_183:\n        /* \"#utility.yul\":6268:6276   */\n      dup4\n        /* \"#utility.yul\":6248:6266   */\n      dup2\n        /* \"#utility.yul\":6244:6277   */\n      add\n        /* \"#utility.yul\":6235:6277   */\n      swap3\n      pop\n        /* \"#utility.yul\":6310:6315   */\n      dup3\n        /* \"#utility.yul\":6297:6316   */\n      calldataload\n        /* \"#utility.yul\":6287:6316   */\n      swap2\n      pop\n        /* \"#utility.yul\":6345:6349   */\n      0x20\n        /* \"#utility.yul\":6338:6343   */\n      dup4\n        /* \"#utility.yul\":6334:6350   */\n      add\n        /* \"#utility.yul\":6325:6350   */\n      swap3\n      pop\n        /* \"#utility.yul\":6373:6391   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6365:6371   */\n      dup3\n        /* \"#utility.yul\":6362:6392   */\n      gt\n        /* \"#utility.yul\":6359:6476   */\n      iszero\n      tag_185\n      jumpi\n        /* \"#utility.yul\":6395:6474   */\n      tag_186\n      tag_92\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":6359:6476   */\n    tag_185:\n        /* \"#utility.yul\":6531:6535   */\n      0x01\n        /* \"#utility.yul\":6523:6529   */\n      dup3\n        /* \"#utility.yul\":6519:6536   */\n      mul\n        /* \"#utility.yul\":6503:6517   */\n      calldatasize\n        /* \"#utility.yul\":6499:6537   */\n      sub\n        /* \"#utility.yul\":6492:6497   */\n      dup4\n        /* \"#utility.yul\":6488:6538   */\n      sgt\n        /* \"#utility.yul\":6485:6622   */\n      iszero\n      tag_187\n      jumpi\n        /* \"#utility.yul\":6541:6620   */\n      tag_188\n      tag_93\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":6485:6622   */\n    tag_187:\n        /* \"#utility.yul\":5996:6629   */\n      pop\n        /* \"#utility.yul\":5918:6629   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6635:6793   */\n    tag_96:\n        /* \"#utility.yul\":6708:6719   */\n      0x00\n        /* \"#utility.yul\":6742:6748   */\n      dup3\n        /* \"#utility.yul\":6737:6740   */\n      dup3\n        /* \"#utility.yul\":6730:6749   */\n      mstore\n        /* \"#utility.yul\":6782:6786   */\n      0x20\n        /* \"#utility.yul\":6777:6780   */\n      dup3\n        /* \"#utility.yul\":6773:6787   */\n      add\n        /* \"#utility.yul\":6758:6787   */\n      swap1\n      pop\n        /* \"#utility.yul\":6635:6793   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6821:7115   */\n    tag_97:\n        /* \"#utility.yul\":6907:6910   */\n      0x00\n        /* \"#utility.yul\":6928:6988   */\n      tag_191\n        /* \"#utility.yul\":6981:6987   */\n      dup4\n        /* \"#utility.yul\":6976:6979   */\n      dup6\n        /* \"#utility.yul\":6928:6988   */\n      tag_96\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":6921:6988   */\n      swap4\n      pop\n        /* \"#utility.yul\":6998:7054   */\n      tag_192\n        /* \"#utility.yul\":7047:7053   */\n      dup4\n        /* \"#utility.yul\":7042:7045   */\n      dup6\n        /* \"#utility.yul\":7035:7040   */\n      dup5\n        /* \"#utility.yul\":6998:7054   */\n      tag_77\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":7079:7108   */\n      tag_193\n        /* \"#utility.yul\":7101:7107   */\n      dup4\n        /* \"#utility.yul\":7079:7108   */\n      tag_72\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":7074:7077   */\n      dup5\n        /* \"#utility.yul\":7070:7109   */\n      add\n        /* \"#utility.yul\":7063:7109   */\n      swap1\n      pop\n        /* \"#utility.yul\":6821:7115   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7203:8728   */\n    tag_98:\n        /* \"#utility.yul\":7326:7329   */\n      0x00\n        /* \"#utility.yul\":7362:7366   */\n      0xc0\n        /* \"#utility.yul\":7357:7360   */\n      dup4\n        /* \"#utility.yul\":7353:7367   */\n      add\n        /* \"#utility.yul\":7433:7483   */\n      tag_195\n        /* \"#utility.yul\":7477:7481   */\n      0x00\n        /* \"#utility.yul\":7470:7475   */\n      dup5\n        /* \"#utility.yul\":7466:7482   */\n      add\n        /* \"#utility.yul\":7459:7464   */\n      dup5\n        /* \"#utility.yul\":7433:7483   */\n      tag_85\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":7496:7559   */\n      tag_196\n        /* \"#utility.yul\":7553:7557   */\n      0x00\n        /* \"#utility.yul\":7548:7551   */\n      dup7\n        /* \"#utility.yul\":7544:7558   */\n      add\n        /* \"#utility.yul\":7530:7542   */\n      dup3\n        /* \"#utility.yul\":7496:7559   */\n      tag_86\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":7377:7569   */\n      pop\n        /* \"#utility.yul\":7641:7691   */\n      tag_197\n        /* \"#utility.yul\":7685:7689   */\n      0x20\n        /* \"#utility.yul\":7678:7683   */\n      dup5\n        /* \"#utility.yul\":7674:7690   */\n      add\n        /* \"#utility.yul\":7667:7672   */\n      dup5\n        /* \"#utility.yul\":7641:7691   */\n      tag_90\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":7704:7767   */\n      tag_198\n        /* \"#utility.yul\":7761:7765   */\n      0x20\n        /* \"#utility.yul\":7756:7759   */\n      dup7\n        /* \"#utility.yul\":7752:7766   */\n      add\n        /* \"#utility.yul\":7738:7750   */\n      dup3\n        /* \"#utility.yul\":7704:7767   */\n      tag_91\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":7579:7777   */\n      pop\n        /* \"#utility.yul\":7847:7897   */\n      tag_199\n        /* \"#utility.yul\":7891:7895   */\n      0x40\n        /* \"#utility.yul\":7884:7889   */\n      dup5\n        /* \"#utility.yul\":7880:7896   */\n      add\n        /* \"#utility.yul\":7873:7878   */\n      dup5\n        /* \"#utility.yul\":7847:7897   */\n      tag_90\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":7910:7973   */\n      tag_200\n        /* \"#utility.yul\":7967:7971   */\n      0x40\n        /* \"#utility.yul\":7962:7965   */\n      dup7\n        /* \"#utility.yul\":7958:7972   */\n      add\n        /* \"#utility.yul\":7944:7956   */\n      dup3\n        /* \"#utility.yul\":7910:7973   */\n      tag_91\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":7787:7983   */\n      pop\n        /* \"#utility.yul\":8051:8101   */\n      tag_201\n        /* \"#utility.yul\":8095:8099   */\n      0x60\n        /* \"#utility.yul\":8088:8093   */\n      dup5\n        /* \"#utility.yul\":8084:8100   */\n      add\n        /* \"#utility.yul\":8077:8082   */\n      dup5\n        /* \"#utility.yul\":8051:8101   */\n      tag_85\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":8114:8177   */\n      tag_202\n        /* \"#utility.yul\":8171:8175   */\n      0x60\n        /* \"#utility.yul\":8166:8169   */\n      dup7\n        /* \"#utility.yul\":8162:8176   */\n      add\n        /* \"#utility.yul\":8148:8160   */\n      dup3\n        /* \"#utility.yul\":8114:8177   */\n      tag_86\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":7993:8187   */\n      pop\n        /* \"#utility.yul\":8266:8327   */\n      tag_203\n        /* \"#utility.yul\":8321:8325   */\n      0x80\n        /* \"#utility.yul\":8314:8319   */\n      dup5\n        /* \"#utility.yul\":8310:8326   */\n      add\n        /* \"#utility.yul\":8303:8308   */\n      dup5\n        /* \"#utility.yul\":8266:8327   */\n      tag_95\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":8374:8377   */\n      dup6\n        /* \"#utility.yul\":8368:8372   */\n      dup4\n        /* \"#utility.yul\":8364:8378   */\n      sub\n        /* \"#utility.yul\":8357:8361   */\n      0x80\n        /* \"#utility.yul\":8352:8355   */\n      dup8\n        /* \"#utility.yul\":8348:8362   */\n      add\n        /* \"#utility.yul\":8341:8379   */\n      mstore\n        /* \"#utility.yul\":8400:8487   */\n      tag_204\n        /* \"#utility.yul\":8482:8486   */\n      dup4\n        /* \"#utility.yul\":8468:8480   */\n      dup3\n        /* \"#utility.yul\":8454:8466   */\n      dup5\n        /* \"#utility.yul\":8400:8487   */\n      tag_97\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":8392:8487   */\n      swap3\n      pop\n        /* \"#utility.yul\":8197:8498   */\n      pop\n      pop\n        /* \"#utility.yul\":8565:8615   */\n      tag_205\n        /* \"#utility.yul\":8609:8613   */\n      0xa0\n        /* \"#utility.yul\":8602:8607   */\n      dup5\n        /* \"#utility.yul\":8598:8614   */\n      add\n        /* \"#utility.yul\":8591:8596   */\n      dup5\n        /* \"#utility.yul\":8565:8615   */\n      tag_85\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":8628:8691   */\n      tag_206\n        /* \"#utility.yul\":8685:8689   */\n      0xa0\n        /* \"#utility.yul\":8680:8683   */\n      dup7\n        /* \"#utility.yul\":8676:8690   */\n      add\n        /* \"#utility.yul\":8662:8674   */\n      dup3\n        /* \"#utility.yul\":8628:8691   */\n      tag_86\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":8508:8701   */\n      pop\n        /* \"#utility.yul\":8718:8722   */\n      dup1\n        /* \"#utility.yul\":8711:8722   */\n      swap2\n      pop\n        /* \"#utility.yul\":7331:8728   */\n      pop\n        /* \"#utility.yul\":7203:8728   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8734:9115   */\n    tag_13:\n        /* \"#utility.yul\":8881:8885   */\n      0x00\n        /* \"#utility.yul\":8919:8921   */\n      0x20\n        /* \"#utility.yul\":8908:8917   */\n      dup3\n        /* \"#utility.yul\":8904:8922   */\n      add\n        /* \"#utility.yul\":8896:8922   */\n      swap1\n      pop\n        /* \"#utility.yul\":8968:8977   */\n      dup2\n        /* \"#utility.yul\":8962:8966   */\n      dup2\n        /* \"#utility.yul\":8958:8978   */\n      sub\n        /* \"#utility.yul\":8954:8955   */\n      0x00\n        /* \"#utility.yul\":8943:8952   */\n      dup4\n        /* \"#utility.yul\":8939:8956   */\n      add\n        /* \"#utility.yul\":8932:8979   */\n      mstore\n        /* \"#utility.yul\":8996:9108   */\n      tag_208\n        /* \"#utility.yul\":9103:9107   */\n      dup2\n        /* \"#utility.yul\":9094:9100   */\n      dup5\n        /* \"#utility.yul\":8996:9108   */\n      tag_98\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":8988:9108   */\n      swap1\n      pop\n        /* \"#utility.yul\":8734:9115   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9121:9301   */\n    tag_30:\n        /* \"#utility.yul\":9169:9246   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9166:9167   */\n      0x00\n        /* \"#utility.yul\":9159:9247   */\n      mstore\n        /* \"#utility.yul\":9266:9270   */\n      0x21\n        /* \"#utility.yul\":9263:9264   */\n      0x04\n        /* \"#utility.yul\":9256:9271   */\n      mstore\n        /* \"#utility.yul\":9290:9294   */\n      0x24\n        /* \"#utility.yul\":9287:9288   */\n      0x00\n        /* \"#utility.yul\":9280:9295   */\n      revert\n        /* \"#utility.yul\":9307:9476   */\n    tag_99:\n        /* \"#utility.yul\":9391:9402   */\n      0x00\n        /* \"#utility.yul\":9425:9431   */\n      dup3\n        /* \"#utility.yul\":9420:9423   */\n      dup3\n        /* \"#utility.yul\":9413:9432   */\n      mstore\n        /* \"#utility.yul\":9465:9469   */\n      0x20\n        /* \"#utility.yul\":9460:9463   */\n      dup3\n        /* \"#utility.yul\":9456:9470   */\n      add\n        /* \"#utility.yul\":9441:9470   */\n      swap1\n      pop\n        /* \"#utility.yul\":9307:9476   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9482:9656   */\n    tag_100:\n        /* \"#utility.yul\":9622:9648   */\n      0x45434453413a20696e76616c6964207369676e61747572650000000000000000\n        /* \"#utility.yul\":9618:9619   */\n      0x00\n        /* \"#utility.yul\":9610:9616   */\n      dup3\n        /* \"#utility.yul\":9606:9620   */\n      add\n        /* \"#utility.yul\":9599:9649   */\n      mstore\n        /* \"#utility.yul\":9482:9656   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9662:10028   */\n    tag_101:\n        /* \"#utility.yul\":9804:9807   */\n      0x00\n        /* \"#utility.yul\":9825:9892   */\n      tag_213\n        /* \"#utility.yul\":9889:9891   */\n      0x18\n        /* \"#utility.yul\":9884:9887   */\n      dup4\n        /* \"#utility.yul\":9825:9892   */\n      tag_99\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":9818:9892   */\n      swap2\n      pop\n        /* \"#utility.yul\":9901:9994   */\n      tag_214\n        /* \"#utility.yul\":9990:9993   */\n      dup3\n        /* \"#utility.yul\":9901:9994   */\n      tag_100\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":10019:10021   */\n      0x20\n        /* \"#utility.yul\":10014:10017   */\n      dup3\n        /* \"#utility.yul\":10010:10022   */\n      add\n        /* \"#utility.yul\":10003:10022   */\n      swap1\n      pop\n        /* \"#utility.yul\":9662:10028   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10034:10453   */\n    tag_41:\n        /* \"#utility.yul\":10200:10204   */\n      0x00\n        /* \"#utility.yul\":10238:10240   */\n      0x20\n        /* \"#utility.yul\":10227:10236   */\n      dup3\n        /* \"#utility.yul\":10223:10241   */\n      add\n        /* \"#utility.yul\":10215:10241   */\n      swap1\n      pop\n        /* \"#utility.yul\":10287:10296   */\n      dup2\n        /* \"#utility.yul\":10281:10285   */\n      dup2\n        /* \"#utility.yul\":10277:10297   */\n      sub\n        /* \"#utility.yul\":10273:10274   */\n      0x00\n        /* \"#utility.yul\":10262:10271   */\n      dup4\n        /* \"#utility.yul\":10258:10275   */\n      add\n        /* \"#utility.yul\":10251:10298   */\n      mstore\n        /* \"#utility.yul\":10315:10446   */\n      tag_216\n        /* \"#utility.yul\":10441:10445   */\n      dup2\n        /* \"#utility.yul\":10315:10446   */\n      tag_101\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":10307:10446   */\n      swap1\n      pop\n        /* \"#utility.yul\":10034:10453   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10459:10640   */\n    tag_102:\n        /* \"#utility.yul\":10599:10632   */\n      0x45434453413a20696e76616c6964207369676e6174757265206c656e67746800\n        /* \"#utility.yul\":10595:10596   */\n      0x00\n        /* \"#utility.yul\":10587:10593   */\n      dup3\n        /* \"#utility.yul\":10583:10597   */\n      add\n        /* \"#utility.yul\":10576:10633   */\n      mstore\n        /* \"#utility.yul\":10459:10640   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10646:11012   */\n    tag_103:\n        /* \"#utility.yul\":10788:10791   */\n      0x00\n        /* \"#utility.yul\":10809:10876   */\n      tag_219\n        /* \"#utility.yul\":10873:10875   */\n      0x1f\n        /* \"#utility.yul\":10868:10871   */\n      dup4\n        /* \"#utility.yul\":10809:10876   */\n      tag_99\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":10802:10876   */\n      swap2\n      pop\n        /* \"#utility.yul\":10885:10978   */\n      tag_220\n        /* \"#utility.yul\":10974:10977   */\n      dup3\n        /* \"#utility.yul\":10885:10978   */\n      tag_102\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":11003:11005   */\n      0x20\n        /* \"#utility.yul\":10998:11001   */\n      dup3\n        /* \"#utility.yul\":10994:11006   */\n      add\n        /* \"#utility.yul\":10987:11006   */\n      swap1\n      pop\n        /* \"#utility.yul\":10646:11012   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11018:11437   */\n    tag_49:\n        /* \"#utility.yul\":11184:11188   */\n      0x00\n        /* \"#utility.yul\":11222:11224   */\n      0x20\n        /* \"#utility.yul\":11211:11220   */\n      dup3\n        /* \"#utility.yul\":11207:11225   */\n      add\n        /* \"#utility.yul\":11199:11225   */\n      swap1\n      pop\n        /* \"#utility.yul\":11271:11280   */\n      dup2\n        /* \"#utility.yul\":11265:11269   */\n      dup2\n        /* \"#utility.yul\":11261:11281   */\n      sub\n        /* \"#utility.yul\":11257:11258   */\n      0x00\n        /* \"#utility.yul\":11246:11255   */\n      dup4\n        /* \"#utility.yul\":11242:11259   */\n      add\n        /* \"#utility.yul\":11235:11282   */\n      mstore\n        /* \"#utility.yul\":11299:11430   */\n      tag_222\n        /* \"#utility.yul\":11425:11429   */\n      dup2\n        /* \"#utility.yul\":11299:11430   */\n      tag_103\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":11291:11430   */\n      swap1\n      pop\n        /* \"#utility.yul\":11018:11437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11443:11664   */\n    tag_104:\n        /* \"#utility.yul\":11583:11617   */\n      0x45434453413a20696e76616c6964207369676e6174757265202773272076616c\n        /* \"#utility.yul\":11579:11580   */\n      0x00\n        /* \"#utility.yul\":11571:11577   */\n      dup3\n        /* \"#utility.yul\":11567:11581   */\n      add\n        /* \"#utility.yul\":11560:11618   */\n      mstore\n        /* \"#utility.yul\":11652:11656   */\n      0x7565000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11647:11649   */\n      0x20\n        /* \"#utility.yul\":11639:11645   */\n      dup3\n        /* \"#utility.yul\":11635:11650   */\n      add\n        /* \"#utility.yul\":11628:11657   */\n      mstore\n        /* \"#utility.yul\":11443:11664   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11670:12036   */\n    tag_105:\n        /* \"#utility.yul\":11812:11815   */\n      0x00\n        /* \"#utility.yul\":11833:11900   */\n      tag_225\n        /* \"#utility.yul\":11897:11899   */\n      0x22\n        /* \"#utility.yul\":11892:11895   */\n      dup4\n        /* \"#utility.yul\":11833:11900   */\n      tag_99\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":11826:11900   */\n      swap2\n      pop\n        /* \"#utility.yul\":11909:12002   */\n      tag_226\n        /* \"#utility.yul\":11998:12001   */\n      dup3\n        /* \"#utility.yul\":11909:12002   */\n      tag_104\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":12027:12029   */\n      0x40\n        /* \"#utility.yul\":12022:12025   */\n      dup3\n        /* \"#utility.yul\":12018:12030   */\n      add\n        /* \"#utility.yul\":12011:12030   */\n      swap1\n      pop\n        /* \"#utility.yul\":11670:12036   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12042:12461   */\n    tag_57:\n        /* \"#utility.yul\":12208:12212   */\n      0x00\n        /* \"#utility.yul\":12246:12248   */\n      0x20\n        /* \"#utility.yul\":12235:12244   */\n      dup3\n        /* \"#utility.yul\":12231:12249   */\n      add\n        /* \"#utility.yul\":12223:12249   */\n      swap1\n      pop\n        /* \"#utility.yul\":12295:12304   */\n      dup2\n        /* \"#utility.yul\":12289:12293   */\n      dup2\n        /* \"#utility.yul\":12285:12305   */\n      sub\n        /* \"#utility.yul\":12281:12282   */\n      0x00\n        /* \"#utility.yul\":12270:12279   */\n      dup4\n        /* \"#utility.yul\":12266:12283   */\n      add\n        /* \"#utility.yul\":12259:12306   */\n      mstore\n        /* \"#utility.yul\":12323:12454   */\n      tag_228\n        /* \"#utility.yul\":12449:12453   */\n      dup2\n        /* \"#utility.yul\":12323:12454   */\n      tag_105\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":12315:12454   */\n      swap1\n      pop\n        /* \"#utility.yul\":12042:12461   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12467:12544   */\n    tag_106:\n        /* \"#utility.yul\":12504:12511   */\n      0x00\n        /* \"#utility.yul\":12533:12538   */\n      dup2\n        /* \"#utility.yul\":12522:12538   */\n      swap1\n      pop\n        /* \"#utility.yul\":12467:12544   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12550:12668   */\n    tag_107:\n        /* \"#utility.yul\":12637:12661   */\n      tag_231\n        /* \"#utility.yul\":12655:12660   */\n      dup2\n        /* \"#utility.yul\":12637:12661   */\n      tag_106\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":12632:12635   */\n      dup3\n        /* \"#utility.yul\":12625:12662   */\n      mstore\n        /* \"#utility.yul\":12550:12668   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12674:12760   */\n    tag_108:\n        /* \"#utility.yul\":12709:12716   */\n      0x00\n        /* \"#utility.yul\":12749:12753   */\n      0xff\n        /* \"#utility.yul\":12742:12747   */\n      dup3\n        /* \"#utility.yul\":12738:12754   */\n      and\n        /* \"#utility.yul\":12727:12754   */\n      swap1\n      pop\n        /* \"#utility.yul\":12674:12760   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12766:12878   */\n    tag_109:\n        /* \"#utility.yul\":12849:12871   */\n      tag_234\n        /* \"#utility.yul\":12865:12870   */\n      dup2\n        /* \"#utility.yul\":12849:12871   */\n      tag_108\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":12844:12847   */\n      dup3\n        /* \"#utility.yul\":12837:12872   */\n      mstore\n        /* \"#utility.yul\":12766:12878   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12884:13429   */\n    tag_61:\n        /* \"#utility.yul\":13057:13061   */\n      0x00\n        /* \"#utility.yul\":13095:13098   */\n      0x80\n        /* \"#utility.yul\":13084:13093   */\n      dup3\n        /* \"#utility.yul\":13080:13099   */\n      add\n        /* \"#utility.yul\":13072:13099   */\n      swap1\n      pop\n        /* \"#utility.yul\":13109:13180   */\n      tag_236\n        /* \"#utility.yul\":13177:13178   */\n      0x00\n        /* \"#utility.yul\":13166:13175   */\n      dup4\n        /* \"#utility.yul\":13162:13179   */\n      add\n        /* \"#utility.yul\":13153:13159   */\n      dup8\n        /* \"#utility.yul\":13109:13180   */\n      tag_107\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":13190:13258   */\n      tag_237\n        /* \"#utility.yul\":13254:13256   */\n      0x20\n        /* \"#utility.yul\":13243:13252   */\n      dup4\n        /* \"#utility.yul\":13239:13257   */\n      add\n        /* \"#utility.yul\":13230:13236   */\n      dup7\n        /* \"#utility.yul\":13190:13258   */\n      tag_109\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":13268:13340   */\n      tag_238\n        /* \"#utility.yul\":13336:13338   */\n      0x40\n        /* \"#utility.yul\":13325:13334   */\n      dup4\n        /* \"#utility.yul\":13321:13339   */\n      add\n        /* \"#utility.yul\":13312:13318   */\n      dup6\n        /* \"#utility.yul\":13268:13340   */\n      tag_107\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":13350:13422   */\n      tag_239\n        /* \"#utility.yul\":13418:13420   */\n      0x60\n        /* \"#utility.yul\":13407:13416   */\n      dup4\n        /* \"#utility.yul\":13403:13421   */\n      add\n        /* \"#utility.yul\":13394:13400   */\n      dup5\n        /* \"#utility.yul\":13350:13422   */\n      tag_107\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":12884:13429   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206dd46b7b5dab6507d30838e8413f4747573551c9990c32986110e745f8a0ffbb64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "610a66610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c80634f5fdbe51461003a575b600080fd5b610054600480360381019061004f91906104fd565b61006a565b60405161006191906105b6565b60405180910390f35b60006100a6826100988560405160200161008491906107ea565b6040516020818303038152906040526100ae565b6100bf90919063ffffffff16565b905092915050565b600081805190602001209050919050565b60008060006100ce85856100e6565b915091506100db81610137565b819250505092915050565b60008060418351036101275760008060006020860151925060408601519150606086015160001a905061011b8782858561029d565b94509450505050610130565b60006002915091505b9250929050565b6000600481111561014b5761014a61080c565b5b81600481111561015e5761015d61080c565b5b031561029a57600160048111156101785761017761080c565b5b81600481111561018b5761018a61080c565b5b036101cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c290610898565b60405180910390fd5b600260048111156101df576101de61080c565b5b8160048111156101f2576101f161080c565b5b03610232576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022990610904565b60405180910390fd5b600360048111156102465761024561080c565b5b8160048111156102595761025861080c565b5b03610299576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029090610996565b60405180910390fd5b5b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156102d8576000600391509150610376565b6000600187878787604051600081526020016040526040516102fd94939291906109eb565b6020604051602081039080840390855afa15801561031f573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361036d57600060019250925050610376565b80600092509250505b94509492505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600060c082840312156103ae576103ad610393565b5b81905092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61040a826103c1565b810181811067ffffffffffffffff82111715610429576104286103d2565b5b80604052505050565b600061043c61037f565b90506104488282610401565b919050565b600067ffffffffffffffff821115610468576104676103d2565b5b610471826103c1565b9050602081019050919050565b82818337600083830152505050565b60006104a061049b8461044d565b610432565b9050828152602081018484840111156104bc576104bb6103bc565b5b6104c784828561047e565b509392505050565b600082601f8301126104e4576104e36103b7565b5b81356104f484826020860161048d565b91505092915050565b6000806040838503121561051457610513610389565b5b600083013567ffffffffffffffff8111156105325761053161038e565b5b61053e85828601610398565b925050602083013567ffffffffffffffff81111561055f5761055e61038e565b5b61056b858286016104cf565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105a082610575565b9050919050565b6105b081610595565b82525050565b60006020820190506105cb60008301846105a7565b92915050565b6105da81610595565b81146105e557600080fd5b50565b6000813590506105f7816105d1565b92915050565b600061060c60208401846105e8565b905092915050565b61061d81610595565b82525050565b6000819050919050565b61063681610623565b811461064157600080fd5b50565b6000813590506106538161062d565b92915050565b60006106686020840184610644565b905092915050565b61067981610623565b82525050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126106ab576106aa610689565b5b83810192508235915060208301925067ffffffffffffffff8211156106d3576106d261067f565b5b6001820236038313156106e9576106e8610684565b5b509250929050565b600082825260208201905092915050565b600061070e83856106f1565b935061071b83858461047e565b610724836103c1565b840190509392505050565b600060c0830161074260008401846105fd565b61074f6000860182610614565b5061075d6020840184610659565b61076a6020860182610670565b506107786040840184610659565b6107856040860182610670565b5061079360608401846105fd565b6107a06060860182610614565b506107ae608084018461068e565b85830360808701526107c1838284610702565b925050506107d260a08401846105fd565b6107df60a0860182610614565b508091505092915050565b60006020820190508181036000830152610804818461072f565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600082825260208201905092915050565b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b600061088260188361083b565b915061088d8261084c565b602082019050919050565b600060208201905081810360008301526108b181610875565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b60006108ee601f8361083b565b91506108f9826108b8565b602082019050919050565b6000602082019050818103600083015261091d816108e1565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b600061098060228361083b565b915061098b82610924565b604082019050919050565b600060208201905081810360008301526109af81610973565b9050919050565b6000819050919050565b6109c9816109b6565b82525050565b600060ff82169050919050565b6109e5816109cf565b82525050565b6000608082019050610a0060008301876109c0565b610a0d60208301866109dc565b610a1a60408301856109c0565b610a2760608301846109c0565b9594505050505056fea26469706673582212206dd46b7b5dab6507d30838e8413f4747573551c9990c32986110e745f8a0ffbb64736f6c63430008110033",
							"opcodes": "PUSH2 0xA66 PUSH2 0x53 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x46 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F5FDBE5 EQ PUSH2 0x3A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x54 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F SWAP2 SWAP1 PUSH2 0x4FD JUMP JUMPDEST PUSH2 0x6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61 SWAP2 SWAP1 PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0xA6 DUP3 PUSH2 0x98 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0xAE JUMP JUMPDEST PUSH2 0xBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xCE DUP6 DUP6 PUSH2 0xE6 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xDB DUP2 PUSH2 0x137 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x41 DUP4 MLOAD SUB PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x11B DUP8 DUP3 DUP6 DUP6 PUSH2 0x29D JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x130 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x14B JUMPI PUSH2 0x14A PUSH2 0x80C JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x15E JUMPI PUSH2 0x15D PUSH2 0x80C JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x29A JUMPI PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x178 JUMPI PUSH2 0x177 PUSH2 0x80C JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x18B JUMPI PUSH2 0x18A PUSH2 0x80C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C2 SWAP1 PUSH2 0x898 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1DF JUMPI PUSH2 0x1DE PUSH2 0x80C JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1F2 JUMPI PUSH2 0x1F1 PUSH2 0x80C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x232 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x229 SWAP1 PUSH2 0x904 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x246 JUMPI PUSH2 0x245 PUSH2 0x80C JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x259 JUMPI PUSH2 0x258 PUSH2 0x80C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x299 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x290 SWAP1 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x376 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x9EB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x31F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x36D JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x376 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AE JUMPI PUSH2 0x3AD PUSH2 0x393 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x40A DUP3 PUSH2 0x3C1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x429 JUMPI PUSH2 0x428 PUSH2 0x3D2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43C PUSH2 0x37F JUMP JUMPDEST SWAP1 POP PUSH2 0x448 DUP3 DUP3 PUSH2 0x401 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x468 JUMPI PUSH2 0x467 PUSH2 0x3D2 JUMP JUMPDEST JUMPDEST PUSH2 0x471 DUP3 PUSH2 0x3C1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A0 PUSH2 0x49B DUP5 PUSH2 0x44D JUMP JUMPDEST PUSH2 0x432 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4BC JUMPI PUSH2 0x4BB PUSH2 0x3BC JUMP JUMPDEST JUMPDEST PUSH2 0x4C7 DUP5 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4E4 JUMPI PUSH2 0x4E3 PUSH2 0x3B7 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4F4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x48D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x514 JUMPI PUSH2 0x513 PUSH2 0x389 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x532 JUMPI PUSH2 0x531 PUSH2 0x38E JUMP JUMPDEST JUMPDEST PUSH2 0x53E DUP6 DUP3 DUP7 ADD PUSH2 0x398 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x55F JUMPI PUSH2 0x55E PUSH2 0x38E JUMP JUMPDEST JUMPDEST PUSH2 0x56B DUP6 DUP3 DUP7 ADD PUSH2 0x4CF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A0 DUP3 PUSH2 0x575 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5B0 DUP2 PUSH2 0x595 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5CB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5DA DUP2 PUSH2 0x595 JUMP JUMPDEST DUP2 EQ PUSH2 0x5E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5F7 DUP2 PUSH2 0x5D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x60C PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x5E8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x61D DUP2 PUSH2 0x595 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x636 DUP2 PUSH2 0x623 JUMP JUMPDEST DUP2 EQ PUSH2 0x641 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x653 DUP2 PUSH2 0x62D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x668 PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x644 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x679 DUP2 PUSH2 0x623 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x6AB JUMPI PUSH2 0x6AA PUSH2 0x689 JUMP JUMPDEST JUMPDEST DUP4 DUP2 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x6D3 JUMPI PUSH2 0x6D2 PUSH2 0x67F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x6E9 JUMPI PUSH2 0x6E8 PUSH2 0x684 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70E DUP4 DUP6 PUSH2 0x6F1 JUMP JUMPDEST SWAP4 POP PUSH2 0x71B DUP4 DUP6 DUP5 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x724 DUP4 PUSH2 0x3C1 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP4 ADD PUSH2 0x742 PUSH1 0x0 DUP5 ADD DUP5 PUSH2 0x5FD JUMP JUMPDEST PUSH2 0x74F PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x614 JUMP JUMPDEST POP PUSH2 0x75D PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x659 JUMP JUMPDEST PUSH2 0x76A PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x670 JUMP JUMPDEST POP PUSH2 0x778 PUSH1 0x40 DUP5 ADD DUP5 PUSH2 0x659 JUMP JUMPDEST PUSH2 0x785 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x670 JUMP JUMPDEST POP PUSH2 0x793 PUSH1 0x60 DUP5 ADD DUP5 PUSH2 0x5FD JUMP JUMPDEST PUSH2 0x7A0 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x614 JUMP JUMPDEST POP PUSH2 0x7AE PUSH1 0x80 DUP5 ADD DUP5 PUSH2 0x68E JUMP JUMPDEST DUP6 DUP4 SUB PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x7C1 DUP4 DUP3 DUP5 PUSH2 0x702 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x7D2 PUSH1 0xA0 DUP5 ADD DUP5 PUSH2 0x5FD JUMP JUMPDEST PUSH2 0x7DF PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x614 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x804 DUP2 DUP5 PUSH2 0x72F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x882 PUSH1 0x18 DUP4 PUSH2 0x83B JUMP JUMPDEST SWAP2 POP PUSH2 0x88D DUP3 PUSH2 0x84C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8B1 DUP2 PUSH2 0x875 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EE PUSH1 0x1F DUP4 PUSH2 0x83B JUMP JUMPDEST SWAP2 POP PUSH2 0x8F9 DUP3 PUSH2 0x8B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x91D DUP2 PUSH2 0x8E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x980 PUSH1 0x22 DUP4 PUSH2 0x83B JUMP JUMPDEST SWAP2 POP PUSH2 0x98B DUP3 PUSH2 0x924 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9AF DUP2 PUSH2 0x973 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C9 DUP2 PUSH2 0x9B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9E5 DUP2 PUSH2 0x9CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xA00 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0xA0D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x9DC JUMP JUMPDEST PUSH2 0xA1A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0xA27 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x9C0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xD46B7B5DAB6507D30838E8413F47 SELFBALANCE JUMPI CALLDATALOAD MLOAD 0xC9 SWAP10 0xC ORIGIN SWAP9 PUSH2 0x10E7 GASLIMIT 0xF8 LOG0 SELFDESTRUCT 0xBB PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "170:596:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_throwError_228": {
									"entryPoint": 311,
									"id": 228,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@hash_1457": {
									"entryPoint": 174,
									"id": 1457,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@recover_301": {
									"entryPoint": 191,
									"id": 301,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@signer_1445": {
									"entryPoint": 106,
									"id": 1445,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tryRecover_274": {
									"entryPoint": 230,
									"id": 274,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@tryRecover_442": {
									"entryPoint": 669,
									"id": 442,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 1165,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 1231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_swapData_$1356_calldata_ptr": {
									"entryPoint": 920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_swapData_$1356_calldata_ptrt_bytes_memory_ptr": {
									"entryPoint": 1277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 1556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack_library": {
									"entryPoint": 1447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 2496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr": {
									"entryPoint": 1794,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2273,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_swapData_$1356_calldata_ptr_to_t_struct$_swapData_$1356_memory_ptr_fromStack": {
									"entryPoint": 1839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 1648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 2524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_library_reversed": {
									"entryPoint": 1462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": 2539,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_swapData_$1356_calldata_ptr__to_t_struct$_swapData_$1356_memory_ptr__fromStack_reversed": {
									"entryPoint": 2026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 895,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 1101,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr": {
									"entryPoint": 1777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"calldata_access_t_address": {
									"entryPoint": 1533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"calldata_access_t_bytes_calldata_ptr": {
									"entryPoint": 1678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"calldata_access_t_uint256": {
									"entryPoint": 1625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 1150,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 1025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 2060,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 978,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_0803104b3ab68501accf02de57372b8e5e6e1582158b771d3f89279dc6822fe2": {
									"entryPoint": 1663,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 951,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d": {
									"entryPoint": 915,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_3894daff73bdbb8963c284e167b207f7abade3c031c50828ea230a16bdbc0f20": {
									"entryPoint": 1668,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 956,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 910,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_db64ea6d4a12deece376118739de8d9f517a2db5b58ea2ca332ea908c04c71d4": {
									"entryPoint": 1673,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 905,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be": {
									"entryPoint": 2124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77": {
									"entryPoint": 2232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd": {
									"entryPoint": 2340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13432:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:5"
														}
													]
												},
												"name": "revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "580:153:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "620:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d",
																				"nodeType": "YulIdentifier",
																				"src": "622:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "622:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "622:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "601:3:5"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "606:6:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "597:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "597:16:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "615:3:5",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "593:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "593:26:5"
															},
															"nodeType": "YulIf",
															"src": "590:113:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "712:15:5",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "721:6:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "712:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_swapData_$1356_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "558:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "566:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "574:5:5",
														"type": ""
													}
												],
												"src": "500:233:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "828:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "845:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "848:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "838:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "838:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "838:12:5"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "739:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "951:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "968:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "971:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "961:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "961:12:5"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "862:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1033:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1043:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1061:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1068:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1057:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1057:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1077:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1073:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1073:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1053:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1053:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1043:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1016:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1026:6:5",
														"type": ""
													}
												],
												"src": "985:102:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1121:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1138:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1141:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1131:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1131:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1131:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1235:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1238:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1228:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1228:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1228:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1259:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1262:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1252:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1252:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1252:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1093:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1322:238:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1332:58:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1354:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "1384:4:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1362:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1362:27:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1350:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1350:40:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1336:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1501:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1503:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1503:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1503:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1444:10:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1456:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1441:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1441:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1480:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1492:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1477:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1477:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1438:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1438:62:5"
															},
															"nodeType": "YulIf",
															"src": "1435:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1543:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1532:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1532:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1532:22:5"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1308:6:5",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1316:4:5",
														"type": ""
													}
												],
												"src": "1279:281:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1607:88:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1617:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1627:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1627:20:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1676:6:5"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1684:4:5"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1656:19:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1656:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1656:33:5"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1591:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1600:6:5",
														"type": ""
													}
												],
												"src": "1566:129:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1767:241:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1872:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1874:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1874:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1874:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1844:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1852:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1841:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:30:5"
															},
															"nodeType": "YulIf",
															"src": "1838:56:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1904:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1934:6:5"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1912:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1912:29:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1904:4:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1978:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1990:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1986:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1986:15:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1978:4:5"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1751:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1762:4:5",
														"type": ""
													}
												],
												"src": "1701:307:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2078:82:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2101:3:5"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2106:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2111:6:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2088:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2088:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2088:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2138:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2143:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2134:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2134:16:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2152:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2127:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2127:27:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2127:27:5"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2060:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2065:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2070:6:5",
														"type": ""
													}
												],
												"src": "2014:146:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2249:340:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2259:74:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2325:6:5"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2284:40:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2284:48:5"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2268:15:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2268:65:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2259:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2349:5:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2356:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2342:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2342:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2342:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2372:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2387:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2394:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2383:16:5"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2376:3:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2437:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2439:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2439:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2439:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2418:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2423:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2414:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2414:16:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2432:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2411:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2411:25:5"
															},
															"nodeType": "YulIf",
															"src": "2408:112:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2566:3:5"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2571:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2576:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2529:36:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2529:54:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2529:54:5"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2222:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2227:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2235:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2243:5:5",
														"type": ""
													}
												],
												"src": "2166:423:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2669:277:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2718:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2720:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2720:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2720:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2697:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2705:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2693:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2693:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2712:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2689:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2689:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2682:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2682:35:5"
															},
															"nodeType": "YulIf",
															"src": "2679:122:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2810:34:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2837:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2824:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2824:20:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2814:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2853:87:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2913:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2921:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2909:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2909:17:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2928:6:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2936:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2862:46:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2862:78:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2853:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2647:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2655:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2663:5:5",
														"type": ""
													}
												],
												"src": "2608:338:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3072:748:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3118:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3120:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3120:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3120:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3093:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3102:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3089:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3114:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3085:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3085:32:5"
															},
															"nodeType": "YulIf",
															"src": "3082:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "3211:305:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3226:45:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3257:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3268:1:5",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3253:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3253:17:5"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3240:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3240:31:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3230:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3318:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3320:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3320:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3320:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3290:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3298:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3287:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3287:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "3284:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3415:91:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3478:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3489:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3474:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3474:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3498:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_swapData_$1356_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3425:48:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3425:81:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3415:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3526:287:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3541:46:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3572:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3583:2:5",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3568:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3568:18:5"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3555:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3555:32:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3545:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3634:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3636:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3636:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3636:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3606:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3614:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3603:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3603:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "3600:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3731:72:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3775:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3786:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3771:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3771:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3795:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3741:29:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3741:62:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3731:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_swapData_$1356_calldata_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3034:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3045:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3057:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3065:6:5",
														"type": ""
													}
												],
												"src": "2952:868:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3871:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3881:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3896:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3903:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3892:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3892:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3881:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3853:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3863:7:5",
														"type": ""
													}
												],
												"src": "3826:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4003:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4013:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4042:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4024:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4024:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4013:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3985:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3995:7:5",
														"type": ""
													}
												],
												"src": "3958:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4133:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4150:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4173:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4155:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4155:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4143:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4143:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4143:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4121:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4128:3:5",
														"type": ""
													}
												],
												"src": "4060:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4298:132:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4308:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4320:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4331:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4316:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4316:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4308:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4396:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4409:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4420:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4405:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4405:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "4344:51:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4344:79:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4344:79:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4270:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4282:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4293:4:5",
														"type": ""
													}
												],
												"src": "4192:238:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4479:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4536:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4545:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4548:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4538:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4538:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4538:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4502:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4527:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4509:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4509:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4499:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4499:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4492:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4492:43:5"
															},
															"nodeType": "YulIf",
															"src": "4489:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4472:5:5",
														"type": ""
													}
												],
												"src": "4436:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4616:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4626:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4648:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4635:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4635:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4626:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4691:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4664:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4664:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4664:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4594:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4602:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4610:5:5",
														"type": ""
													}
												],
												"src": "4564:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4767:64:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4777:48:5",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4807:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "4816:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4821:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4812:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4812:12:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4786:20:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4786:39:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4777:5:5"
																}
															]
														}
													]
												},
												"name": "calldata_access_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "baseRef",
														"nodeType": "YulTypedName",
														"src": "4744:7:5",
														"type": ""
													},
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4753:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4761:5:5",
														"type": ""
													}
												],
												"src": "4709:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4892:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4909:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4932:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4914:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4914:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4902:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4902:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4902:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4880:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4887:3:5",
														"type": ""
													}
												],
												"src": "4837:108:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4996:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5006:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5017:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5006:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4978:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4988:7:5",
														"type": ""
													}
												],
												"src": "4951:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5077:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5134:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5143:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5146:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5136:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5136:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5136:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5100:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5125:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5107:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5107:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5097:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5097:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5090:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5090:43:5"
															},
															"nodeType": "YulIf",
															"src": "5087:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5070:5:5",
														"type": ""
													}
												],
												"src": "5034:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5214:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5224:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5246:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5233:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5233:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5224:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5289:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5262:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5262:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5262:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5192:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5200:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5208:5:5",
														"type": ""
													}
												],
												"src": "5162:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5365:64:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5375:48:5",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "5405:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "5414:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5419:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5410:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5410:12:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5384:20:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5384:39:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5375:5:5"
																}
															]
														}
													]
												},
												"name": "calldata_access_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "baseRef",
														"nodeType": "YulTypedName",
														"src": "5342:7:5",
														"type": ""
													},
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "5351:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5359:5:5",
														"type": ""
													}
												],
												"src": "5307:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5490:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5507:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5530:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5512:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5512:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5500:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5500:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5500:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5478:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5485:3:5",
														"type": ""
													}
												],
												"src": "5435:108:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5638:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5655:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5658:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5648:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5648:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5648:12:5"
														}
													]
												},
												"name": "revert_error_0803104b3ab68501accf02de57372b8e5e6e1582158b771d3f89279dc6822fe2",
												"nodeType": "YulFunctionDefinition",
												"src": "5549:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5761:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5778:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5781:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5771:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5771:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5771:12:5"
														}
													]
												},
												"name": "revert_error_3894daff73bdbb8963c284e167b207f7abade3c031c50828ea230a16bdbc0f20",
												"nodeType": "YulFunctionDefinition",
												"src": "5672:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5884:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5901:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5904:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5894:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5894:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5894:12:5"
														}
													]
												},
												"name": "revert_error_db64ea6d4a12deece376118739de8d9f517a2db5b58ea2ca332ea908c04c71d4",
												"nodeType": "YulFunctionDefinition",
												"src": "5795:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5996:633:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6006:43:5",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "6045:3:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6032:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6032:17:5"
															},
															"variables": [
																{
																	"name": "rel_offset_of_tail",
																	"nodeType": "YulTypedName",
																	"src": "6010:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6143:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_db64ea6d4a12deece376118739de8d9f517a2db5b58ea2ca332ea908c04c71d4",
																				"nodeType": "YulIdentifier",
																				"src": "6145:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6145:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6145:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "rel_offset_of_tail",
																				"nodeType": "YulIdentifier",
																				"src": "6072:18:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "calldatasize",
																									"nodeType": "YulIdentifier",
																									"src": "6100:12:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6100:14:5"
																							},
																							{
																								"name": "base_ref",
																								"nodeType": "YulIdentifier",
																								"src": "6116:8:5"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "6096:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6096:29:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6131:4:5",
																								"type": "",
																								"value": "0x20"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6137:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "6127:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6127:12:5"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6092:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6092:48:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6068:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6068:73:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6061:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6061:81:5"
															},
															"nodeType": "YulIf",
															"src": "6058:168:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6235:42:5",
															"value": {
																"arguments": [
																	{
																		"name": "rel_offset_of_tail",
																		"nodeType": "YulIdentifier",
																		"src": "6248:18:5"
																	},
																	{
																		"name": "base_ref",
																		"nodeType": "YulIdentifier",
																		"src": "6268:8:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6244:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6244:33:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6235:5:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6287:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6310:5:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6297:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6297:19:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6287:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6325:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6338:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6345:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6334:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6334:16:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6325:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6393:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_0803104b3ab68501accf02de57372b8e5e6e1582158b771d3f89279dc6822fe2",
																				"nodeType": "YulIdentifier",
																				"src": "6395:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6395:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6395:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6365:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6373:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6362:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6362:30:5"
															},
															"nodeType": "YulIf",
															"src": "6359:117:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6539:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_3894daff73bdbb8963c284e167b207f7abade3c031c50828ea230a16bdbc0f20",
																				"nodeType": "YulIdentifier",
																				"src": "6541:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6541:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6541:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6492:5:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "calldatasize",
																					"nodeType": "YulIdentifier",
																					"src": "6503:12:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6503:14:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "6523:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6531:4:5",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6519:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6519:17:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6499:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6499:38:5"
																	}
																],
																"functionName": {
																	"name": "sgt",
																	"nodeType": "YulIdentifier",
																	"src": "6488:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6488:50:5"
															},
															"nodeType": "YulIf",
															"src": "6485:137:5"
														}
													]
												},
												"name": "calldata_access_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base_ref",
														"nodeType": "YulTypedName",
														"src": "5964:8:5",
														"type": ""
													},
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "5974:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5982:5:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5989:6:5",
														"type": ""
													}
												],
												"src": "5918:711:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6720:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6737:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6742:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6730:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6730:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6730:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6758:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6777:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6782:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6773:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6773:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6758:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6692:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6697:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6708:11:5",
														"type": ""
													}
												],
												"src": "6635:158:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6911:204:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6921:67:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6976:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6981:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6928:47:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6928:60:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6921:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "7035:5:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7042:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7047:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "6998:36:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6998:56:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6998:56:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7063:46:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7074:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7101:6:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7079:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7079:29:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7070:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7070:39:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7063:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "6884:5:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6891:6:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6899:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6907:3:5",
														"type": ""
													}
												],
												"src": "6821:294:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7331:1397:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7341:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7357:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7362:4:5",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7353:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7353:14:5"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "7345:4:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7377:192:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7413:70:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7459:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7470:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7477:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7466:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7466:16:5"
																			}
																		],
																		"functionName": {
																			"name": "calldata_access_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7433:25:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7433:50:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "7417:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "7530:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "7548:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7553:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7544:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7544:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7496:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7496:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7496:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7579:198:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7621:70:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7667:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7678:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7685:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7674:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7674:16:5"
																			}
																		],
																		"functionName": {
																			"name": "calldata_access_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7641:25:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7641:50:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "7625:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "7738:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "7756:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7761:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7752:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7752:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7704:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7704:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7704:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7787:196:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7827:70:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7873:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7884:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7891:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7880:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7880:16:5"
																			}
																		],
																		"functionName": {
																			"name": "calldata_access_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7847:25:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7847:50:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "7831:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "7944:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "7962:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7967:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7958:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7958:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7910:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7910:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7910:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7993:194:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8031:70:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8077:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8088:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8095:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8084:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8084:16:5"
																			}
																		],
																		"functionName": {
																			"name": "calldata_access_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8051:25:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8051:50:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "8035:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "8148:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "8166:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8171:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8162:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8162:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8114:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8114:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "8114:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8197:301:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8232:95:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8303:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8314:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8321:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8310:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8310:16:5"
																			}
																		],
																		"functionName": {
																			"name": "calldata_access_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8266:36:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8266:61:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "8236:12:5",
																			"type": ""
																		},
																		{
																			"name": "memberValue1",
																			"nodeType": "YulTypedName",
																			"src": "8250:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "8352:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8357:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8348:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8348:14:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nodeType": "YulIdentifier",
																						"src": "8368:4:5"
																					},
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "8374:3:5"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "8364:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8364:14:5"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "8341:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8341:38:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "8341:38:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8392:95:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "8454:12:5"
																			},
																			{
																				"name": "memberValue1",
																				"nodeType": "YulIdentifier",
																				"src": "8468:12:5"
																			},
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8482:4:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8400:53:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8400:87:5"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nodeType": "YulIdentifier",
																			"src": "8392:4:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8508:193:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8545:70:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8591:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8602:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8609:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8598:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8598:16:5"
																			}
																		],
																		"functionName": {
																			"name": "calldata_access_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8565:25:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8565:50:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "8549:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "8662:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "8680:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8685:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8676:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8676:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8628:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8628:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "8628:63:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8711:11:5",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "8718:4:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8711:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_swapData_$1356_calldata_ptr_to_t_struct$_swapData_$1356_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7310:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7317:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7326:3:5",
														"type": ""
													}
												],
												"src": "7203:1525:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8886:229:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8896:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8908:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8919:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8904:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8904:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8896:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8943:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8954:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8939:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8939:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8962:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8968:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8958:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8958:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8932:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8932:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8932:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8988:120:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9094:6:5"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9103:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_swapData_$1356_calldata_ptr_to_t_struct$_swapData_$1356_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8996:97:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8996:112:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8988:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_swapData_$1356_calldata_ptr__to_t_struct$_swapData_$1356_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8858:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8870:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8881:4:5",
														"type": ""
													}
												],
												"src": "8734:381:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9149:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9166:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9169:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9159:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9159:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9159:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9263:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9266:4:5",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9256:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9256:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9256:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9287:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9290:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9280:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9280:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9280:15:5"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "9121:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9403:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9420:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9425:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9413:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9413:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9413:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9441:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9460:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9465:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9456:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9456:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9441:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9375:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9380:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9391:11:5",
														"type": ""
													}
												],
												"src": "9307:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9588:68:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9610:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9618:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9606:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9606:14:5"
																	},
																	{
																		"hexValue": "45434453413a20696e76616c6964207369676e6174757265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9622:26:5",
																		"type": "",
																		"value": "ECDSA: invalid signature"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9599:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9599:50:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9599:50:5"
														}
													]
												},
												"name": "store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9580:6:5",
														"type": ""
													}
												],
												"src": "9482:174:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9808:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9818:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9884:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9889:2:5",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9825:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9825:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9818:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9990:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
																	"nodeType": "YulIdentifier",
																	"src": "9901:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9901:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9901:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10003:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10014:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10019:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10010:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10010:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10003:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9796:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9804:3:5",
														"type": ""
													}
												],
												"src": "9662:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10205:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10215:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10227:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10238:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10223:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10223:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10215:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10262:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10273:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10258:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10258:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10281:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10287:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10277:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10277:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10251:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10251:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10251:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10307:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10441:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10315:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10315:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10307:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10185:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10200:4:5",
														"type": ""
													}
												],
												"src": "10034:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10565:75:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10587:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10595:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10583:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10583:14:5"
																	},
																	{
																		"hexValue": "45434453413a20696e76616c6964207369676e6174757265206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10599:33:5",
																		"type": "",
																		"value": "ECDSA: invalid signature length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10576:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10576:57:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10576:57:5"
														}
													]
												},
												"name": "store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10557:6:5",
														"type": ""
													}
												],
												"src": "10459:181:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10792:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10802:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10868:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10873:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10809:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10809:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10802:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10974:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
																	"nodeType": "YulIdentifier",
																	"src": "10885:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10885:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10885:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10987:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10998:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11003:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10994:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10994:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10987:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10780:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10788:3:5",
														"type": ""
													}
												],
												"src": "10646:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11189:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11199:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11211:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11222:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11207:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11207:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11199:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11246:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11257:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11242:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11242:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11265:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11271:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11261:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11261:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11235:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11235:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11235:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11291:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11425:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11299:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11299:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11291:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11169:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11184:4:5",
														"type": ""
													}
												],
												"src": "11018:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11549:115:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11571:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11579:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11567:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11567:14:5"
																	},
																	{
																		"hexValue": "45434453413a20696e76616c6964207369676e6174757265202773272076616c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11583:34:5",
																		"type": "",
																		"value": "ECDSA: invalid signature 's' val"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11560:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11560:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11560:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11639:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11647:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11635:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11635:15:5"
																	},
																	{
																		"hexValue": "7565",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11652:4:5",
																		"type": "",
																		"value": "ue"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11628:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11628:29:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11628:29:5"
														}
													]
												},
												"name": "store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11541:6:5",
														"type": ""
													}
												],
												"src": "11443:221:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11816:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11826:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11892:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11897:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11833:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11833:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11826:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11998:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
																	"nodeType": "YulIdentifier",
																	"src": "11909:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11909:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11909:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12011:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12022:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12027:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12018:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12018:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12011:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11804:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11812:3:5",
														"type": ""
													}
												],
												"src": "11670:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12213:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12223:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12235:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12246:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12231:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12231:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12223:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12270:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12281:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12266:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12266:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12289:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12295:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12285:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12285:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12259:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12259:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12259:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12315:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12449:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12323:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12323:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12315:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12193:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12208:4:5",
														"type": ""
													}
												],
												"src": "12042:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12512:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12522:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12533:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12522:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12494:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12504:7:5",
														"type": ""
													}
												],
												"src": "12467:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12615:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12632:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12655:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "12637:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12637:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12625:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12625:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12625:37:5"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12603:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12610:3:5",
														"type": ""
													}
												],
												"src": "12550:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12717:43:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12727:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12742:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12749:4:5",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12738:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12738:16:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12727:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12699:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12709:7:5",
														"type": ""
													}
												],
												"src": "12674:86:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12827:51:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12844:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12865:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "12849:15:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12849:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12837:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12837:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12837:35:5"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12815:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12822:3:5",
														"type": ""
													}
												],
												"src": "12766:112:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13062:367:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13072:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13084:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13095:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13080:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13080:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13072:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13153:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13166:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13177:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13162:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13162:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13109:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13109:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13109:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13230:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13243:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13254:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13239:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13239:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13190:39:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13190:68:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13190:68:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13312:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13325:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13336:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13321:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13321:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13268:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13268:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13268:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13394:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13407:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13418:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13403:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13403:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13350:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13350:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13350:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13010:9:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13022:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13030:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13038:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13046:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13057:4:5",
														"type": ""
													}
												],
												"src": "12884:545:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() {\n        revert(0, 0)\n    }\n\n    // struct IExchangeAggregator.swapData\n    function abi_decode_t_struct$_swapData_$1356_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 192) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_struct$_swapData_$1356_calldata_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_struct$_swapData_$1356_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function calldata_access_t_address(baseRef, ptr) -> value {\n        value := abi_decode_t_address(ptr, add(ptr, 32))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function calldata_access_t_uint256(baseRef, ptr) -> value {\n        value := abi_decode_t_uint256(ptr, add(ptr, 32))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function revert_error_0803104b3ab68501accf02de57372b8e5e6e1582158b771d3f89279dc6822fe2() {\n        revert(0, 0)\n    }\n\n    function revert_error_3894daff73bdbb8963c284e167b207f7abade3c031c50828ea230a16bdbc0f20() {\n        revert(0, 0)\n    }\n\n    function revert_error_db64ea6d4a12deece376118739de8d9f517a2db5b58ea2ca332ea908c04c71d4() {\n        revert(0, 0)\n    }\n\n    function calldata_access_t_bytes_calldata_ptr(base_ref, ptr) -> value, length {\n        let rel_offset_of_tail := calldataload(ptr)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_db64ea6d4a12deece376118739de8d9f517a2db5b58ea2ca332ea908c04c71d4() }\n        value := add(rel_offset_of_tail, base_ref)\n\n        length := calldataload(value)\n        value := add(value, 0x20)\n        if gt(length, 0xffffffffffffffff) { revert_error_0803104b3ab68501accf02de57372b8e5e6e1582158b771d3f89279dc6822fe2() }\n        if sgt(value, sub(calldatasize(), mul(length, 0x01))) { revert_error_3894daff73bdbb8963c284e167b207f7abade3c031c50828ea230a16bdbc0f20() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // struct IExchangeAggregator.swapData -> struct IExchangeAggregator.swapData\n    function abi_encode_t_struct$_swapData_$1356_calldata_ptr_to_t_struct$_swapData_$1356_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0xc0)\n\n        {\n            // input\n\n            let memberValue0 := calldata_access_t_address(value, add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // totalAmount\n\n            let memberValue0 := calldata_access_t_uint256(value, add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // feeAmount\n\n            let memberValue0 := calldata_access_t_uint256(value, add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // swapper\n\n            let memberValue0 := calldata_access_t_address(value, add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // data\n\n            let memberValue0, memberValue1 := calldata_access_t_bytes_calldata_ptr(value, add(value, 0x80))\n\n            mstore(add(pos, 0x80), sub(tail, pos))\n            tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr(memberValue0, memberValue1, tail)\n\n        }\n\n        {\n            // sender\n\n            let memberValue0 := calldata_access_t_address(value, add(value, 0xa0))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0xa0))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_swapData_$1356_calldata_ptr__to_t_struct$_swapData_$1356_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_swapData_$1356_calldata_ptr_to_t_struct$_swapData_$1356_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature length\")\n\n    }\n\n    function abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature 's' val\")\n\n        mstore(add(memPtr, 32), \"ue\")\n\n    }\n\n    function abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c80634f5fdbe51461003a575b600080fd5b610054600480360381019061004f91906104fd565b61006a565b60405161006191906105b6565b60405180910390f35b60006100a6826100988560405160200161008491906107ea565b6040516020818303038152906040526100ae565b6100bf90919063ffffffff16565b905092915050565b600081805190602001209050919050565b60008060006100ce85856100e6565b915091506100db81610137565b819250505092915050565b60008060418351036101275760008060006020860151925060408601519150606086015160001a905061011b8782858561029d565b94509450505050610130565b60006002915091505b9250929050565b6000600481111561014b5761014a61080c565b5b81600481111561015e5761015d61080c565b5b031561029a57600160048111156101785761017761080c565b5b81600481111561018b5761018a61080c565b5b036101cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c290610898565b60405180910390fd5b600260048111156101df576101de61080c565b5b8160048111156101f2576101f161080c565b5b03610232576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022990610904565b60405180910390fd5b600360048111156102465761024561080c565b5b8160048111156102595761025861080c565b5b03610299576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029090610996565b60405180910390fd5b5b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156102d8576000600391509150610376565b6000600187878787604051600081526020016040526040516102fd94939291906109eb565b6020604051602081039080840390855afa15801561031f573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361036d57600060019250925050610376565b80600092509250505b94509492505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600060c082840312156103ae576103ad610393565b5b81905092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61040a826103c1565b810181811067ffffffffffffffff82111715610429576104286103d2565b5b80604052505050565b600061043c61037f565b90506104488282610401565b919050565b600067ffffffffffffffff821115610468576104676103d2565b5b610471826103c1565b9050602081019050919050565b82818337600083830152505050565b60006104a061049b8461044d565b610432565b9050828152602081018484840111156104bc576104bb6103bc565b5b6104c784828561047e565b509392505050565b600082601f8301126104e4576104e36103b7565b5b81356104f484826020860161048d565b91505092915050565b6000806040838503121561051457610513610389565b5b600083013567ffffffffffffffff8111156105325761053161038e565b5b61053e85828601610398565b925050602083013567ffffffffffffffff81111561055f5761055e61038e565b5b61056b858286016104cf565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105a082610575565b9050919050565b6105b081610595565b82525050565b60006020820190506105cb60008301846105a7565b92915050565b6105da81610595565b81146105e557600080fd5b50565b6000813590506105f7816105d1565b92915050565b600061060c60208401846105e8565b905092915050565b61061d81610595565b82525050565b6000819050919050565b61063681610623565b811461064157600080fd5b50565b6000813590506106538161062d565b92915050565b60006106686020840184610644565b905092915050565b61067981610623565b82525050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126106ab576106aa610689565b5b83810192508235915060208301925067ffffffffffffffff8211156106d3576106d261067f565b5b6001820236038313156106e9576106e8610684565b5b509250929050565b600082825260208201905092915050565b600061070e83856106f1565b935061071b83858461047e565b610724836103c1565b840190509392505050565b600060c0830161074260008401846105fd565b61074f6000860182610614565b5061075d6020840184610659565b61076a6020860182610670565b506107786040840184610659565b6107856040860182610670565b5061079360608401846105fd565b6107a06060860182610614565b506107ae608084018461068e565b85830360808701526107c1838284610702565b925050506107d260a08401846105fd565b6107df60a0860182610614565b508091505092915050565b60006020820190508181036000830152610804818461072f565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600082825260208201905092915050565b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b600061088260188361083b565b915061088d8261084c565b602082019050919050565b600060208201905081810360008301526108b181610875565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b60006108ee601f8361083b565b91506108f9826108b8565b602082019050919050565b6000602082019050818103600083015261091d816108e1565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b600061098060228361083b565b915061098b82610924565b604082019050919050565b600060208201905081810360008301526109af81610973565b9050919050565b6000819050919050565b6109c9816109b6565b82525050565b600060ff82169050919050565b6109e5816109cf565b82525050565b6000608082019050610a0060008301876109c0565b610a0d60208301866109dc565b610a1a60408301856109c0565b610a2760608301846109c0565b9594505050505056fea26469706673582212206dd46b7b5dab6507d30838e8413f4747573551c9990c32986110e745f8a0ffbb64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F5FDBE5 EQ PUSH2 0x3A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x54 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F SWAP2 SWAP1 PUSH2 0x4FD JUMP JUMPDEST PUSH2 0x6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61 SWAP2 SWAP1 PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0xA6 DUP3 PUSH2 0x98 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0xAE JUMP JUMPDEST PUSH2 0xBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xCE DUP6 DUP6 PUSH2 0xE6 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xDB DUP2 PUSH2 0x137 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x41 DUP4 MLOAD SUB PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x11B DUP8 DUP3 DUP6 DUP6 PUSH2 0x29D JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x130 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x14B JUMPI PUSH2 0x14A PUSH2 0x80C JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x15E JUMPI PUSH2 0x15D PUSH2 0x80C JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x29A JUMPI PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x178 JUMPI PUSH2 0x177 PUSH2 0x80C JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x18B JUMPI PUSH2 0x18A PUSH2 0x80C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C2 SWAP1 PUSH2 0x898 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1DF JUMPI PUSH2 0x1DE PUSH2 0x80C JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1F2 JUMPI PUSH2 0x1F1 PUSH2 0x80C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x232 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x229 SWAP1 PUSH2 0x904 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x246 JUMPI PUSH2 0x245 PUSH2 0x80C JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x259 JUMPI PUSH2 0x258 PUSH2 0x80C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x299 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x290 SWAP1 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x376 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x9EB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x31F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x36D JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x376 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AE JUMPI PUSH2 0x3AD PUSH2 0x393 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x40A DUP3 PUSH2 0x3C1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x429 JUMPI PUSH2 0x428 PUSH2 0x3D2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43C PUSH2 0x37F JUMP JUMPDEST SWAP1 POP PUSH2 0x448 DUP3 DUP3 PUSH2 0x401 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x468 JUMPI PUSH2 0x467 PUSH2 0x3D2 JUMP JUMPDEST JUMPDEST PUSH2 0x471 DUP3 PUSH2 0x3C1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A0 PUSH2 0x49B DUP5 PUSH2 0x44D JUMP JUMPDEST PUSH2 0x432 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4BC JUMPI PUSH2 0x4BB PUSH2 0x3BC JUMP JUMPDEST JUMPDEST PUSH2 0x4C7 DUP5 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4E4 JUMPI PUSH2 0x4E3 PUSH2 0x3B7 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4F4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x48D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x514 JUMPI PUSH2 0x513 PUSH2 0x389 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x532 JUMPI PUSH2 0x531 PUSH2 0x38E JUMP JUMPDEST JUMPDEST PUSH2 0x53E DUP6 DUP3 DUP7 ADD PUSH2 0x398 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x55F JUMPI PUSH2 0x55E PUSH2 0x38E JUMP JUMPDEST JUMPDEST PUSH2 0x56B DUP6 DUP3 DUP7 ADD PUSH2 0x4CF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A0 DUP3 PUSH2 0x575 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5B0 DUP2 PUSH2 0x595 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5CB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5DA DUP2 PUSH2 0x595 JUMP JUMPDEST DUP2 EQ PUSH2 0x5E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5F7 DUP2 PUSH2 0x5D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x60C PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x5E8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x61D DUP2 PUSH2 0x595 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x636 DUP2 PUSH2 0x623 JUMP JUMPDEST DUP2 EQ PUSH2 0x641 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x653 DUP2 PUSH2 0x62D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x668 PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x644 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x679 DUP2 PUSH2 0x623 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x6AB JUMPI PUSH2 0x6AA PUSH2 0x689 JUMP JUMPDEST JUMPDEST DUP4 DUP2 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x6D3 JUMPI PUSH2 0x6D2 PUSH2 0x67F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x6E9 JUMPI PUSH2 0x6E8 PUSH2 0x684 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70E DUP4 DUP6 PUSH2 0x6F1 JUMP JUMPDEST SWAP4 POP PUSH2 0x71B DUP4 DUP6 DUP5 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x724 DUP4 PUSH2 0x3C1 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP4 ADD PUSH2 0x742 PUSH1 0x0 DUP5 ADD DUP5 PUSH2 0x5FD JUMP JUMPDEST PUSH2 0x74F PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x614 JUMP JUMPDEST POP PUSH2 0x75D PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x659 JUMP JUMPDEST PUSH2 0x76A PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x670 JUMP JUMPDEST POP PUSH2 0x778 PUSH1 0x40 DUP5 ADD DUP5 PUSH2 0x659 JUMP JUMPDEST PUSH2 0x785 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x670 JUMP JUMPDEST POP PUSH2 0x793 PUSH1 0x60 DUP5 ADD DUP5 PUSH2 0x5FD JUMP JUMPDEST PUSH2 0x7A0 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x614 JUMP JUMPDEST POP PUSH2 0x7AE PUSH1 0x80 DUP5 ADD DUP5 PUSH2 0x68E JUMP JUMPDEST DUP6 DUP4 SUB PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x7C1 DUP4 DUP3 DUP5 PUSH2 0x702 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x7D2 PUSH1 0xA0 DUP5 ADD DUP5 PUSH2 0x5FD JUMP JUMPDEST PUSH2 0x7DF PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x614 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x804 DUP2 DUP5 PUSH2 0x72F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x882 PUSH1 0x18 DUP4 PUSH2 0x83B JUMP JUMPDEST SWAP2 POP PUSH2 0x88D DUP3 PUSH2 0x84C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8B1 DUP2 PUSH2 0x875 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EE PUSH1 0x1F DUP4 PUSH2 0x83B JUMP JUMPDEST SWAP2 POP PUSH2 0x8F9 DUP3 PUSH2 0x8B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x91D DUP2 PUSH2 0x8E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x980 PUSH1 0x22 DUP4 PUSH2 0x83B JUMP JUMPDEST SWAP2 POP PUSH2 0x98B DUP3 PUSH2 0x924 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9AF DUP2 PUSH2 0x973 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C9 DUP2 PUSH2 0x9B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9E5 DUP2 PUSH2 0x9CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xA00 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0xA0D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x9DC JUMP JUMPDEST PUSH2 0xA1A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0xA27 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x9C0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xD46B7B5DAB6507D30838E8413F47 SELFBALANCE JUMPI CALLDATALOAD MLOAD 0xC9 SWAP10 0xC ORIGIN SWAP9 PUSH2 0x10E7 GASLIMIT 0xF8 LOG0 SELFDESTRUCT 0xBB PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "170:596:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;490:165;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;588:7;613:35;644:3;613:22;629:4;618:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;613:4;:22::i;:::-;:30;;:35;;;;:::i;:::-;606:42;;490:165;;;;:::o;661:103::-;716:7;752:4;742:15;;;;;;735:22;;661:103;;;:::o;3661:227:1:-;3739:7;3759:17;3778:18;3800:27;3811:4;3817:9;3800:10;:27::i;:::-;3758:69;;;;3837:18;3849:5;3837:11;:18::i;:::-;3872:9;3865:16;;;;3661:227;;;;:::o;2145:730::-;2226:7;2235:12;2283:2;2263:9;:16;:22;2259:610;;2301:9;2324;2347:7;2599:4;2588:9;2584:20;2578:27;2573:32;;2648:4;2637:9;2633:20;2627:27;2622:32;;2705:4;2694:9;2690:20;2684:27;2681:1;2676:36;2671:41;;2746:25;2757:4;2763:1;2766;2769;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;2818:1;2822:35;2802:56;;;;2145:730;;;;;;:::o;570:511::-;647:20;638:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;634:441;683:7;634:441;743:29;734:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;730:345;;788:34;;;;;;;;;;:::i;:::-;;;;;;;;730:345;852:35;843:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;839:236;;903:41;;;;;;;;;;:::i;:::-;;;;;;;;839:236;974:30;965:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;961:114;;1020:44;;;;;;;;;;:::i;:::-;;;;;;;;961:114;570:511;;:::o;5069:1494::-;5195:7;5204:12;6119:66;6114:1;6106:10;;:79;6102:161;;;6217:1;6221:30;6201:51;;;;;;6102:161;6357:14;6374:24;6384:4;6390:1;6393;6396;6374:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6357:41;;6430:1;6412:20;;:6;:20;;;6408:101;;6464:1;6468:29;6448:50;;;;;;;6408:101;6527:6;6535:20;6519:37;;;;;5069:1494;;;;;;;;:::o;7:75:5:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;500:233;574:5;615:3;606:6;601:3;597:16;593:26;590:113;;;622:79;;:::i;:::-;590:113;721:6;712:15;;500:233;;;;:::o;739:117::-;848:1;845;838:12;862:117;971:1;968;961:12;985:102;1026:6;1077:2;1073:7;1068:2;1061:5;1057:14;1053:28;1043:38;;985:102;;;:::o;1093:180::-;1141:77;1138:1;1131:88;1238:4;1235:1;1228:15;1262:4;1259:1;1252:15;1279:281;1362:27;1384:4;1362:27;:::i;:::-;1354:6;1350:40;1492:6;1480:10;1477:22;1456:18;1444:10;1441:34;1438:62;1435:88;;;1503:18;;:::i;:::-;1435:88;1543:10;1539:2;1532:22;1322:238;1279:281;;:::o;1566:129::-;1600:6;1627:20;;:::i;:::-;1617:30;;1656:33;1684:4;1676:6;1656:33;:::i;:::-;1566:129;;;:::o;1701:307::-;1762:4;1852:18;1844:6;1841:30;1838:56;;;1874:18;;:::i;:::-;1838:56;1912:29;1934:6;1912:29;:::i;:::-;1904:37;;1996:4;1990;1986:15;1978:23;;1701:307;;;:::o;2014:146::-;2111:6;2106:3;2101;2088:30;2152:1;2143:6;2138:3;2134:16;2127:27;2014:146;;;:::o;2166:423::-;2243:5;2268:65;2284:48;2325:6;2284:48;:::i;:::-;2268:65;:::i;:::-;2259:74;;2356:6;2349:5;2342:21;2394:4;2387:5;2383:16;2432:3;2423:6;2418:3;2414:16;2411:25;2408:112;;;2439:79;;:::i;:::-;2408:112;2529:54;2576:6;2571:3;2566;2529:54;:::i;:::-;2249:340;2166:423;;;;;:::o;2608:338::-;2663:5;2712:3;2705:4;2697:6;2693:17;2689:27;2679:122;;2720:79;;:::i;:::-;2679:122;2837:6;2824:20;2862:78;2936:3;2928:6;2921:4;2913:6;2909:17;2862:78;:::i;:::-;2853:87;;2669:277;2608:338;;;;:::o;2952:868::-;3057:6;3065;3114:2;3102:9;3093:7;3089:23;3085:32;3082:119;;;3120:79;;:::i;:::-;3082:119;3268:1;3257:9;3253:17;3240:31;3298:18;3290:6;3287:30;3284:117;;;3320:79;;:::i;:::-;3284:117;3425:81;3498:7;3489:6;3478:9;3474:22;3425:81;:::i;:::-;3415:91;;3211:305;3583:2;3572:9;3568:18;3555:32;3614:18;3606:6;3603:30;3600:117;;;3636:79;;:::i;:::-;3600:117;3741:62;3795:7;3786:6;3775:9;3771:22;3741:62;:::i;:::-;3731:72;;3526:287;2952:868;;;;;:::o;3826:126::-;3863:7;3903:42;3896:5;3892:54;3881:65;;3826:126;;;:::o;3958:96::-;3995:7;4024:24;4042:5;4024:24;:::i;:::-;4013:35;;3958:96;;;:::o;4060:126::-;4155:24;4173:5;4155:24;:::i;:::-;4150:3;4143:37;4060:126;;:::o;4192:238::-;4293:4;4331:2;4320:9;4316:18;4308:26;;4344:79;4420:1;4409:9;4405:17;4396:6;4344:79;:::i;:::-;4192:238;;;;:::o;4436:122::-;4509:24;4527:5;4509:24;:::i;:::-;4502:5;4499:35;4489:63;;4548:1;4545;4538:12;4489:63;4436:122;:::o;4564:139::-;4610:5;4648:6;4635:20;4626:29;;4664:33;4691:5;4664:33;:::i;:::-;4564:139;;;;:::o;4709:122::-;4761:5;4786:39;4821:2;4816:3;4812:12;4807:3;4786:39;:::i;:::-;4777:48;;4709:122;;;;:::o;4837:108::-;4914:24;4932:5;4914:24;:::i;:::-;4909:3;4902:37;4837:108;;:::o;4951:77::-;4988:7;5017:5;5006:16;;4951:77;;;:::o;5034:122::-;5107:24;5125:5;5107:24;:::i;:::-;5100:5;5097:35;5087:63;;5146:1;5143;5136:12;5087:63;5034:122;:::o;5162:139::-;5208:5;5246:6;5233:20;5224:29;;5262:33;5289:5;5262:33;:::i;:::-;5162:139;;;;:::o;5307:122::-;5359:5;5384:39;5419:2;5414:3;5410:12;5405:3;5384:39;:::i;:::-;5375:48;;5307:122;;;;:::o;5435:108::-;5512:24;5530:5;5512:24;:::i;:::-;5507:3;5500:37;5435:108;;:::o;5549:117::-;5658:1;5655;5648:12;5672:117;5781:1;5778;5771:12;5795:117;5904:1;5901;5894:12;5918:711;5982:5;5989:6;6045:3;6032:17;6137:1;6131:4;6127:12;6116:8;6100:14;6096:29;6092:48;6072:18;6068:73;6058:168;;6145:79;;:::i;:::-;6058:168;6268:8;6248:18;6244:33;6235:42;;6310:5;6297:19;6287:29;;6345:4;6338:5;6334:16;6325:25;;6373:18;6365:6;6362:30;6359:117;;;6395:79;;:::i;:::-;6359:117;6531:4;6523:6;6519:17;6503:14;6499:38;6492:5;6488:50;6485:137;;;6541:79;;:::i;:::-;6485:137;5996:633;5918:711;;;;;:::o;6635:158::-;6708:11;6742:6;6737:3;6730:19;6782:4;6777:3;6773:14;6758:29;;6635:158;;;;:::o;6821:294::-;6907:3;6928:60;6981:6;6976:3;6928:60;:::i;:::-;6921:67;;6998:56;7047:6;7042:3;7035:5;6998:56;:::i;:::-;7079:29;7101:6;7079:29;:::i;:::-;7074:3;7070:39;7063:46;;6821:294;;;;;:::o;7203:1525::-;7326:3;7362:4;7357:3;7353:14;7433:50;7477:4;7470:5;7466:16;7459:5;7433:50;:::i;:::-;7496:63;7553:4;7548:3;7544:14;7530:12;7496:63;:::i;:::-;7377:192;7641:50;7685:4;7678:5;7674:16;7667:5;7641:50;:::i;:::-;7704:63;7761:4;7756:3;7752:14;7738:12;7704:63;:::i;:::-;7579:198;7847:50;7891:4;7884:5;7880:16;7873:5;7847:50;:::i;:::-;7910:63;7967:4;7962:3;7958:14;7944:12;7910:63;:::i;:::-;7787:196;8051:50;8095:4;8088:5;8084:16;8077:5;8051:50;:::i;:::-;8114:63;8171:4;8166:3;8162:14;8148:12;8114:63;:::i;:::-;7993:194;8266:61;8321:4;8314:5;8310:16;8303:5;8266:61;:::i;:::-;8374:3;8368:4;8364:14;8357:4;8352:3;8348:14;8341:38;8400:87;8482:4;8468:12;8454;8400:87;:::i;:::-;8392:95;;8197:301;;8565:50;8609:4;8602:5;8598:16;8591:5;8565:50;:::i;:::-;8628:63;8685:4;8680:3;8676:14;8662:12;8628:63;:::i;:::-;8508:193;8718:4;8711:11;;7331:1397;7203:1525;;;;:::o;8734:381::-;8881:4;8919:2;8908:9;8904:18;8896:26;;8968:9;8962:4;8958:20;8954:1;8943:9;8939:17;8932:47;8996:112;9103:4;9094:6;8996:112;:::i;:::-;8988:120;;8734:381;;;;:::o;9121:180::-;9169:77;9166:1;9159:88;9266:4;9263:1;9256:15;9290:4;9287:1;9280:15;9307:169;9391:11;9425:6;9420:3;9413:19;9465:4;9460:3;9456:14;9441:29;;9307:169;;;;:::o;9482:174::-;9622:26;9618:1;9610:6;9606:14;9599:50;9482:174;:::o;9662:366::-;9804:3;9825:67;9889:2;9884:3;9825:67;:::i;:::-;9818:74;;9901:93;9990:3;9901:93;:::i;:::-;10019:2;10014:3;10010:12;10003:19;;9662:366;;;:::o;10034:419::-;10200:4;10238:2;10227:9;10223:18;10215:26;;10287:9;10281:4;10277:20;10273:1;10262:9;10258:17;10251:47;10315:131;10441:4;10315:131;:::i;:::-;10307:139;;10034:419;;;:::o;10459:181::-;10599:33;10595:1;10587:6;10583:14;10576:57;10459:181;:::o;10646:366::-;10788:3;10809:67;10873:2;10868:3;10809:67;:::i;:::-;10802:74;;10885:93;10974:3;10885:93;:::i;:::-;11003:2;10998:3;10994:12;10987:19;;10646:366;;;:::o;11018:419::-;11184:4;11222:2;11211:9;11207:18;11199:26;;11271:9;11265:4;11261:20;11257:1;11246:9;11242:17;11235:47;11299:131;11425:4;11299:131;:::i;:::-;11291:139;;11018:419;;;:::o;11443:221::-;11583:34;11579:1;11571:6;11567:14;11560:58;11652:4;11647:2;11639:6;11635:15;11628:29;11443:221;:::o;11670:366::-;11812:3;11833:67;11897:2;11892:3;11833:67;:::i;:::-;11826:74;;11909:93;11998:3;11909:93;:::i;:::-;12027:2;12022:3;12018:12;12011:19;;11670:366;;;:::o;12042:419::-;12208:4;12246:2;12235:9;12231:18;12223:26;;12295:9;12289:4;12285:20;12281:1;12270:9;12266:17;12259:47;12323:131;12449:4;12323:131;:::i;:::-;12315:139;;12042:419;;;:::o;12467:77::-;12504:7;12533:5;12522:16;;12467:77;;;:::o;12550:118::-;12637:24;12655:5;12637:24;:::i;:::-;12632:3;12625:37;12550:118;;:::o;12674:86::-;12709:7;12749:4;12742:5;12738:16;12727:27;;12674:86;;;:::o;12766:112::-;12849:22;12865:5;12849:22;:::i;:::-;12844:3;12837:35;12766:112;;:::o;12884:545::-;13057:4;13095:3;13084:9;13080:19;13072:27;;13109:71;13177:1;13166:9;13162:17;13153:6;13109:71;:::i;:::-;13190:68;13254:2;13243:9;13239:18;13230:6;13190:68;:::i;:::-;13268:72;13336:2;13325:9;13321:18;13312:6;13268:72;:::i;:::-;13350;13418:2;13407:9;13403:18;13394:6;13350:72;:::i;:::-;12884:545;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "532400",
								"executionCost": "593",
								"totalCost": "532993"
							},
							"external": {
								"signer(IExchangeAggregator.swapData,bytes)": "infinite"
							},
							"internal": {
								"checkSig(address,bytes memory,bytes memory)": "infinite",
								"hash(bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 170,
									"end": 766,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 766,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 766,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 170,
									"end": 766,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 170,
									"end": 766,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 170,
									"end": 766,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 170,
									"end": 766,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 170,
									"end": 766,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 170,
									"end": 766,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 170,
									"end": 766,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 766,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 170,
									"end": 766,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 170,
									"end": 766,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 170,
									"end": 766,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 170,
									"end": 766,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 170,
									"end": 766,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 766,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 766,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 170,
									"end": 766,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 766,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 170,
									"end": 766,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 170,
									"end": 766,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 170,
									"end": 766,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 766,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 170,
									"end": 766,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 170,
									"end": 766,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 170,
									"end": 766,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 170,
									"end": 766,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 766,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 170,
									"end": 766,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 170,
									"end": 766,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 170,
									"end": 766,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 170,
									"end": 766,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 170,
									"end": 766,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 170,
									"end": 766,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206dd46b7b5dab6507d30838e8413f4747573551c9990c32986110e745f8a0ffbb64736f6c63430008110033",
									".code": [
										{
											"begin": 170,
											"end": 766,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 170,
											"end": 766,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 170,
											"end": 766,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 766,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 170,
											"end": 766,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 766,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 170,
											"end": 766,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 766,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 170,
											"end": 766,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 170,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 766,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 766,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 766,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 170,
											"end": 766,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 170,
											"end": 766,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 170,
											"end": 766,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 766,
											"name": "PUSH",
											"source": 4,
											"value": "4F5FDBE5"
										},
										{
											"begin": 170,
											"end": 766,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 766,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 766,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 766,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 170,
											"end": 766,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 766,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 766,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 490,
											"end": 655,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 490,
											"end": 655,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 490,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 490,
											"end": 655,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 490,
											"end": 655,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 490,
											"end": 655,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 490,
											"end": 655,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 490,
											"end": 655,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 490,
											"end": 655,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 490,
											"end": 655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 490,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 490,
											"end": 655,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 490,
											"end": 655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 490,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 490,
											"end": 655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 490,
											"end": 655,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 490,
											"end": 655,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 490,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 490,
											"end": 655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 490,
											"end": 655,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 490,
											"end": 655,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 490,
											"end": 655,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 490,
											"end": 655,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 490,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 490,
											"end": 655,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 490,
											"end": 655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 490,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 490,
											"end": 655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 490,
											"end": 655,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 490,
											"end": 655,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 490,
											"end": 655,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 490,
											"end": 655,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 490,
											"end": 655,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 490,
											"end": 655,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 490,
											"end": 655,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 490,
											"end": 655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 490,
											"end": 655,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 490,
											"end": 655,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 490,
											"end": 655,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 595,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 613,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 644,
											"end": 647,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 613,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 629,
											"end": 633,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 618,
											"end": 634,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 618,
											"end": 634,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 618,
											"end": 634,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 618,
											"end": 634,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 618,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 618,
											"end": 634,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 618,
											"end": 634,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 618,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 618,
											"end": 634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 634,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 618,
											"end": 634,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 634,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 618,
											"end": 634,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 618,
											"end": 634,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 618,
											"end": 634,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 618,
											"end": 634,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 618,
											"end": 634,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 618,
											"end": 634,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 618,
											"end": 634,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 618,
											"end": 634,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 618,
											"end": 634,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 618,
											"end": 634,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 618,
											"end": 634,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 613,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 613,
											"end": 635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 613,
											"end": 635,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 613,
											"end": 635,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 613,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 613,
											"end": 643,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 613,
											"end": 648,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 613,
											"end": 648,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 613,
											"end": 648,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 613,
											"end": 648,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 613,
											"end": 648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 613,
											"end": 648,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 613,
											"end": 648,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 606,
											"end": 648,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 606,
											"end": 648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 490,
											"end": 655,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 490,
											"end": 655,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 490,
											"end": 655,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 490,
											"end": 655,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 490,
											"end": 655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 661,
											"end": 764,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 661,
											"end": 764,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 716,
											"end": 723,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 756,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 742,
											"end": 757,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 742,
											"end": 757,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 742,
											"end": 757,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 742,
											"end": 757,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 742,
											"end": 757,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 742,
											"end": 757,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 735,
											"end": 757,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 735,
											"end": 757,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 661,
											"end": 764,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 661,
											"end": 764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 661,
											"end": 764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 661,
											"end": 764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3661,
											"end": 3888,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3661,
											"end": 3888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3739,
											"end": 3746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3759,
											"end": 3776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3811,
											"end": 3815,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3817,
											"end": 3826,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3800,
											"end": 3827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3827,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3800,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3827,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3827,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3849,
											"end": 3854,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3837,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3881,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3865,
											"end": 3881,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3865,
											"end": 3881,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3865,
											"end": 3881,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3865,
											"end": 3881,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3661,
											"end": 3888,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3661,
											"end": 3888,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3661,
											"end": 3888,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3661,
											"end": 3888,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3661,
											"end": 3888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2233,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2285,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2263,
											"end": 2272,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2279,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2285,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2259,
											"end": 2869,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2301,
											"end": 2310,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2324,
											"end": 2333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2347,
											"end": 2354,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2599,
											"end": 2603,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2588,
											"end": 2597,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2605,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2605,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2652,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2637,
											"end": 2646,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2654,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2622,
											"end": 2654,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2622,
											"end": 2654,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2709,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2694,
											"end": 2703,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2684,
											"end": 2711,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2681,
											"end": 2682,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 2712,
											"name": "BYTE",
											"source": 1
										},
										{
											"begin": 2671,
											"end": 2712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2671,
											"end": 2712,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2757,
											"end": 2761,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2764,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2767,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2770,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2746,
											"end": 2771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2869,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2259,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2818,
											"end": 2819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2822,
											"end": 2857,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2802,
											"end": 2858,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2858,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2858,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2858,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2145,
											"end": 2875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 570,
											"end": 1081,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 570,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 647,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 638,
											"end": 667,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 638,
											"end": 667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 638,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 638,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 638,
											"end": 667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 638,
											"end": 667,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 638,
											"end": 667,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 638,
											"end": 643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 638,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 638,
											"end": 667,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 638,
											"end": 667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 638,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 638,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 638,
											"end": 667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 638,
											"end": 667,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 638,
											"end": 667,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 638,
											"end": 667,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 634,
											"end": 1075,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 683,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 634,
											"end": 1075,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 743,
											"end": 772,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 734,
											"end": 772,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 734,
											"end": 772,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 734,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 734,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 734,
											"end": 772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 734,
											"end": 772,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 734,
											"end": 772,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 734,
											"end": 739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 734,
											"end": 772,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 734,
											"end": 772,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 734,
											"end": 772,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 734,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 734,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 734,
											"end": 772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 734,
											"end": 772,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 734,
											"end": 772,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 734,
											"end": 772,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 730,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 730,
											"end": 1075,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 788,
											"end": 822,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 788,
											"end": 822,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 788,
											"end": 822,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 788,
											"end": 822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 788,
											"end": 822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 788,
											"end": 822,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 788,
											"end": 822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 788,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 788,
											"end": 822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 788,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 788,
											"end": 822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 788,
											"end": 822,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 788,
											"end": 822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 788,
											"end": 822,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 788,
											"end": 822,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 788,
											"end": 822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 788,
											"end": 822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 788,
											"end": 822,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 788,
											"end": 822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 788,
											"end": 822,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 730,
											"end": 1075,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 730,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 852,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 843,
											"end": 887,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 843,
											"end": 887,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 843,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 843,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 843,
											"end": 887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 843,
											"end": 887,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 843,
											"end": 887,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 843,
											"end": 848,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 843,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 843,
											"end": 887,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 843,
											"end": 887,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 843,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 843,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 843,
											"end": 887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 843,
											"end": 887,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 843,
											"end": 887,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 843,
											"end": 887,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 839,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 839,
											"end": 1075,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 903,
											"end": 944,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 903,
											"end": 944,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 903,
											"end": 944,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 903,
											"end": 944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 903,
											"end": 944,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 903,
											"end": 944,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 903,
											"end": 944,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 903,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 903,
											"end": 944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 903,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 903,
											"end": 944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 903,
											"end": 944,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 903,
											"end": 944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 903,
											"end": 944,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 903,
											"end": 944,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 903,
											"end": 944,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 903,
											"end": 944,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 903,
											"end": 944,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 903,
											"end": 944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 903,
											"end": 944,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 839,
											"end": 1075,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 839,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 974,
											"end": 1004,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 965,
											"end": 1004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 965,
											"end": 970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 965,
											"end": 1004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 961,
											"end": 1075,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1020,
											"end": 1064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1075,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 961,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 570,
											"end": 1081,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 570,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 570,
											"end": 1081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 570,
											"end": 1081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5069,
											"end": 6563,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5069,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5195,
											"end": 5202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5204,
											"end": 5216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6119,
											"end": 6185,
											"name": "PUSH",
											"source": 1,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 6114,
											"end": 6115,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6106,
											"end": 6116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6106,
											"end": 6116,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 6106,
											"end": 6185,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6102,
											"end": 6263,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6102,
											"end": 6263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 6102,
											"end": 6263,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6218,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6251,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6201,
											"end": 6252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 6201,
											"end": 6252,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6102,
											"end": 6263,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 6102,
											"end": 6263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6384,
											"end": 6388,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6390,
											"end": 6391,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6393,
											"end": 6394,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6396,
											"end": 6397,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6374,
											"end": 6398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6430,
											"end": 6431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6412,
											"end": 6432,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6412,
											"end": 6432,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6432,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6412,
											"end": 6432,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6432,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6408,
											"end": 6509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6408,
											"end": 6509,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6464,
											"end": 6465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6468,
											"end": 6497,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6448,
											"end": 6498,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6448,
											"end": 6498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6448,
											"end": 6498,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6448,
											"end": 6498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6448,
											"end": 6498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6448,
											"end": 6498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 6448,
											"end": 6498,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6408,
											"end": 6509,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6408,
											"end": 6509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6535,
											"end": 6555,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6519,
											"end": 6556,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6519,
											"end": 6556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6519,
											"end": 6556,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6519,
											"end": 6556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6519,
											"end": 6556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5069,
											"end": 6563,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5069,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5069,
											"end": 6563,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5069,
											"end": 6563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5069,
											"end": 6563,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5069,
											"end": 6563,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5069,
											"end": 6563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5069,
											"end": 6563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5069,
											"end": 6563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5069,
											"end": 6563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 500,
											"end": 733,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 500,
											"end": 733,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 574,
											"end": 579,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 618,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 606,
											"end": 612,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 601,
											"end": 604,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 597,
											"end": 613,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 593,
											"end": 619,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 590,
											"end": 703,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 590,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 590,
											"end": 703,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 622,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 622,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 622,
											"end": 701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 622,
											"end": 701,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 622,
											"end": 701,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 590,
											"end": 703,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 590,
											"end": 703,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 721,
											"end": 727,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 712,
											"end": 727,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 712,
											"end": 727,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 500,
											"end": 733,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 500,
											"end": 733,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 500,
											"end": 733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 500,
											"end": 733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 500,
											"end": 733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 739,
											"end": 856,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 739,
											"end": 856,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 848,
											"end": 849,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 845,
											"end": 846,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 838,
											"end": 850,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 862,
											"end": 979,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 862,
											"end": 979,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 971,
											"end": 972,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 968,
											"end": 969,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 961,
											"end": 973,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1087,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 985,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1026,
											"end": 1032,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1079,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1073,
											"end": 1080,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1061,
											"end": 1066,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1071,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1043,
											"end": 1081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1043,
											"end": 1081,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1087,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1087,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1087,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1093,
											"end": 1273,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1093,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1141,
											"end": 1218,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1138,
											"end": 1139,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1131,
											"end": 1219,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1242,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1235,
											"end": 1236,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1228,
											"end": 1243,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1262,
											"end": 1266,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1259,
											"end": 1260,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1252,
											"end": 1267,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1279,
											"end": 1560,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1279,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1362,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1384,
											"end": 1388,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1362,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1362,
											"end": 1389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1362,
											"end": 1389,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1362,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1354,
											"end": 1360,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1390,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1498,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1480,
											"end": 1490,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1499,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1456,
											"end": 1474,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1444,
											"end": 1454,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1475,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1500,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1523,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1435,
											"end": 1523,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1503,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1503,
											"end": 1521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1521,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1503,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1523,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1435,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1543,
											"end": 1553,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1539,
											"end": 1541,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 1554,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1560,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1279,
											"end": 1560,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1279,
											"end": 1560,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1279,
											"end": 1560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1695,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1566,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1606,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1627,
											"end": 1647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1617,
											"end": 1647,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1617,
											"end": 1647,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1684,
											"end": 1688,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1676,
											"end": 1682,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1656,
											"end": 1689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1689,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1656,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1695,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1695,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1695,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 2008,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1701,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 1766,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1870,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 1850,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1841,
											"end": 1871,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1894,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1838,
											"end": 1894,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1874,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1874,
											"end": 1892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1892,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1874,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1894,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1838,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1912,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1934,
											"end": 1940,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1912,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1912,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1912,
											"end": 1941,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1912,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1904,
											"end": 1941,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1904,
											"end": 1941,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1996,
											"end": 2000,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 1994,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1986,
											"end": 2001,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1978,
											"end": 2001,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1978,
											"end": 2001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 2008,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 2008,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 2008,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 2008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2160,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2014,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2111,
											"end": 2117,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2106,
											"end": 2109,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2101,
											"end": 2104,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2088,
											"end": 2118,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 2152,
											"end": 2153,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2149,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2141,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2134,
											"end": 2150,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2127,
											"end": 2154,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2166,
											"end": 2589,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2166,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2248,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2284,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2325,
											"end": 2331,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2284,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2284,
											"end": 2332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2284,
											"end": 2332,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2284,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2268,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2268,
											"end": 2333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2268,
											"end": 2333,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2268,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2259,
											"end": 2333,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2259,
											"end": 2333,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2362,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2349,
											"end": 2354,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2342,
											"end": 2363,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2398,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2387,
											"end": 2392,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2383,
											"end": 2399,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2432,
											"end": 2435,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2429,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2421,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2414,
											"end": 2430,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2411,
											"end": 2436,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2408,
											"end": 2520,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2408,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2408,
											"end": 2520,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2439,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2439,
											"end": 2518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2518,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2439,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2408,
											"end": 2520,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2408,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2529,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2576,
											"end": 2582,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 2574,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2566,
											"end": 2569,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2529,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2529,
											"end": 2583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2529,
											"end": 2583,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2529,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2249,
											"end": 2589,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2166,
											"end": 2589,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2166,
											"end": 2589,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2166,
											"end": 2589,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2166,
											"end": 2589,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2166,
											"end": 2589,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2166,
											"end": 2589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2608,
											"end": 2946,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2608,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2668,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2712,
											"end": 2715,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2709,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2697,
											"end": 2703,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2693,
											"end": 2710,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2689,
											"end": 2716,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2679,
											"end": 2801,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2720,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2720,
											"end": 2799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2799,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2720,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 2801,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2679,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2837,
											"end": 2843,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2824,
											"end": 2844,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2862,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2936,
											"end": 2939,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2928,
											"end": 2934,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2921,
											"end": 2925,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2913,
											"end": 2919,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2909,
											"end": 2926,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2862,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2862,
											"end": 2940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2862,
											"end": 2940,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2862,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2853,
											"end": 2940,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2853,
											"end": 2940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2669,
											"end": 2946,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2608,
											"end": 2946,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2608,
											"end": 2946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2608,
											"end": 2946,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2608,
											"end": 2946,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2608,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2952,
											"end": 3820,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2952,
											"end": 3820,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3057,
											"end": 3063,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3065,
											"end": 3071,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3114,
											"end": 3116,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3102,
											"end": 3111,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3093,
											"end": 3100,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3089,
											"end": 3112,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3117,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3120,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 3120,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 3120,
											"end": 3199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3120,
											"end": 3199,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 3120,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3268,
											"end": 3269,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3257,
											"end": 3266,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3253,
											"end": 3270,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3240,
											"end": 3271,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3298,
											"end": 3316,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3290,
											"end": 3296,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3287,
											"end": 3317,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3284,
											"end": 3401,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3284,
											"end": 3401,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 3284,
											"end": 3401,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3320,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 3320,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3320,
											"end": 3399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3320,
											"end": 3399,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 3320,
											"end": 3399,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3284,
											"end": 3401,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 3284,
											"end": 3401,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3425,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 3498,
											"end": 3505,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3489,
											"end": 3495,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3478,
											"end": 3487,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3474,
											"end": 3496,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3425,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 3425,
											"end": 3506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3425,
											"end": 3506,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 3425,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3415,
											"end": 3506,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3415,
											"end": 3506,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3211,
											"end": 3516,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3585,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3572,
											"end": 3581,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3568,
											"end": 3586,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3555,
											"end": 3587,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3614,
											"end": 3632,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3606,
											"end": 3612,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3603,
											"end": 3633,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3600,
											"end": 3717,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3600,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 3600,
											"end": 3717,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3636,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 3636,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3636,
											"end": 3715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3636,
											"end": 3715,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 3636,
											"end": 3715,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3600,
											"end": 3717,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 3600,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3741,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 3795,
											"end": 3802,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3786,
											"end": 3792,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3775,
											"end": 3784,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3741,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 3741,
											"end": 3803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3741,
											"end": 3803,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 3741,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3731,
											"end": 3803,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3731,
											"end": 3803,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3526,
											"end": 3813,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2952,
											"end": 3820,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2952,
											"end": 3820,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2952,
											"end": 3820,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2952,
											"end": 3820,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2952,
											"end": 3820,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2952,
											"end": 3820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3826,
											"end": 3952,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3826,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3863,
											"end": 3870,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3903,
											"end": 3945,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3896,
											"end": 3901,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 3946,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3881,
											"end": 3946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3881,
											"end": 3946,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3826,
											"end": 3952,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3826,
											"end": 3952,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3826,
											"end": 3952,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3826,
											"end": 3952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3958,
											"end": 4054,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3958,
											"end": 4054,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3995,
											"end": 4002,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4024,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 4042,
											"end": 4047,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4024,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4024,
											"end": 4048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4024,
											"end": 4048,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 4024,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4013,
											"end": 4048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4013,
											"end": 4048,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3958,
											"end": 4054,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3958,
											"end": 4054,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3958,
											"end": 4054,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3958,
											"end": 4054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4060,
											"end": 4186,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 4060,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4155,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 4173,
											"end": 4178,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4155,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 4155,
											"end": 4179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4155,
											"end": 4179,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 4155,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4150,
											"end": 4153,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4180,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4060,
											"end": 4186,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4060,
											"end": 4186,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4060,
											"end": 4186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4430,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4192,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4293,
											"end": 4297,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4331,
											"end": 4333,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4320,
											"end": 4329,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4316,
											"end": 4334,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4308,
											"end": 4334,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4308,
											"end": 4334,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4344,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4420,
											"end": 4421,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4409,
											"end": 4418,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4405,
											"end": 4422,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4396,
											"end": 4402,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4344,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 4344,
											"end": 4423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4344,
											"end": 4423,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4344,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4430,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4430,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4430,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4430,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4436,
											"end": 4558,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 4436,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4509,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 4527,
											"end": 4532,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4509,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 4509,
											"end": 4533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4509,
											"end": 4533,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 4509,
											"end": 4533,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4502,
											"end": 4507,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4534,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4489,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 4489,
											"end": 4552,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4548,
											"end": 4549,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4545,
											"end": 4546,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4550,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4489,
											"end": 4552,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 4489,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4436,
											"end": 4558,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4436,
											"end": 4558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4564,
											"end": 4703,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4564,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4615,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 4654,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4635,
											"end": 4655,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4626,
											"end": 4655,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4626,
											"end": 4655,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4664,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 4691,
											"end": 4696,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4664,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 4664,
											"end": 4697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4664,
											"end": 4697,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 4664,
											"end": 4697,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4564,
											"end": 4703,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4564,
											"end": 4703,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4564,
											"end": 4703,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4564,
											"end": 4703,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4564,
											"end": 4703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4709,
											"end": 4831,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 4709,
											"end": 4831,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4766,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4786,
											"end": 4825,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 4821,
											"end": 4823,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4816,
											"end": 4819,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4812,
											"end": 4824,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4807,
											"end": 4810,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4786,
											"end": 4825,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4786,
											"end": 4825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4786,
											"end": 4825,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 4786,
											"end": 4825,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4777,
											"end": 4825,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4777,
											"end": 4825,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4709,
											"end": 4831,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4709,
											"end": 4831,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4709,
											"end": 4831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4709,
											"end": 4831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4709,
											"end": 4831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4837,
											"end": 4945,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 4837,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4914,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 4932,
											"end": 4937,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4914,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 4914,
											"end": 4938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4914,
											"end": 4938,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 4914,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4909,
											"end": 4912,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4902,
											"end": 4939,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4837,
											"end": 4945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4837,
											"end": 4945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4837,
											"end": 4945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4951,
											"end": 5028,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 4951,
											"end": 5028,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4988,
											"end": 4995,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5017,
											"end": 5022,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5006,
											"end": 5022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5006,
											"end": 5022,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4951,
											"end": 5028,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4951,
											"end": 5028,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4951,
											"end": 5028,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4951,
											"end": 5028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5156,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 5034,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5107,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 5125,
											"end": 5130,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5107,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 5107,
											"end": 5131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5107,
											"end": 5131,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 5107,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5100,
											"end": 5105,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5097,
											"end": 5132,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 5087,
											"end": 5150,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5146,
											"end": 5147,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5143,
											"end": 5144,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5136,
											"end": 5148,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5150,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 5087,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5156,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5162,
											"end": 5301,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 5162,
											"end": 5301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5208,
											"end": 5213,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5252,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5233,
											"end": 5253,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5253,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5262,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 5289,
											"end": 5294,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5262,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 5262,
											"end": 5295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5262,
											"end": 5295,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 5262,
											"end": 5295,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5162,
											"end": 5301,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5162,
											"end": 5301,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5162,
											"end": 5301,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5162,
											"end": 5301,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5162,
											"end": 5301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5307,
											"end": 5429,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 5307,
											"end": 5429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5359,
											"end": 5364,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5384,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 5419,
											"end": 5421,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5414,
											"end": 5417,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5410,
											"end": 5422,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5405,
											"end": 5408,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5384,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 5384,
											"end": 5423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5384,
											"end": 5423,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 5384,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5375,
											"end": 5423,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5375,
											"end": 5423,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5307,
											"end": 5429,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5307,
											"end": 5429,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5307,
											"end": 5429,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5307,
											"end": 5429,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5307,
											"end": 5429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5435,
											"end": 5543,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 5435,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5512,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 5530,
											"end": 5535,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5512,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 5512,
											"end": 5536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5512,
											"end": 5536,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 5512,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5507,
											"end": 5510,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5537,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5435,
											"end": 5543,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5435,
											"end": 5543,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5435,
											"end": 5543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5549,
											"end": 5666,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 5549,
											"end": 5666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5658,
											"end": 5659,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5655,
											"end": 5656,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5648,
											"end": 5660,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5672,
											"end": 5789,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 5672,
											"end": 5789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5781,
											"end": 5782,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5771,
											"end": 5783,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5795,
											"end": 5912,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 5795,
											"end": 5912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5904,
											"end": 5905,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5901,
											"end": 5902,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 5906,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5918,
											"end": 6629,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 5918,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5982,
											"end": 5987,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5989,
											"end": 5995,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6045,
											"end": 6048,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6049,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6138,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6131,
											"end": 6135,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6127,
											"end": 6139,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6116,
											"end": 6124,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6100,
											"end": 6114,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 6096,
											"end": 6125,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6092,
											"end": 6140,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6072,
											"end": 6090,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6068,
											"end": 6141,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 6058,
											"end": 6226,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 6058,
											"end": 6226,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6145,
											"end": 6224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 6145,
											"end": 6224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 6145,
											"end": 6224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6145,
											"end": 6224,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 6145,
											"end": 6224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6058,
											"end": 6226,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 6058,
											"end": 6226,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6268,
											"end": 6276,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6248,
											"end": 6266,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6244,
											"end": 6277,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6235,
											"end": 6277,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6235,
											"end": 6277,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6310,
											"end": 6315,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6297,
											"end": 6316,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 6287,
											"end": 6316,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6287,
											"end": 6316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6345,
											"end": 6349,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6338,
											"end": 6343,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6334,
											"end": 6350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6325,
											"end": 6350,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6325,
											"end": 6350,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6373,
											"end": 6391,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6365,
											"end": 6371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6362,
											"end": 6392,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6359,
											"end": 6476,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6359,
											"end": 6476,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 6359,
											"end": 6476,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6395,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 6395,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 6395,
											"end": 6474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6395,
											"end": 6474,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 6395,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6359,
											"end": 6476,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 6359,
											"end": 6476,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6531,
											"end": 6535,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6523,
											"end": 6529,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6519,
											"end": 6536,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 6503,
											"end": 6517,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 6499,
											"end": 6537,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6492,
											"end": 6497,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6488,
											"end": 6538,
											"name": "SGT",
											"source": 5
										},
										{
											"begin": 6485,
											"end": 6622,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6485,
											"end": 6622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 6485,
											"end": 6622,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6541,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 6541,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 6541,
											"end": 6620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6541,
											"end": 6620,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 6541,
											"end": 6620,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6485,
											"end": 6622,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 6485,
											"end": 6622,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5996,
											"end": 6629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5918,
											"end": 6629,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5918,
											"end": 6629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5918,
											"end": 6629,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5918,
											"end": 6629,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5918,
											"end": 6629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5918,
											"end": 6629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6635,
											"end": 6793,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 6635,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6708,
											"end": 6719,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6742,
											"end": 6748,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6737,
											"end": 6740,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6782,
											"end": 6786,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6777,
											"end": 6780,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6773,
											"end": 6787,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6758,
											"end": 6787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6635,
											"end": 6793,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6635,
											"end": 6793,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6635,
											"end": 6793,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6635,
											"end": 6793,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6635,
											"end": 6793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6821,
											"end": 7115,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 6821,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6907,
											"end": 6910,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6928,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 6981,
											"end": 6987,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6976,
											"end": 6979,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6928,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 6928,
											"end": 6988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6928,
											"end": 6988,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 6928,
											"end": 6988,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6921,
											"end": 6988,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6921,
											"end": 6988,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6998,
											"end": 7054,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 7047,
											"end": 7053,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7042,
											"end": 7045,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7035,
											"end": 7040,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6998,
											"end": 7054,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 6998,
											"end": 7054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6998,
											"end": 7054,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 6998,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7079,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 7101,
											"end": 7107,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7079,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 7079,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7079,
											"end": 7108,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 7079,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7074,
											"end": 7077,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7070,
											"end": 7109,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7063,
											"end": 7109,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7063,
											"end": 7109,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6821,
											"end": 7115,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6821,
											"end": 7115,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6821,
											"end": 7115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6821,
											"end": 7115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6821,
											"end": 7115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6821,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7203,
											"end": 8728,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 7203,
											"end": 8728,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7326,
											"end": 7329,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7362,
											"end": 7366,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 7357,
											"end": 7360,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7353,
											"end": 7367,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7433,
											"end": 7483,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 7477,
											"end": 7481,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7470,
											"end": 7475,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7466,
											"end": 7482,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7459,
											"end": 7464,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7433,
											"end": 7483,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 7433,
											"end": 7483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7433,
											"end": 7483,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 7433,
											"end": 7483,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7496,
											"end": 7559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 7553,
											"end": 7557,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7548,
											"end": 7551,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7544,
											"end": 7558,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7542,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7496,
											"end": 7559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 7496,
											"end": 7559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7496,
											"end": 7559,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 7496,
											"end": 7559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7377,
											"end": 7569,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7641,
											"end": 7691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 7685,
											"end": 7689,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7678,
											"end": 7683,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7674,
											"end": 7690,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7667,
											"end": 7672,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7641,
											"end": 7691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 7641,
											"end": 7691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7641,
											"end": 7691,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 7641,
											"end": 7691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7704,
											"end": 7767,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 7761,
											"end": 7765,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7756,
											"end": 7759,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7752,
											"end": 7766,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7738,
											"end": 7750,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7704,
											"end": 7767,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 7704,
											"end": 7767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7704,
											"end": 7767,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 7704,
											"end": 7767,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7579,
											"end": 7777,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7847,
											"end": 7897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 7891,
											"end": 7895,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7884,
											"end": 7889,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7880,
											"end": 7896,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7873,
											"end": 7878,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7847,
											"end": 7897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 7847,
											"end": 7897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7847,
											"end": 7897,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 7847,
											"end": 7897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7910,
											"end": 7973,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 7967,
											"end": 7971,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7962,
											"end": 7965,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7958,
											"end": 7972,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7944,
											"end": 7956,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7910,
											"end": 7973,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 7910,
											"end": 7973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7910,
											"end": 7973,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 7910,
											"end": 7973,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7787,
											"end": 7983,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8051,
											"end": 8101,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 8095,
											"end": 8099,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 8088,
											"end": 8093,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8084,
											"end": 8100,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8077,
											"end": 8082,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8051,
											"end": 8101,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 8051,
											"end": 8101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8051,
											"end": 8101,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 8051,
											"end": 8101,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8114,
											"end": 8177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 8171,
											"end": 8175,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 8166,
											"end": 8169,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8162,
											"end": 8176,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8148,
											"end": 8160,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8114,
											"end": 8177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 8114,
											"end": 8177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8114,
											"end": 8177,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 8114,
											"end": 8177,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7993,
											"end": 8187,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8266,
											"end": 8327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 8321,
											"end": 8325,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 8314,
											"end": 8319,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8303,
											"end": 8308,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8266,
											"end": 8327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 8266,
											"end": 8327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8266,
											"end": 8327,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 8266,
											"end": 8327,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8374,
											"end": 8377,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8368,
											"end": 8372,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8364,
											"end": 8378,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8357,
											"end": 8361,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 8352,
											"end": 8355,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 8348,
											"end": 8362,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8341,
											"end": 8379,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8400,
											"end": 8487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 8482,
											"end": 8486,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8468,
											"end": 8480,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8454,
											"end": 8466,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8400,
											"end": 8487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 8400,
											"end": 8487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8400,
											"end": 8487,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 8400,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8392,
											"end": 8487,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8392,
											"end": 8487,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8197,
											"end": 8498,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8197,
											"end": 8498,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8565,
											"end": 8615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 8609,
											"end": 8613,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 8602,
											"end": 8607,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8598,
											"end": 8614,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8591,
											"end": 8596,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8565,
											"end": 8615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 8565,
											"end": 8615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8565,
											"end": 8615,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 8565,
											"end": 8615,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8628,
											"end": 8691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 8685,
											"end": 8689,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 8680,
											"end": 8683,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8676,
											"end": 8690,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8662,
											"end": 8674,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8628,
											"end": 8691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 8628,
											"end": 8691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8628,
											"end": 8691,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 8628,
											"end": 8691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8508,
											"end": 8701,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8718,
											"end": 8722,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7331,
											"end": 8728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7203,
											"end": 8728,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7203,
											"end": 8728,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7203,
											"end": 8728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7203,
											"end": 8728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7203,
											"end": 8728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8734,
											"end": 9115,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 8734,
											"end": 9115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8881,
											"end": 8885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8919,
											"end": 8921,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8908,
											"end": 8917,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8904,
											"end": 8922,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8896,
											"end": 8922,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8896,
											"end": 8922,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8968,
											"end": 8977,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8962,
											"end": 8966,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 8978,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8954,
											"end": 8955,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8952,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8939,
											"end": 8956,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8932,
											"end": 8979,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8996,
											"end": 9108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 9103,
											"end": 9107,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9094,
											"end": 9100,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8996,
											"end": 9108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 8996,
											"end": 9108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8996,
											"end": 9108,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 8996,
											"end": 9108,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8988,
											"end": 9108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8988,
											"end": 9108,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8734,
											"end": 9115,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8734,
											"end": 9115,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8734,
											"end": 9115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8734,
											"end": 9115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8734,
											"end": 9115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9121,
											"end": 9301,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 9121,
											"end": 9301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9169,
											"end": 9246,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9166,
											"end": 9167,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9159,
											"end": 9247,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9266,
											"end": 9270,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 9263,
											"end": 9264,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9256,
											"end": 9271,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9290,
											"end": 9294,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 9287,
											"end": 9288,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9280,
											"end": 9295,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9307,
											"end": 9476,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 9307,
											"end": 9476,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9391,
											"end": 9402,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9425,
											"end": 9431,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9420,
											"end": 9423,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9413,
											"end": 9432,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9465,
											"end": 9469,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9460,
											"end": 9463,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9470,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9441,
											"end": 9470,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9441,
											"end": 9470,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9307,
											"end": 9476,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9307,
											"end": 9476,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9307,
											"end": 9476,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9307,
											"end": 9476,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9307,
											"end": 9476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9482,
											"end": 9656,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 9482,
											"end": 9656,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9622,
											"end": 9648,
											"name": "PUSH",
											"source": 5,
											"value": "45434453413A20696E76616C6964207369676E61747572650000000000000000"
										},
										{
											"begin": 9618,
											"end": 9619,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9610,
											"end": 9616,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9606,
											"end": 9620,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9599,
											"end": 9649,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9482,
											"end": 9656,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9482,
											"end": 9656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9662,
											"end": 10028,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 9662,
											"end": 10028,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9804,
											"end": 9807,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9825,
											"end": 9892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 9889,
											"end": 9891,
											"name": "PUSH",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 9884,
											"end": 9887,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9825,
											"end": 9892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 9825,
											"end": 9892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9825,
											"end": 9892,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 9825,
											"end": 9892,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9892,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9892,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9901,
											"end": 9994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 9990,
											"end": 9993,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9901,
											"end": 9994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 9901,
											"end": 9994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9901,
											"end": 9994,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 9901,
											"end": 9994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10019,
											"end": 10021,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10014,
											"end": 10017,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10010,
											"end": 10022,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10003,
											"end": 10022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10003,
											"end": 10022,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9662,
											"end": 10028,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9662,
											"end": 10028,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9662,
											"end": 10028,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9662,
											"end": 10028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10034,
											"end": 10453,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 10034,
											"end": 10453,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10200,
											"end": 10204,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10238,
											"end": 10240,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10227,
											"end": 10236,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10223,
											"end": 10241,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10215,
											"end": 10241,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10215,
											"end": 10241,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10287,
											"end": 10296,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10281,
											"end": 10285,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10277,
											"end": 10297,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10273,
											"end": 10274,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10262,
											"end": 10271,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10258,
											"end": 10275,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10251,
											"end": 10298,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10315,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 10441,
											"end": 10445,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10315,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 10315,
											"end": 10446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10315,
											"end": 10446,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 10315,
											"end": 10446,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10307,
											"end": 10446,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10307,
											"end": 10446,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10034,
											"end": 10453,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10034,
											"end": 10453,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10034,
											"end": 10453,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10034,
											"end": 10453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10459,
											"end": 10640,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 10459,
											"end": 10640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10599,
											"end": 10632,
											"name": "PUSH",
											"source": 5,
											"value": "45434453413A20696E76616C6964207369676E6174757265206C656E67746800"
										},
										{
											"begin": 10595,
											"end": 10596,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10587,
											"end": 10593,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10583,
											"end": 10597,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10633,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10459,
											"end": 10640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10459,
											"end": 10640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10646,
											"end": 11012,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 10646,
											"end": 11012,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10788,
											"end": 10791,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10809,
											"end": 10876,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 10873,
											"end": 10875,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 10868,
											"end": 10871,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10809,
											"end": 10876,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 10809,
											"end": 10876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10809,
											"end": 10876,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 10809,
											"end": 10876,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10802,
											"end": 10876,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10802,
											"end": 10876,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10885,
											"end": 10978,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 10974,
											"end": 10977,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10885,
											"end": 10978,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 10885,
											"end": 10978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10885,
											"end": 10978,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 10885,
											"end": 10978,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11003,
											"end": 11005,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10998,
											"end": 11001,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10994,
											"end": 11006,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10987,
											"end": 11006,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10987,
											"end": 11006,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10646,
											"end": 11012,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10646,
											"end": 11012,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10646,
											"end": 11012,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10646,
											"end": 11012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11018,
											"end": 11437,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 11018,
											"end": 11437,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11184,
											"end": 11188,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11222,
											"end": 11224,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11211,
											"end": 11220,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11207,
											"end": 11225,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11199,
											"end": 11225,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11199,
											"end": 11225,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11271,
											"end": 11280,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11265,
											"end": 11269,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11261,
											"end": 11281,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11257,
											"end": 11258,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11246,
											"end": 11255,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11242,
											"end": 11259,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11235,
											"end": 11282,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11299,
											"end": 11430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 11425,
											"end": 11429,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11299,
											"end": 11430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 11299,
											"end": 11430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11299,
											"end": 11430,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 11299,
											"end": 11430,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11291,
											"end": 11430,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11291,
											"end": 11430,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11018,
											"end": 11437,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11018,
											"end": 11437,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11018,
											"end": 11437,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11018,
											"end": 11437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11443,
											"end": 11664,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 11443,
											"end": 11664,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11583,
											"end": 11617,
											"name": "PUSH",
											"source": 5,
											"value": "45434453413A20696E76616C6964207369676E6174757265202773272076616C"
										},
										{
											"begin": 11579,
											"end": 11580,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11571,
											"end": 11577,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11567,
											"end": 11581,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11560,
											"end": 11618,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11652,
											"end": 11656,
											"name": "PUSH",
											"source": 5,
											"value": "7565000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11647,
											"end": 11649,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11639,
											"end": 11645,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11635,
											"end": 11650,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11628,
											"end": 11657,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11443,
											"end": 11664,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11443,
											"end": 11664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11670,
											"end": 12036,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 11670,
											"end": 12036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11812,
											"end": 11815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11833,
											"end": 11900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 11897,
											"end": 11899,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 11892,
											"end": 11895,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11833,
											"end": 11900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 11833,
											"end": 11900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11833,
											"end": 11900,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 11833,
											"end": 11900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11826,
											"end": 11900,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11826,
											"end": 11900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11909,
											"end": 12002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 11998,
											"end": 12001,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11909,
											"end": 12002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 11909,
											"end": 12002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11909,
											"end": 12002,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 11909,
											"end": 12002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12027,
											"end": 12029,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12022,
											"end": 12025,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12018,
											"end": 12030,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12011,
											"end": 12030,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12011,
											"end": 12030,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11670,
											"end": 12036,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11670,
											"end": 12036,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11670,
											"end": 12036,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11670,
											"end": 12036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12042,
											"end": 12461,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 12042,
											"end": 12461,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12208,
											"end": 12212,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12246,
											"end": 12248,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12235,
											"end": 12244,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12231,
											"end": 12249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12223,
											"end": 12249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12223,
											"end": 12249,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12295,
											"end": 12304,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12289,
											"end": 12293,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12285,
											"end": 12305,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12281,
											"end": 12282,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12270,
											"end": 12279,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12266,
											"end": 12283,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12259,
											"end": 12306,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12323,
											"end": 12454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 12449,
											"end": 12453,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12323,
											"end": 12454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 12323,
											"end": 12454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12323,
											"end": 12454,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 12323,
											"end": 12454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12315,
											"end": 12454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12315,
											"end": 12454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12042,
											"end": 12461,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12042,
											"end": 12461,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12042,
											"end": 12461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12042,
											"end": 12461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12467,
											"end": 12544,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 12467,
											"end": 12544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12504,
											"end": 12511,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12533,
											"end": 12538,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12522,
											"end": 12538,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12522,
											"end": 12538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12467,
											"end": 12544,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12467,
											"end": 12544,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12467,
											"end": 12544,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12467,
											"end": 12544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12550,
											"end": 12668,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 12550,
											"end": 12668,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12637,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 12655,
											"end": 12660,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12637,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 12637,
											"end": 12661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12637,
											"end": 12661,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 12637,
											"end": 12661,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12632,
											"end": 12635,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12625,
											"end": 12662,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12550,
											"end": 12668,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12550,
											"end": 12668,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12550,
											"end": 12668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12674,
											"end": 12760,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 12674,
											"end": 12760,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12709,
											"end": 12716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12749,
											"end": 12753,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 12742,
											"end": 12747,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12738,
											"end": 12754,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12727,
											"end": 12754,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12727,
											"end": 12754,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12674,
											"end": 12760,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12674,
											"end": 12760,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12674,
											"end": 12760,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12674,
											"end": 12760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12766,
											"end": 12878,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 12766,
											"end": 12878,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12849,
											"end": 12871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 12865,
											"end": 12870,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12849,
											"end": 12871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 12849,
											"end": 12871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12849,
											"end": 12871,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 12849,
											"end": 12871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12844,
											"end": 12847,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12837,
											"end": 12872,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12766,
											"end": 12878,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12766,
											"end": 12878,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12766,
											"end": 12878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12884,
											"end": 13429,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 12884,
											"end": 13429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13057,
											"end": 13061,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13095,
											"end": 13098,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 13084,
											"end": 13093,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13080,
											"end": 13099,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13072,
											"end": 13099,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13072,
											"end": 13099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13109,
											"end": 13180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 13177,
											"end": 13178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13166,
											"end": 13175,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13162,
											"end": 13179,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13153,
											"end": 13159,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 13109,
											"end": 13180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 13109,
											"end": 13180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13109,
											"end": 13180,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 13109,
											"end": 13180,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13190,
											"end": 13258,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 13254,
											"end": 13256,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13243,
											"end": 13252,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13239,
											"end": 13257,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13230,
											"end": 13236,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 13190,
											"end": 13258,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 13190,
											"end": 13258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13190,
											"end": 13258,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 13190,
											"end": 13258,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13268,
											"end": 13340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 13336,
											"end": 13338,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13325,
											"end": 13334,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13321,
											"end": 13339,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13312,
											"end": 13318,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 13268,
											"end": 13340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 13268,
											"end": 13340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13268,
											"end": 13340,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 13268,
											"end": 13340,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13350,
											"end": 13422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 13418,
											"end": 13420,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 13407,
											"end": 13416,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13403,
											"end": 13421,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13394,
											"end": 13400,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13350,
											"end": 13422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 13350,
											"end": 13422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13350,
											"end": 13422,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 13350,
											"end": 13422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12884,
											"end": 13429,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 12884,
											"end": 13429,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 12884,
											"end": 13429,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12884,
											"end": 13429,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12884,
											"end": 13429,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12884,
											"end": 13429,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12884,
											"end": 13429,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12884,
											"end": 13429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/interfaces/IExchangeAggregator.sol",
								"contracts/libraries/utils.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"signer(IExchangeAggregator.swapData,bytes)": "4f5fdbe5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"input\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"internalType\":\"struct IExchangeAggregator.swapData\",\"name\":\"data\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"signer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/utils.sol\":\"utils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x06b89300806c928957832871b00126458e42874127857569a5fff7ff28093b10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7125301cdee2b0f9ec0b6c1796e4d19a7f601a8bab62a087b4e6c0fc9699f140\",\"dweb:/ipfs/QmZPh1JuMBL1eoJ9igYN1nDFZnnr1NAzSkq9FyvkSsKoKT\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"contracts/interfaces/IExchangeAggregator.sol\":{\"keccak256\":\"0x18cf8828c63885315ed8cf8f05172f2877997c335b3fac1cf883bc89defe5680\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4554ae11997b92961c54bf6b8c6973c871924c273e935cb4060653c322b2dcb9\",\"dweb:/ipfs/QmeU2QxxJtiiCCec8PpQmUAKwntSJg3dJRaeuxKVJxWgXX\"]},\"contracts/libraries/utils.sol\":{\"keccak256\":\"0x4b2c957e6b6f776435b67e42e079eecd89e92366a92e80e4bb57cc5574d3d38c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1371c716580a6c4f35d6930974bc4d81c1c48cb626e6c521d37d0b9c5ea922f\",\"dweb:/ipfs/QmUnTmwpVKrUL1ufznoTbZemagRh2D4XjoX4kQ8CpfudNR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1341
						],
						"Strings": [
							174
						]
					},
					"id": 175,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 175,
							"sourceUnit": 1342,
							"src": "126:25:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "153:34:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 174,
							"linearizedBaseContracts": [
								174
							],
							"name": "Strings",
							"nameLocation": "196:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 6,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "235:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 174,
									"src": "210:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 4,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "210:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 5,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "246:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 9,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "293:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 174,
									"src": "270:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 7,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "270:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 8,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "486:625:0",
										"statements": [
											{
												"id": 55,
												"nodeType": "UncheckedBlock",
												"src": "496:609:0",
												"statements": [
													{
														"assignments": [
															18
														],
														"declarations": [
															{
																"constant": false,
																"id": 18,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "528:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 55,
																"src": "520:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 17,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "520:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 25,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 21,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 12,
																		"src": "548:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 19,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1341,
																		"src": "537:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1341_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 20,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "542:5:0",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1178,
																	"src": "537:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "537:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "557:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "537:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "520:38:0"
													},
													{
														"assignments": [
															27
														],
														"declarations": [
															{
																"constant": false,
																"id": 27,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "586:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 55,
																"src": "572:20:0",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 26,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "572:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 32,
														"initialValue": {
															"arguments": [
																{
																	"id": 30,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "606:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "595:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 28,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "599:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "595:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "572:41:0"
													},
													{
														"assignments": [
															34
														],
														"declarations": [
															{
																"constant": false,
																"id": 34,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "635:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 55,
																"src": "627:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 33,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "627:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 35,
														"nodeType": "VariableDeclarationStatement",
														"src": "627:11:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "708:67:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "726:35:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "749:2:0",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "753:6:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "745:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "745:15:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "733:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "733:28:0"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "726:3:0"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 27,
																"isOffset": false,
																"isSlot": false,
																"src": "737:6:0",
																"valueSize": 1
															},
															{
																"declaration": 18,
																"isOffset": false,
																"isSlot": false,
																"src": "753:6:0",
																"valueSize": 1
															},
															{
																"declaration": 34,
																"isOffset": false,
																"isSlot": false,
																"src": "726:3:0",
																"valueSize": 1
															}
														],
														"id": 36,
														"nodeType": "InlineAssembly",
														"src": "699:76:0"
													},
													{
														"body": {
															"id": 51,
															"nodeType": "Block",
															"src": "801:267:0",
															"statements": [
																{
																	"expression": {
																		"id": 39,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "819:5:0",
																		"subExpression": {
																			"id": 38,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 34,
																			"src": "819:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 40,
																	"nodeType": "ExpressionStatement",
																	"src": "819:5:0"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "902:84:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "932:3:0"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "946:5:0"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "953:2:0",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "942:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "942:14:0"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "958:8:0"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "937:4:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "937:30:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "924:7:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "924:44:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "924:44:0"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 6,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "958:8:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 34,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "932:3:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 12,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "946:5:0",
																			"valueSize": 1
																		}
																	],
																	"id": 41,
																	"nodeType": "InlineAssembly",
																	"src": "893:93:0"
																},
																{
																	"expression": {
																		"id": 44,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 42,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 12,
																			"src": "1003:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 43,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1012:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1003:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 45,
																	"nodeType": "ExpressionStatement",
																	"src": "1003:11:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 48,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 46,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 12,
																			"src": "1036:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 47,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1045:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1036:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 50,
																	"nodeType": "IfStatement",
																	"src": "1032:21:0",
																	"trueBody": {
																		"id": 49,
																		"nodeType": "Break",
																		"src": "1048:5:0"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "795:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 52,
														"nodeType": "WhileStatement",
														"src": "788:280:0"
													},
													{
														"expression": {
															"id": 53,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1088:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 16,
														"id": 54,
														"nodeType": "Return",
														"src": "1081:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "320:90:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "424:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "441:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "433:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:15:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "471:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 14,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "471:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:15:0"
									},
									"scope": 174,
									"src": "415:696:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "1290:100:0",
										"statements": [
											{
												"id": 75,
												"nodeType": "UncheckedBlock",
												"src": "1300:84:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 66,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "1343:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 69,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 60,
																				"src": "1362:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 67,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1341,
																				"src": "1350:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1341_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 68,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1355:6:0",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1301,
																			"src": "1350:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 70,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1350:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1371:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1350:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 65,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	77,
																	153,
																	173
																],
																"referencedDeclaration": 153,
																"src": "1331:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 73,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1331:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 64,
														"id": 74,
														"nodeType": "Return",
														"src": "1324:49:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 58,
										"nodeType": "StructuredDocumentation",
										"src": "1117:94:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 77,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1225:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1245:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "1237:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:15:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "1275:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 62,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1275:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1274:15:0"
									},
									"scope": 174,
									"src": "1216:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "1603:347:0",
										"statements": [
											{
												"assignments": [
													88
												],
												"declarations": [
													{
														"constant": false,
														"id": 88,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1626:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "1613:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 87,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1613:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 97,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1645:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 92,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 82,
																	"src": "1649:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1645:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1658:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1645:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1635:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 89,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1639:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1635:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1613:47:0"
											},
											{
												"expression": {
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 98,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "1670:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 100,
														"indexExpression": {
															"hexValue": "30",
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1677:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1670:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1682:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1670:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "1670:15:0"
											},
											{
												"expression": {
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 104,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "1695:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 106,
														"indexExpression": {
															"hexValue": "31",
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1702:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1695:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1707:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1695:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "1695:15:0"
											},
											{
												"body": {
													"id": 138,
													"nodeType": "Block",
													"src": "1765:83:0",
													"statements": [
														{
															"expression": {
																"id": 132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 124,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 88,
																		"src": "1779:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 126,
																	"indexExpression": {
																		"id": 125,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 111,
																		"src": "1786:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1779:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 127,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 6,
																		"src": "1791:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 131,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 128,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 80,
																			"src": "1800:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1808:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1800:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1791:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1779:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 133,
															"nodeType": "ExpressionStatement",
															"src": "1779:33:0"
														},
														{
															"expression": {
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 134,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 80,
																	"src": "1826:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1836:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1826:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 137,
															"nodeType": "ExpressionStatement",
															"src": "1826:11:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 118,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1753:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1753:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 139,
												"initializationExpression": {
													"assignments": [
														111
													],
													"declarations": [
														{
															"constant": false,
															"id": 111,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1733:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 139,
															"src": "1725:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 110,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1725:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 117,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1737:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 113,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 82,
																"src": "1741:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1737:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1750:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1737:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1725:26:0"
												},
												"loopExpression": {
													"expression": {
														"id": 122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1760:3:0",
														"subExpression": {
															"id": 121,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "1762:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 123,
													"nodeType": "ExpressionStatement",
													"src": "1760:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1720:128:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 141,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1865:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1874:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1865:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1877:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 140,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1857:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1857:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "1857:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 149,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "1936:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1929:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 147,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1929:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 86,
												"id": 151,
												"nodeType": "Return",
												"src": "1922:21:0"
											}
										]
									},
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "1396:112:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1522:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1542:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1534:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1534:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1557:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1549:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1549:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:31:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1588:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:15:0"
									},
									"scope": 174,
									"src": "1513:437:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "2175:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 166,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 156,
																			"src": "2220:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2212:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 164,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2212:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2212:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2204:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 162,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2204:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2204:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 169,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "2228:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 161,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															77,
															153,
															173
														],
														"referencedDeclaration": 153,
														"src": "2192:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2192:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 160,
												"id": 171,
												"nodeType": "Return",
												"src": "2185:59:0"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "1956:141:0",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2111:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2131:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "2123:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2122:14:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "2160:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 158,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2160:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2159:15:0"
									},
									"scope": 174,
									"src": "2102:149:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 175,
							"src": "188:2065:0",
							"usedErrors": []
						}
					],
					"src": "101:2153:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							476
						],
						"Math": [
							1341
						],
						"Strings": [
							174
						]
					},
					"id": 477,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 176,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../Strings.sol",
							"id": 177,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 477,
							"sourceUnit": 175,
							"src": "137:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 178,
								"nodeType": "StructuredDocumentation",
								"src": "163:205:1",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 476,
							"linearizedBaseContracts": [
								476
							],
							"name": "ECDSA",
							"nameLocation": "377:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 184,
									"members": [
										{
											"id": 179,
											"name": "NoError",
											"nameLocation": "417:7:1",
											"nodeType": "EnumValue",
											"src": "417:7:1"
										},
										{
											"id": 180,
											"name": "InvalidSignature",
											"nameLocation": "434:16:1",
											"nodeType": "EnumValue",
											"src": "434:16:1"
										},
										{
											"id": 181,
											"name": "InvalidSignatureLength",
											"nameLocation": "460:22:1",
											"nodeType": "EnumValue",
											"src": "460:22:1"
										},
										{
											"id": 182,
											"name": "InvalidSignatureS",
											"nameLocation": "492:17:1",
											"nodeType": "EnumValue",
											"src": "492:17:1"
										},
										{
											"id": 183,
											"name": "InvalidSignatureV",
											"nameLocation": "519:17:1",
											"nodeType": "EnumValue",
											"src": "519:17:1"
										}
									],
									"name": "RecoverError",
									"nameLocation": "394:12:1",
									"nodeType": "EnumDefinition",
									"src": "389:175:1"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "624:457:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$184",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 190,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "638:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$184",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 191,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "647:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$184_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 192,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "660:7:1",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 179,
														"src": "647:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$184",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "638:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$184",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 196,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "734:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$184",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 197,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "743:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$184_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "756:16:1",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 180,
															"src": "743:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$184",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "734:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$184",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 205,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "843:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$184",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 206,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 184,
																	"src": "852:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$184_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "865:22:1",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "852:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$184",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "843:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$184",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 214,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 187,
																	"src": "965:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$184",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 215,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 184,
																		"src": "974:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$184_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "987:17:1",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 182,
																	"src": "974:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$184",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "965:39:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 223,
															"nodeType": "IfStatement",
															"src": "961:114:1",
															"trueBody": {
																"id": 222,
																"nodeType": "Block",
																"src": "1006:69:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "45434453413a20696e76616c6964207369676e6174757265202773272076616c7565",
																					"id": 219,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1027:36:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
																						"typeString": "literal_string \"ECDSA: invalid signature 's' value\""
																					},
																					"value": "ECDSA: invalid signature 's' value"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
																						"typeString": "literal_string \"ECDSA: invalid signature 's' value\""
																					}
																				],
																				"id": 218,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "1020:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1020:44:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 221,
																		"nodeType": "ExpressionStatement",
																		"src": "1020:44:1"
																	}
																]
															}
														},
														"id": 224,
														"nodeType": "IfStatement",
														"src": "839:236:1",
														"trueBody": {
															"id": 213,
															"nodeType": "Block",
															"src": "889:66:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "45434453413a20696e76616c6964207369676e6174757265206c656e677468",
																				"id": 210,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "910:33:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
																					"typeString": "literal_string \"ECDSA: invalid signature length\""
																				},
																				"value": "ECDSA: invalid signature length"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
																					"typeString": "literal_string \"ECDSA: invalid signature length\""
																				}
																			],
																			"id": 209,
																			"name": "revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967277,
																				4294967277
																			],
																			"referencedDeclaration": 4294967277,
																			"src": "903:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (string memory) pure"
																			}
																		},
																		"id": 211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "903:41:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 212,
																	"nodeType": "ExpressionStatement",
																	"src": "903:41:1"
																}
															]
														}
													},
													"id": 225,
													"nodeType": "IfStatement",
													"src": "730:345:1",
													"trueBody": {
														"id": 204,
														"nodeType": "Block",
														"src": "774:59:1",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "45434453413a20696e76616c6964207369676e6174757265",
																			"id": 201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "795:26:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
																				"typeString": "literal_string \"ECDSA: invalid signature\""
																			},
																			"value": "ECDSA: invalid signature"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
																				"typeString": "literal_string \"ECDSA: invalid signature\""
																			}
																		],
																		"id": 200,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "788:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "788:34:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 203,
																"nodeType": "ExpressionStatement",
																"src": "788:34:1"
															}
														]
													}
												},
												"id": 226,
												"nodeType": "IfStatement",
												"src": "634:441:1",
												"trueBody": {
													"id": 195,
													"nodeType": "Block",
													"src": "669:55:1",
													"statements": [
														{
															"functionReturnParameters": 189,
															"id": 194,
															"nodeType": "Return",
															"src": "683:7:1"
														}
													]
												}
											}
										]
									},
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "579:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "604:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "591:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$184",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 186,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 185,
														"name": "RecoverError",
														"nameLocations": [
															"591:12:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 184,
														"src": "591:12:1"
													},
													"referencedDeclaration": 184,
													"src": "591:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$184",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "590:20:1"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "624:0:1"
									},
									"scope": 476,
									"src": "570:511:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "2249:626:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 241,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "2263:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2273:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2263:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2283:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2263:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 271,
													"nodeType": "Block",
													"src": "2788:81:1",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 265,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2818:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2810:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 263,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2810:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2810:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 267,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 184,
																			"src": "2822:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$184_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2835:22:1",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 181,
																		"src": "2822:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$184",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 269,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2809:49:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$184_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 240,
															"id": 270,
															"nodeType": "Return",
															"src": "2802:56:1"
														}
													]
												},
												"id": 272,
												"nodeType": "IfStatement",
												"src": "2259:610:1",
												"trueBody": {
													"id": 262,
													"nodeType": "Block",
													"src": "2287:495:1",
													"statements": [
														{
															"assignments": [
																246
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 246,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2309:1:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 262,
																	"src": "2301:9:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 245,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2301:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 247,
															"nodeType": "VariableDeclarationStatement",
															"src": "2301:9:1"
														},
														{
															"assignments": [
																249
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 249,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2332:1:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 262,
																	"src": "2324:9:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 248,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2324:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 250,
															"nodeType": "VariableDeclarationStatement",
															"src": "2324:9:1"
														},
														{
															"assignments": [
																252
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 252,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2353:1:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 262,
																	"src": "2347:7:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 251,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2347:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 253,
															"nodeType": "VariableDeclarationStatement",
															"src": "2347:7:1"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "2555:171:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2573:32:1",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nodeType": "YulIdentifier",
																							"src": "2588:9:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2599:4:1",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2584:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2584:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2578:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2578:27:1"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "2573:1:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2622:32:1",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nodeType": "YulIdentifier",
																							"src": "2637:9:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2648:4:1",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2633:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2627:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2627:27:1"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nodeType": "YulIdentifier",
																				"src": "2622:1:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2671:41:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2681:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nodeType": "YulIdentifier",
																									"src": "2694:9:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2705:4:1",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2690:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2690:20:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2684:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2684:27:1"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nodeType": "YulIdentifier",
																				"src": "2676:4:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2676:36:1"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nodeType": "YulIdentifier",
																				"src": "2671:1:1"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 246,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2573:1:1",
																	"valueSize": 1
																},
																{
																	"declaration": 249,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2622:1:1",
																	"valueSize": 1
																},
																{
																	"declaration": 233,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2588:9:1",
																	"valueSize": 1
																},
																{
																	"declaration": 233,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2637:9:1",
																	"valueSize": 1
																},
																{
																	"declaration": 233,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2694:9:1",
																	"valueSize": 1
																},
																{
																	"declaration": 252,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2671:1:1",
																	"valueSize": 1
																}
															],
															"id": 254,
															"nodeType": "InlineAssembly",
															"src": "2546:180:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 256,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 231,
																		"src": "2757:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 257,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 252,
																		"src": "2763:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 258,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 246,
																		"src": "2766:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 259,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 249,
																		"src": "2769:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 255,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		274,
																		348,
																		442
																	],
																	"referencedDeclaration": 442,
																	"src": "2746:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$184_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
																	}
																},
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2746:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$184_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 240,
															"id": 261,
															"nodeType": "Return",
															"src": "2739:32:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "1087:1053:1",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"
									},
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2154:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2173:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "2165:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 230,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2165:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2192:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "2179:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 232,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2179:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:38:1"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "2226:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2226:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "2235:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$184",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 238,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 237,
														"name": "RecoverError",
														"nameLocations": [
															"2235:12:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 184,
														"src": "2235:12:1"
													},
													"referencedDeclaration": 184,
													"src": "2235:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$184",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2225:23:1"
									},
									"scope": 476,
									"src": "2145:730:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3748:140:1",
										"statements": [
											{
												"assignments": [
													285,
													288
												],
												"declarations": [
													{
														"constant": false,
														"id": 285,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3767:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 300,
														"src": "3759:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 284,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3759:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 288,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3791:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 300,
														"src": "3778:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$184",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 287,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 286,
																"name": "RecoverError",
																"nameLocations": [
																	"3778:12:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 184,
																"src": "3778:12:1"
															},
															"referencedDeclaration": 184,
															"src": "3778:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$184",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 293,
												"initialValue": {
													"arguments": [
														{
															"id": 290,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "3811:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 291,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "3817:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 289,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															274,
															348,
															442
														],
														"referencedDeclaration": 274,
														"src": "3800:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$184_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3800:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$184_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3758:69:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 295,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "3849:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$184",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$184",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 294,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "3837:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$184_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3837:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 297,
												"nodeType": "ExpressionStatement",
												"src": "3837:18:1"
											},
											{
												"expression": {
													"id": 298,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 285,
													"src": "3872:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 283,
												"id": 299,
												"nodeType": "Return",
												"src": "3865:16:1"
											}
										]
									},
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "2881:775:1",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3670:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3686:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3678:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 276,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3678:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3705:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3692:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 278,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3692:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3677:38:1"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3739:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:9:1"
									},
									"scope": 476,
									"src": "3661:227:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "4275:203:1",
										"statements": [
											{
												"assignments": [
													317
												],
												"declarations": [
													{
														"constant": false,
														"id": 317,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "4293:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "4285:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 316,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4285:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 324,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 318,
														"name": "vs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "4297:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4310:66:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9967"
																},
																"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9967"
																}
															],
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4302:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 319,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "4302:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4302:75:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4297:80:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4285:92:1"
											},
											{
												"assignments": [
													326
												],
												"declarations": [
													{
														"constant": false,
														"id": 326,
														"mutability": "mutable",
														"name": "v",
														"nameLocation": "4393:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "4387:7:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 325,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "4387:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 339,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 331,
																					"name": "vs",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 308,
																					"src": "4412:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 330,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4404:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 329,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "4404:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4404:11:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">>",
																		"rightExpression": {
																			"hexValue": "323535",
																			"id": 333,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4419:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			},
																			"value": "255"
																		},
																		"src": "4404:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 335,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4403:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "3237",
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4426:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_27_by_1",
																	"typeString": "int_const 27"
																},
																"value": "27"
															},
															"src": "4403:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4397:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 327,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "4397:5:1",
															"typeDescriptions": {}
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4397:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4387:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 341,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "4457:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 342,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "4463:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 343,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "4466:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 344,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "4469:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 340,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															274,
															348,
															442
														],
														"referencedDeclaration": 442,
														"src": "4446:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$184_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4446:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$184_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"functionReturnParameters": 315,
												"id": 346,
												"nodeType": "Return",
												"src": "4439:32:1"
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "3894:243:1",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4151:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4179:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "4171:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 303,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4171:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4201:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "4193:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 305,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4220:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "4212:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 307,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4212:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4161:67:1"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "4252:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "4261:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$184",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 313,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 312,
														"name": "RecoverError",
														"nameLocations": [
															"4261:12:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 184,
														"src": "4261:12:1"
													},
													"referencedDeclaration": 184,
													"src": "4261:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$184",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4251:23:1"
									},
									"scope": 476,
									"src": "4142:336:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "4759:136:1",
										"statements": [
											{
												"assignments": [
													361,
													364
												],
												"declarations": [
													{
														"constant": false,
														"id": 361,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4778:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 377,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 360,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4770:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 364,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4802:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 377,
														"src": "4789:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$184",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 363,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 362,
																"name": "RecoverError",
																"nameLocations": [
																	"4789:12:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 184,
																"src": "4789:12:1"
															},
															"referencedDeclaration": 184,
															"src": "4789:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$184",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 370,
												"initialValue": {
													"arguments": [
														{
															"id": 366,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "4822:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 367,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "4828:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 368,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "4831:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 365,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															274,
															348,
															442
														],
														"referencedDeclaration": 348,
														"src": "4811:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$184_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4811:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$184_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4769:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 372,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "4856:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$184",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$184",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 371,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "4844:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$184_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4844:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "4844:18:1"
											},
											{
												"expression": {
													"id": 375,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 361,
													"src": "4879:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 359,
												"id": 376,
												"nodeType": "Return",
												"src": "4872:16:1"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "4484:154:1",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"
									},
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4652:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4677:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "4669:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4669:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4699:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "4691:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 352,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4691:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4718:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "4710:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 354,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4710:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4659:67:1"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "4750:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4750:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4749:9:1"
									},
									"scope": 476,
									"src": "4643:252:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "5218:1345:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 397,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 387,
																"src": "6114:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6106:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 395,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6106:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6106:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 399,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6119:66:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6106:79:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 410,
												"nodeType": "IfStatement",
												"src": "6102:161:1",
												"trueBody": {
													"id": 409,
													"nodeType": "Block",
													"src": "6187:76:1",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 403,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6217:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6209:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 401,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6209:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6209:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 405,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 184,
																			"src": "6221:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$184_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6234:17:1",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 182,
																		"src": "6221:30:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$184",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 407,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6208:44:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$184_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 394,
															"id": 408,
															"nodeType": "Return",
															"src": "6201:51:1"
														}
													]
												}
											},
											{
												"assignments": [
													412
												],
												"declarations": [
													{
														"constant": false,
														"id": 412,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6365:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "6357:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 411,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6357:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 419,
												"initialValue": {
													"arguments": [
														{
															"id": 414,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "6384:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 415,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "6390:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 416,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "6393:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 417,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "6396:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 413,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6374:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6374:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:41:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 420,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "6412:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6430:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6422:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 421,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6422:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 424,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6422:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6412:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 435,
												"nodeType": "IfStatement",
												"src": "6408:101:1",
												"trueBody": {
													"id": 434,
													"nodeType": "Block",
													"src": "6434:75:1",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 428,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6464:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6456:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 426,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6456:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6456:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 430,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 184,
																			"src": "6468:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$184_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6481:16:1",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 180,
																		"src": "6468:29:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$184",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 432,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6455:43:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$184_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 394,
															"id": 433,
															"nodeType": "Return",
															"src": "6448:50:1"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 436,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "6527:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 437,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "6535:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$184_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6548:7:1",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 179,
															"src": "6535:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$184",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"id": 439,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6526:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$184_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"functionReturnParameters": 394,
												"id": 440,
												"nodeType": "Return",
												"src": "6519:37:1"
											}
										]
									},
									"documentation": {
										"id": 379,
										"nodeType": "StructuredDocumentation",
										"src": "4901:163:1",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5078:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5106:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "5098:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 380,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5098:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5126:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "5120:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 382,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5120:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5145:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "5137:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 384,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5164:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "5156:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 386,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5156:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5088:83:1"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "5195:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5195:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "5204:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$184",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 392,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 391,
														"name": "RecoverError",
														"nameLocations": [
															"5204:12:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 184,
														"src": "5204:12:1"
													},
													"referencedDeclaration": 184,
													"src": "5204:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$184",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5194:23:1"
									},
									"scope": 476,
									"src": "5069:1494:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "6828:138:1",
										"statements": [
											{
												"assignments": [
													457,
													460
												],
												"declarations": [
													{
														"constant": false,
														"id": 457,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "6847:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 474,
														"src": "6839:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 456,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6839:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 460,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "6871:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 474,
														"src": "6858:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$184",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 459,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 458,
																"name": "RecoverError",
																"nameLocations": [
																	"6858:12:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 184,
																"src": "6858:12:1"
															},
															"referencedDeclaration": 184,
															"src": "6858:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$184",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 467,
												"initialValue": {
													"arguments": [
														{
															"id": 462,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "6891:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 463,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "6897:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 464,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "6900:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 465,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "6903:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 461,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															274,
															348,
															442
														],
														"referencedDeclaration": 442,
														"src": "6880:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$184_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6880:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$184_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6838:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 469,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "6927:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$184",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$184",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 468,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "6915:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$184_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6915:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "6915:18:1"
											},
											{
												"expression": {
													"id": 472,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 457,
													"src": "6950:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 455,
												"id": 473,
												"nodeType": "Return",
												"src": "6943:16:1"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "6569:122:1",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6705:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6730:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "6722:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 444,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6722:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6750:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "6744:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 446,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6744:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6769:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "6761:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 448,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6761:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6788:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "6780:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 450,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6780:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6712:83:1"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "6819:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6819:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6818:9:1"
									},
									"scope": 476,
									"src": "6696:270:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 477,
							"src": "369:6600:1",
							"usedErrors": []
						}
					],
					"src": "112:6858:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1341
						]
					},
					"id": 1342,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 478,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 479,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:2",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1341,
							"linearizedBaseContracts": [
								1341
							],
							"name": "Math",
							"nameLocation": "210:4:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 483,
									"members": [
										{
											"id": 480,
											"name": "Down",
											"nameLocation": "245:4:2",
											"nodeType": "EnumValue",
											"src": "245:4:2"
										},
										{
											"id": 481,
											"name": "Up",
											"nameLocation": "287:2:2",
											"nodeType": "EnumValue",
											"src": "287:2:2"
										},
										{
											"id": 482,
											"name": "Zero",
											"nameLocation": "318:4:2",
											"nodeType": "EnumValue",
											"src": "318:4:2"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:2",
									"nodeType": "EnumDefinition",
									"src": "221:122:2"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "480:37:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 493,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "497:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 494,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "501:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 497,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "509:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:2",
													"trueExpression": {
														"id": 496,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "505:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 492,
												"id": 499,
												"nodeType": "Return",
												"src": "490:20:2"
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:2",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "426:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "437:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:2"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "471:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:2"
									},
									"scope": 1341,
									"src": "413:104:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "655:37:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 513,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 511,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "672:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 512,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "676:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 515,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "684:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:2",
													"trueExpression": {
														"id": 514,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "680:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 510,
												"id": 517,
												"nodeType": "Return",
												"src": "665:20:2"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:2",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "601:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "612:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:2"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "646:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:2"
									},
									"scope": 1341,
									"src": "588:104:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "876:82:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 529,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "931:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 530,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "935:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 532,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 533,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 522,
																		"src": "941:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 534,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 524,
																		"src": "945:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 536,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 528,
												"id": 540,
												"nodeType": "Return",
												"src": "923:28:2"
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:2",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "822:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "833:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:2"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "867:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:2"
									},
									"scope": 1341,
									"src": "805:153:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "1228:123:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 552,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "1316:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 556,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 545,
																			"src": "1330:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 559,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 560,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 547,
																"src": "1339:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:2",
													"trueExpression": {
														"hexValue": "30",
														"id": 555,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 551,
												"id": 565,
												"nodeType": "Return",
												"src": "1309:35:2"
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:2",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1174:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1185:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:2"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1219:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:2"
									},
									"scope": 1341,
									"src": "1157:194:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "1795:3797:2",
										"statements": [
											{
												"id": 687,
												"nodeType": "UncheckedBlock",
												"src": "1805:3781:2",
												"statements": [
													{
														"assignments": [
															580
														],
														"declarations": [
															{
																"constant": false,
																"id": 580,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2134:5:2",
																"nodeType": "VariableDeclaration",
																"scope": 687,
																"src": "2126:13:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 579,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2126:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 581,
														"nodeType": "VariableDeclarationStatement",
														"src": "2126:13:2"
													},
													{
														"assignments": [
															583
														],
														"declarations": [
															{
																"constant": false,
																"id": 583,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2206:5:2",
																"nodeType": "VariableDeclaration",
																"scope": 687,
																"src": "2198:13:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 582,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2198:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 584,
														"nodeType": "VariableDeclarationStatement",
														"src": "2198:13:2"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2278:157:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2296:30:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2313:1:2"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2316:1:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2323:1:2",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2319:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2319:6:2"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2306:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2306:20:2"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2300:2:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2343:18:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2356:1:2"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2359:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2352:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2352:9:2"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2343:5:2"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2378:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2395:2:2"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2399:5:2"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2391:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2391:14:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2410:2:2"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2414:5:2"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2407:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2407:13:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2387:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2387:34:2"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2378:5:2"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 580,
																"isOffset": false,
																"isSlot": false,
																"src": "2343:5:2",
																"valueSize": 1
															},
															{
																"declaration": 580,
																"isOffset": false,
																"isSlot": false,
																"src": "2399:5:2",
																"valueSize": 1
															},
															{
																"declaration": 580,
																"isOffset": false,
																"isSlot": false,
																"src": "2414:5:2",
																"valueSize": 1
															},
															{
																"declaration": 583,
																"isOffset": false,
																"isSlot": false,
																"src": "2378:5:2",
																"valueSize": 1
															},
															{
																"declaration": 570,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:1:2",
																"valueSize": 1
															},
															{
																"declaration": 570,
																"isOffset": false,
																"isSlot": false,
																"src": "2356:1:2",
																"valueSize": 1
															},
															{
																"declaration": 572,
																"isOffset": false,
																"isSlot": false,
																"src": "2316:1:2",
																"valueSize": 1
															},
															{
																"declaration": 572,
																"isOffset": false,
																"isSlot": false,
																"src": "2359:1:2",
																"valueSize": 1
															}
														],
														"id": 585,
														"nodeType": "InlineAssembly",
														"src": "2269:166:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 586,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 583,
																"src": "2516:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2525:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2516:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 594,
														"nodeType": "IfStatement",
														"src": "2512:75:2",
														"trueBody": {
															"id": 593,
															"nodeType": "Block",
															"src": "2528:59:2",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 589,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "2553:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 590,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 574,
																			"src": "2561:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2553:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 578,
																	"id": 592,
																	"nodeType": "Return",
																	"src": "2546:26:2"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 596,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "2697:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 597,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 583,
																		"src": "2711:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2697:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 595,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2689:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2689:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 600,
														"nodeType": "ExpressionStatement",
														"src": "2689:28:2"
													},
													{
														"assignments": [
															602
														],
														"declarations": [
															{
																"constant": false,
																"id": 602,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2981:9:2",
																"nodeType": "VariableDeclaration",
																"scope": 687,
																"src": "2973:17:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 601,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2973:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 603,
														"nodeType": "VariableDeclarationStatement",
														"src": "2973:17:2"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3013:291:2",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3082:38:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3102:1:2"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3105:1:2"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3108:11:2"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3095:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3095:25:2"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3082:9:2"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3202:41:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3215:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3225:9:2"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3236:5:2"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3222:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3222:20:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3211:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3211:32:2"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3202:5:2"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3260:30:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3273:5:2"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3280:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3269:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3269:21:2"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:2"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 574,
																"isOffset": false,
																"isSlot": false,
																"src": "3108:11:2",
																"valueSize": 1
															},
															{
																"declaration": 580,
																"isOffset": false,
																"isSlot": false,
																"src": "3236:5:2",
																"valueSize": 1
															},
															{
																"declaration": 580,
																"isOffset": false,
																"isSlot": false,
																"src": "3260:5:2",
																"valueSize": 1
															},
															{
																"declaration": 580,
																"isOffset": false,
																"isSlot": false,
																"src": "3273:5:2",
																"valueSize": 1
															},
															{
																"declaration": 583,
																"isOffset": false,
																"isSlot": false,
																"src": "3202:5:2",
																"valueSize": 1
															},
															{
																"declaration": 583,
																"isOffset": false,
																"isSlot": false,
																"src": "3215:5:2",
																"valueSize": 1
															},
															{
																"declaration": 602,
																"isOffset": false,
																"isSlot": false,
																"src": "3082:9:2",
																"valueSize": 1
															},
															{
																"declaration": 602,
																"isOffset": false,
																"isSlot": false,
																"src": "3225:9:2",
																"valueSize": 1
															},
															{
																"declaration": 602,
																"isOffset": false,
																"isSlot": false,
																"src": "3280:9:2",
																"valueSize": 1
															},
															{
																"declaration": 570,
																"isOffset": false,
																"isSlot": false,
																"src": "3102:1:2",
																"valueSize": 1
															},
															{
																"declaration": 572,
																"isOffset": false,
																"isSlot": false,
																"src": "3105:1:2",
																"valueSize": 1
															}
														],
														"id": 604,
														"nodeType": "InlineAssembly",
														"src": "3004:300:2"
													},
													{
														"assignments": [
															606
														],
														"declarations": [
															{
																"constant": false,
																"id": 606,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3619:4:2",
																"nodeType": "VariableDeclaration",
																"scope": 687,
																"src": "3611:12:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 605,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3611:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 614,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 607,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 574,
																"src": "3626:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3641:12:2",
																			"subExpression": {
																				"id": 608,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 574,
																				"src": "3642:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3656:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3641:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 612,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3640:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3626:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3611:47:2"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3681:362:2",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3746:37:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3765:11:2"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3778:4:2"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3761:22:2"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3746:11:2"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3850:25:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3863:5:2"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3870:4:2"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3859:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3859:16:2"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3850:5:2"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3990:39:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4010:1:2",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4013:4:2"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4006:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4006:12:2"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4020:4:2"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4002:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4002:23:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4027:1:2",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3998:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3998:31:2"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "3990:4:2"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 574,
																"isOffset": false,
																"isSlot": false,
																"src": "3746:11:2",
																"valueSize": 1
															},
															{
																"declaration": 574,
																"isOffset": false,
																"isSlot": false,
																"src": "3765:11:2",
																"valueSize": 1
															},
															{
																"declaration": 580,
																"isOffset": false,
																"isSlot": false,
																"src": "3850:5:2",
																"valueSize": 1
															},
															{
																"declaration": 580,
																"isOffset": false,
																"isSlot": false,
																"src": "3863:5:2",
																"valueSize": 1
															},
															{
																"declaration": 606,
																"isOffset": false,
																"isSlot": false,
																"src": "3778:4:2",
																"valueSize": 1
															},
															{
																"declaration": 606,
																"isOffset": false,
																"isSlot": false,
																"src": "3870:4:2",
																"valueSize": 1
															},
															{
																"declaration": 606,
																"isOffset": false,
																"isSlot": false,
																"src": "3990:4:2",
																"valueSize": 1
															},
															{
																"declaration": 606,
																"isOffset": false,
																"isSlot": false,
																"src": "4013:4:2",
																"valueSize": 1
															},
															{
																"declaration": 606,
																"isOffset": false,
																"isSlot": false,
																"src": "4020:4:2",
																"valueSize": 1
															}
														],
														"id": 615,
														"nodeType": "InlineAssembly",
														"src": "3672:371:2"
													},
													{
														"expression": {
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 616,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 580,
																"src": "4109:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 617,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "4118:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 618,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 606,
																	"src": "4126:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4118:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4109:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 621,
														"nodeType": "ExpressionStatement",
														"src": "4109:21:2"
													},
													{
														"assignments": [
															623
														],
														"declarations": [
															{
																"constant": false,
																"id": 623,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4456:7:2",
																"nodeType": "VariableDeclaration",
																"scope": 687,
																"src": "4448:15:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 622,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4448:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 630,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4467:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 625,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 574,
																			"src": "4471:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4467:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 627,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4466:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4486:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4466:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4448:39:2"
													},
													{
														"expression": {
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 631,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "4704:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4715:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 633,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "4719:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 634,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 623,
																		"src": "4733:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4719:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4715:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4704:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 638,
														"nodeType": "ExpressionStatement",
														"src": "4704:36:2"
													},
													{
														"expression": {
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 639,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "4773:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4784:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 641,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "4788:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 642,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 623,
																		"src": "4802:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4788:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4784:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4773:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 646,
														"nodeType": "ExpressionStatement",
														"src": "4773:36:2"
													},
													{
														"expression": {
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 647,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "4843:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4854:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 649,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "4858:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 650,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 623,
																		"src": "4872:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4858:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4854:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4843:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 654,
														"nodeType": "ExpressionStatement",
														"src": "4843:36:2"
													},
													{
														"expression": {
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 655,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "4913:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4924:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 657,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "4928:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 658,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 623,
																		"src": "4942:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4928:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4924:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4913:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 662,
														"nodeType": "ExpressionStatement",
														"src": "4913:36:2"
													},
													{
														"expression": {
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 663,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "4983:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4994:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 665,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "4998:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 666,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 623,
																		"src": "5012:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4998:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4994:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4983:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 670,
														"nodeType": "ExpressionStatement",
														"src": "4983:36:2"
													},
													{
														"expression": {
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 671,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "5054:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5065:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 673,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "5069:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 674,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 623,
																		"src": "5083:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5069:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5065:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5054:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 678,
														"nodeType": "ExpressionStatement",
														"src": "5054:36:2"
													},
													{
														"expression": {
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 679,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 577,
																"src": "5524:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 680,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "5533:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 681,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 623,
																	"src": "5541:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5533:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5524:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 684,
														"nodeType": "ExpressionStatement",
														"src": "5524:24:2"
													},
													{
														"expression": {
															"id": 685,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "5569:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 578,
														"id": 686,
														"nodeType": "Return",
														"src": "5562:13:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:2",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1700:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "1692:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1719:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "1711:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1738:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "1730:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:73:2"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1787:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "1779:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:16:2"
									},
									"scope": 1341,
									"src": "1667:3925:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 732,
										"nodeType": "Block",
										"src": "5872:189:2",
										"statements": [
											{
												"assignments": [
													705
												],
												"declarations": [
													{
														"constant": false,
														"id": 705,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5890:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 732,
														"src": "5882:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 704,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5882:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 711,
												"initialValue": {
													"arguments": [
														{
															"id": 707,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "5906:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 708,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "5909:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 709,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "5912:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 706,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															689,
															733
														],
														"referencedDeclaration": 689,
														"src": "5899:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5899:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5882:42:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$483",
															"typeString": "enum Math.Rounding"
														},
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 712,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "5938:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$483",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 713,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 483,
																"src": "5950:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$483_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5959:2:2",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 481,
															"src": "5950:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$483",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5938:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 717,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 692,
																	"src": "5972:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 718,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 694,
																	"src": "5975:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 719,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 696,
																	"src": "5978:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 716,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5965:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5965:25:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5993:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5965:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5938:56:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 729,
												"nodeType": "IfStatement",
												"src": "5934:98:2",
												"trueBody": {
													"id": 728,
													"nodeType": "Block",
													"src": "5996:36:2",
													"statements": [
														{
															"expression": {
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 724,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "6010:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6020:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6010:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 727,
															"nodeType": "ExpressionStatement",
															"src": "6010:11:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 730,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 705,
													"src": "6048:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 703,
												"id": 731,
												"nodeType": "Return",
												"src": "6041:13:2"
											}
										]
									},
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "5598:121:2",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5733:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5757:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "5749:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5749:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5776:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "5768:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5795:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "5787:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5825:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "5816:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$483",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 698,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 697,
														"name": "Rounding",
														"nameLocations": [
															"5816:8:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 483,
														"src": "5816:8:2"
													},
													"referencedDeclaration": 483,
													"src": "5816:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$483",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5739:100:2"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "5863:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5862:9:2"
									},
									"scope": 1341,
									"src": "5724:337:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "6337:1585:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 741,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "6351:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6356:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6351:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 747,
												"nodeType": "IfStatement",
												"src": "6347:45:2",
												"trueBody": {
													"id": 746,
													"nodeType": "Block",
													"src": "6359:33:2",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6380:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 740,
															"id": 745,
															"nodeType": "Return",
															"src": "6373:8:2"
														}
													]
												}
											},
											{
												"assignments": [
													749
												],
												"declarations": [
													{
														"constant": false,
														"id": 749,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7079:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 844,
														"src": "7071:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 748,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7071:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 758,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 750,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7088:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 752,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 736,
																			"src": "7099:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 751,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1013,
																			1049
																		],
																		"referencedDeclaration": 1013,
																		"src": "7094:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7094:7:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7105:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7094:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 756,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7093:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7088:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7071:36:2"
											},
											{
												"id": 843,
												"nodeType": "UncheckedBlock",
												"src": "7508:408:2",
												"statements": [
													{
														"expression": {
															"id": 768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 759,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "7532:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 760,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 749,
																				"src": "7542:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 761,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 736,
																					"src": "7551:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 762,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 749,
																					"src": "7555:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7551:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7542:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 765,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7541:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7566:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7541:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7532:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 769,
														"nodeType": "ExpressionStatement",
														"src": "7532:35:2"
													},
													{
														"expression": {
															"id": 779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 770,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "7581:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 771,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 749,
																				"src": "7591:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 774,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 772,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 736,
																					"src": "7600:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 773,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 749,
																					"src": "7604:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7600:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7591:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 776,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7590:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7615:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7590:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7581:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 780,
														"nodeType": "ExpressionStatement",
														"src": "7581:35:2"
													},
													{
														"expression": {
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 781,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "7630:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 786,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 782,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 749,
																				"src": "7640:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 785,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 783,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 736,
																					"src": "7649:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 784,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 749,
																					"src": "7653:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7649:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7640:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 787,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7639:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7664:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7639:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7630:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 791,
														"nodeType": "ExpressionStatement",
														"src": "7630:35:2"
													},
													{
														"expression": {
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 792,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "7679:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 797,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 793,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 749,
																				"src": "7689:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 796,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 794,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 736,
																					"src": "7698:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 795,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 749,
																					"src": "7702:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7698:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7689:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 798,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7688:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7713:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7688:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7679:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 802,
														"nodeType": "ExpressionStatement",
														"src": "7679:35:2"
													},
													{
														"expression": {
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 803,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "7728:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 804,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 749,
																				"src": "7738:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 807,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 805,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 736,
																					"src": "7747:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 806,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 749,
																					"src": "7751:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7747:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7738:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 809,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7737:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7762:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7737:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7728:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 813,
														"nodeType": "ExpressionStatement",
														"src": "7728:35:2"
													},
													{
														"expression": {
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 814,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "7777:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 815,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 749,
																				"src": "7787:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 818,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 816,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 736,
																					"src": "7796:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 817,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 749,
																					"src": "7800:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7796:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7787:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 820,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7786:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7811:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7786:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7777:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 824,
														"nodeType": "ExpressionStatement",
														"src": "7777:35:2"
													},
													{
														"expression": {
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 825,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "7826:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 826,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 749,
																				"src": "7836:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 829,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 827,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 736,
																					"src": "7845:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 828,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 749,
																					"src": "7849:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7845:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7836:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 831,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7835:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7860:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7835:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7826:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 835,
														"nodeType": "ExpressionStatement",
														"src": "7826:35:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 837,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "7886:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 838,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 736,
																		"src": "7894:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 839,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 749,
																		"src": "7898:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7894:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 836,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "7882:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7882:23:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 740,
														"id": 842,
														"nodeType": "Return",
														"src": "7875:30:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 734,
										"nodeType": "StructuredDocumentation",
										"src": "6067:208:2",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6289:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6302:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "6294:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6294:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:11:2"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "6328:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6328:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6327:9:2"
									},
									"scope": 1341,
									"src": "6280:1642:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 880,
										"nodeType": "Block",
										"src": "8098:161:2",
										"statements": [
											{
												"id": 879,
												"nodeType": "UncheckedBlock",
												"src": "8108:145:2",
												"statements": [
													{
														"assignments": [
															857
														],
														"declarations": [
															{
																"constant": false,
																"id": 857,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8140:6:2",
																"nodeType": "VariableDeclaration",
																"scope": 879,
																"src": "8132:14:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 856,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8132:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 861,
														"initialValue": {
															"arguments": [
																{
																	"id": 859,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 848,
																	"src": "8154:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 858,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	845,
																	881
																],
																"referencedDeclaration": 845,
																"src": "8149:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8149:7:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8132:24:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 862,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 857,
																"src": "8177:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 872,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$483",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 866,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 863,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 851,
																					"src": "8187:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$483",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 864,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 483,
																						"src": "8199:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$483_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 865,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8208:2:2",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 481,
																					"src": "8199:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$483",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8187:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 871,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 869,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 867,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 857,
																						"src": "8214:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 868,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 857,
																						"src": "8223:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8214:15:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 870,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 848,
																					"src": "8232:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8214:19:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8187:46:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 874,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8240:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8187:54:2",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8236:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 876,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8186:56:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8177:65:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 855,
														"id": 878,
														"nodeType": "Return",
														"src": "8170:72:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "7928:89:2",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 881,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8031:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8044:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "8036:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8036:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8056:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "8047:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$483",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 850,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 849,
														"name": "Rounding",
														"nameLocations": [
															"8047:8:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 483,
														"src": "8047:8:2"
													},
													"referencedDeclaration": 483,
													"src": "8047:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$483",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8035:30:2"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "8089:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8088:9:2"
									},
									"scope": 1341,
									"src": "8022:237:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "8444:922:2",
										"statements": [
											{
												"assignments": [
													890
												],
												"declarations": [
													{
														"constant": false,
														"id": 890,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8462:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1012,
														"src": "8454:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 889,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8454:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 892,
												"initialValue": {
													"hexValue": "30",
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8471:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8454:18:2"
											},
											{
												"id": 1009,
												"nodeType": "UncheckedBlock",
												"src": "8482:855:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 893,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "8510:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8519:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8510:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8525:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8510:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 907,
														"nodeType": "IfStatement",
														"src": "8506:99:2",
														"trueBody": {
															"id": 906,
															"nodeType": "Block",
															"src": "8528:77:2",
															"statements": [
																{
																	"expression": {
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 898,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 884,
																			"src": "8546:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8556:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8546:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 901,
																	"nodeType": "ExpressionStatement",
																	"src": "8546:13:2"
																},
																{
																	"expression": {
																		"id": 904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 902,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 890,
																			"src": "8577:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8587:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8577:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 905,
																	"nodeType": "ExpressionStatement",
																	"src": "8577:13:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 908,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "8622:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8631:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8622:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8636:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8622:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 922,
														"nodeType": "IfStatement",
														"src": "8618:96:2",
														"trueBody": {
															"id": 921,
															"nodeType": "Block",
															"src": "8639:75:2",
															"statements": [
																{
																	"expression": {
																		"id": 915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 913,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 884,
																			"src": "8657:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 914,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8667:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8657:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 916,
																	"nodeType": "ExpressionStatement",
																	"src": "8657:12:2"
																},
																{
																	"expression": {
																		"id": 919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 917,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 890,
																			"src": "8687:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8697:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8687:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 920,
																	"nodeType": "ExpressionStatement",
																	"src": "8687:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 925,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 923,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "8731:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8740:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8731:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8745:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8731:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 937,
														"nodeType": "IfStatement",
														"src": "8727:96:2",
														"trueBody": {
															"id": 936,
															"nodeType": "Block",
															"src": "8748:75:2",
															"statements": [
																{
																	"expression": {
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 928,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 884,
																			"src": "8766:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8776:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8766:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 931,
																	"nodeType": "ExpressionStatement",
																	"src": "8766:12:2"
																},
																{
																	"expression": {
																		"id": 934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 932,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 890,
																			"src": "8796:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 933,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8796:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 935,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 940,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 938,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "8840:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8849:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "8840:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8854:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8840:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 952,
														"nodeType": "IfStatement",
														"src": "8836:96:2",
														"trueBody": {
															"id": 951,
															"nodeType": "Block",
															"src": "8857:75:2",
															"statements": [
																{
																	"expression": {
																		"id": 945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 943,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 884,
																			"src": "8875:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8885:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8875:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 946,
																	"nodeType": "ExpressionStatement",
																	"src": "8875:12:2"
																},
																{
																	"expression": {
																		"id": 949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 947,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 890,
																			"src": "8905:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 948,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8915:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8905:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 950,
																	"nodeType": "ExpressionStatement",
																	"src": "8905:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 953,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "8949:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8958:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "8949:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8962:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8949:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 967,
														"nodeType": "IfStatement",
														"src": "8945:93:2",
														"trueBody": {
															"id": 966,
															"nodeType": "Block",
															"src": "8965:73:2",
															"statements": [
																{
																	"expression": {
																		"id": 960,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 958,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 884,
																			"src": "8983:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 959,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8993:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "8983:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 961,
																	"nodeType": "ExpressionStatement",
																	"src": "8983:11:2"
																},
																{
																	"expression": {
																		"id": 964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 962,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 890,
																			"src": "9012:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 963,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9022:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9012:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 965,
																	"nodeType": "ExpressionStatement",
																	"src": "9012:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 968,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "9055:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9064:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9055:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9068:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9055:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 982,
														"nodeType": "IfStatement",
														"src": "9051:93:2",
														"trueBody": {
															"id": 981,
															"nodeType": "Block",
															"src": "9071:73:2",
															"statements": [
																{
																	"expression": {
																		"id": 975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 973,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 884,
																			"src": "9089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 974,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9099:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9089:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 976,
																	"nodeType": "ExpressionStatement",
																	"src": "9089:11:2"
																},
																{
																	"expression": {
																		"id": 979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 977,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 890,
																			"src": "9118:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9128:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9118:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 980,
																	"nodeType": "ExpressionStatement",
																	"src": "9118:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 983,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "9161:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9170:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9161:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9174:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9161:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 997,
														"nodeType": "IfStatement",
														"src": "9157:93:2",
														"trueBody": {
															"id": 996,
															"nodeType": "Block",
															"src": "9177:73:2",
															"statements": [
																{
																	"expression": {
																		"id": 990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 988,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 884,
																			"src": "9195:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 989,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9205:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9195:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 991,
																	"nodeType": "ExpressionStatement",
																	"src": "9195:11:2"
																},
																{
																	"expression": {
																		"id": 994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 992,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 890,
																			"src": "9224:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 993,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9234:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9224:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 995,
																	"nodeType": "ExpressionStatement",
																	"src": "9224:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 998,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "9267:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9276:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9267:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9280:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9267:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1008,
														"nodeType": "IfStatement",
														"src": "9263:64:2",
														"trueBody": {
															"id": 1007,
															"nodeType": "Block",
															"src": "9283:44:2",
															"statements": [
																{
																	"expression": {
																		"id": 1005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1003,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 890,
																			"src": "9301:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1004,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9311:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9301:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1006,
																	"nodeType": "ExpressionStatement",
																	"src": "9301:11:2"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1010,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 890,
													"src": "9353:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 888,
												"id": 1011,
												"nodeType": "Return",
												"src": "9346:13:2"
											}
										]
									},
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "8265:113:2",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8392:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8405:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "8397:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8397:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8396:15:2"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "8435:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8435:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8434:9:2"
									},
									"scope": 1341,
									"src": "8383:983:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "9599:165:2",
										"statements": [
											{
												"id": 1047,
												"nodeType": "UncheckedBlock",
												"src": "9609:149:2",
												"statements": [
													{
														"assignments": [
															1025
														],
														"declarations": [
															{
																"constant": false,
																"id": 1025,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9641:6:2",
																"nodeType": "VariableDeclaration",
																"scope": 1047,
																"src": "9633:14:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1024,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9633:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1029,
														"initialValue": {
															"arguments": [
																{
																	"id": 1027,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1016,
																	"src": "9655:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1026,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1013,
																	1049
																],
																"referencedDeclaration": 1013,
																"src": "9650:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9650:11:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9633:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1030,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1025,
																"src": "9682:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1040,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$483",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1034,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1031,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1019,
																					"src": "9692:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$483",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1032,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 483,
																						"src": "9704:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$483_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1033,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9713:2:2",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 481,
																					"src": "9704:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$483",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9692:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1039,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1037,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1035,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9719:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1036,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1025,
																						"src": "9724:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9719:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1038,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1016,
																					"src": "9733:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9719:19:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9692:46:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1042,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9745:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1043,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9692:54:2",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1041,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9741:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1044,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9691:56:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9682:65:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1023,
														"id": 1046,
														"nodeType": "Return",
														"src": "9675:72:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1014,
										"nodeType": "StructuredDocumentation",
										"src": "9372:142:2",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9528:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9541:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "9533:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9533:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9557:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "9548:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$483",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1018,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1017,
														"name": "Rounding",
														"nameLocations": [
															"9548:8:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 483,
														"src": "9548:8:2"
													},
													"referencedDeclaration": 483,
													"src": "9548:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$483",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9532:34:2"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "9590:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9590:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9589:9:2"
									},
									"scope": 1341,
									"src": "9519:245:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1177,
										"nodeType": "Block",
										"src": "9951:828:2",
										"statements": [
											{
												"assignments": [
													1058
												],
												"declarations": [
													{
														"constant": false,
														"id": 1058,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9969:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1177,
														"src": "9961:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1057,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9961:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1060,
												"initialValue": {
													"hexValue": "30",
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9978:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9961:18:2"
											},
											{
												"id": 1174,
												"nodeType": "UncheckedBlock",
												"src": "9989:761:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1061,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "10017:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10026:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10030:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10026:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10017:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1077,
														"nodeType": "IfStatement",
														"src": "10013:99:2",
														"trueBody": {
															"id": 1076,
															"nodeType": "Block",
															"src": "10034:78:2",
															"statements": [
																{
																	"expression": {
																		"id": 1070,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1066,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1052,
																			"src": "10052:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1069,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1067,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10061:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1068,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10065:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10061:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10052:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1071,
																	"nodeType": "ExpressionStatement",
																	"src": "10052:15:2"
																},
																{
																	"expression": {
																		"id": 1074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1072,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1058,
																			"src": "10085:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1073,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10095:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10085:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1075,
																	"nodeType": "ExpressionStatement",
																	"src": "10085:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1078,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "10129:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10138:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10142:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10138:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10129:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1094,
														"nodeType": "IfStatement",
														"src": "10125:99:2",
														"trueBody": {
															"id": 1093,
															"nodeType": "Block",
															"src": "10146:78:2",
															"statements": [
																{
																	"expression": {
																		"id": 1087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1083,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1052,
																			"src": "10164:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1084,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10173:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1085,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10177:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10173:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10164:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1088,
																	"nodeType": "ExpressionStatement",
																	"src": "10164:15:2"
																},
																{
																	"expression": {
																		"id": 1091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1089,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1058,
																			"src": "10197:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1090,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10207:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10197:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1092,
																	"nodeType": "ExpressionStatement",
																	"src": "10197:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1095,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "10241:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10250:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10254:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10250:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10241:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1111,
														"nodeType": "IfStatement",
														"src": "10237:99:2",
														"trueBody": {
															"id": 1110,
															"nodeType": "Block",
															"src": "10258:78:2",
															"statements": [
																{
																	"expression": {
																		"id": 1104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1100,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1052,
																			"src": "10276:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1103,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1101,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10285:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1102,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10289:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10285:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10276:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1105,
																	"nodeType": "ExpressionStatement",
																	"src": "10276:15:2"
																},
																{
																	"expression": {
																		"id": 1108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1106,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1058,
																			"src": "10309:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10319:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10309:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1109,
																	"nodeType": "ExpressionStatement",
																	"src": "10309:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1112,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "10353:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10362:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10366:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10362:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10353:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1128,
														"nodeType": "IfStatement",
														"src": "10349:96:2",
														"trueBody": {
															"id": 1127,
															"nodeType": "Block",
															"src": "10369:76:2",
															"statements": [
																{
																	"expression": {
																		"id": 1121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1117,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1052,
																			"src": "10387:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1118,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10396:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1119,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10400:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10396:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10387:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1122,
																	"nodeType": "ExpressionStatement",
																	"src": "10387:14:2"
																},
																{
																	"expression": {
																		"id": 1125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1123,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1058,
																			"src": "10419:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10429:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10419:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1126,
																	"nodeType": "ExpressionStatement",
																	"src": "10419:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1129,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "10462:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10471:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10475:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10471:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10462:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1145,
														"nodeType": "IfStatement",
														"src": "10458:96:2",
														"trueBody": {
															"id": 1144,
															"nodeType": "Block",
															"src": "10478:76:2",
															"statements": [
																{
																	"expression": {
																		"id": 1138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1134,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1052,
																			"src": "10496:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1137,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1135,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10505:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1136,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10509:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10505:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10496:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1139,
																	"nodeType": "ExpressionStatement",
																	"src": "10496:14:2"
																},
																{
																	"expression": {
																		"id": 1142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1140,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1058,
																			"src": "10528:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10538:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10528:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1143,
																	"nodeType": "ExpressionStatement",
																	"src": "10528:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1146,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "10571:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10580:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10584:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10580:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10571:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1162,
														"nodeType": "IfStatement",
														"src": "10567:96:2",
														"trueBody": {
															"id": 1161,
															"nodeType": "Block",
															"src": "10587:76:2",
															"statements": [
																{
																	"expression": {
																		"id": 1155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1151,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1052,
																			"src": "10605:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1152,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10614:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10618:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10614:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10605:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1156,
																	"nodeType": "ExpressionStatement",
																	"src": "10605:14:2"
																},
																{
																	"expression": {
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1157,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1058,
																			"src": "10637:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10647:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10637:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1160,
																	"nodeType": "ExpressionStatement",
																	"src": "10637:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1163,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "10680:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10689:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10693:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10689:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10680:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1173,
														"nodeType": "IfStatement",
														"src": "10676:64:2",
														"trueBody": {
															"id": 1172,
															"nodeType": "Block",
															"src": "10696:44:2",
															"statements": [
																{
																	"expression": {
																		"id": 1170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1168,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1058,
																			"src": "10714:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10724:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10714:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1171,
																	"nodeType": "ExpressionStatement",
																	"src": "10714:11:2"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1175,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1058,
													"src": "10766:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1056,
												"id": 1176,
												"nodeType": "Return",
												"src": "10759:13:2"
											}
										]
									},
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "9770:114:2",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "9898:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9912:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "9904:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9904:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9903:15:2"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "9942:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9942:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9941:9:2"
									},
									"scope": 1341,
									"src": "9889:890:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1213,
										"nodeType": "Block",
										"src": "11014:165:2",
										"statements": [
											{
												"id": 1212,
												"nodeType": "UncheckedBlock",
												"src": "11024:149:2",
												"statements": [
													{
														"assignments": [
															1190
														],
														"declarations": [
															{
																"constant": false,
																"id": 1190,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11056:6:2",
																"nodeType": "VariableDeclaration",
																"scope": 1212,
																"src": "11048:14:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1189,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11048:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1194,
														"initialValue": {
															"arguments": [
																{
																	"id": 1192,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1181,
																	"src": "11071:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1191,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1178,
																	1214
																],
																"referencedDeclaration": 1178,
																"src": "11065:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11065:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11048:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1195,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1190,
																"src": "11098:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1205,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$483",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1199,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1196,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1184,
																					"src": "11108:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$483",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1197,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 483,
																						"src": "11120:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$483_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1198,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11129:2:2",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 481,
																					"src": "11120:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$483",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11108:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1204,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1202,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1200,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11135:2:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1201,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1190,
																						"src": "11139:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11135:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1203,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1181,
																					"src": "11148:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11135:18:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11108:45:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11160:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11108:53:2",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11156:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1209,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11107:55:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11098:64:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1188,
														"id": 1211,
														"nodeType": "Return",
														"src": "11091:71:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "10785:143:2",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10942:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10956:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "10948:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10948:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10972:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "10963:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$483",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1183,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1182,
														"name": "Rounding",
														"nameLocations": [
															"10963:8:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 483,
														"src": "10963:8:2"
													},
													"referencedDeclaration": 483,
													"src": "10963:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$483",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10947:34:2"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "11005:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11005:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11004:9:2"
									},
									"scope": 1341,
									"src": "10933:246:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1300,
										"nodeType": "Block",
										"src": "11493:600:2",
										"statements": [
											{
												"assignments": [
													1223
												],
												"declarations": [
													{
														"constant": false,
														"id": 1223,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11511:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1300,
														"src": "11503:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1222,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11503:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1225,
												"initialValue": {
													"hexValue": "30",
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11520:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11503:18:2"
											},
											{
												"id": 1297,
												"nodeType": "UncheckedBlock",
												"src": "11531:533:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1226,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1217,
																	"src": "11559:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11568:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11559:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11574:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11559:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1240,
														"nodeType": "IfStatement",
														"src": "11555:98:2",
														"trueBody": {
															"id": 1239,
															"nodeType": "Block",
															"src": "11577:76:2",
															"statements": [
																{
																	"expression": {
																		"id": 1233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1231,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1217,
																			"src": "11595:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1232,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11605:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11595:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1234,
																	"nodeType": "ExpressionStatement",
																	"src": "11595:13:2"
																},
																{
																	"expression": {
																		"id": 1237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1235,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1223,
																			"src": "11626:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11636:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11626:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1238,
																	"nodeType": "ExpressionStatement",
																	"src": "11626:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1241,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1217,
																	"src": "11670:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11679:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11670:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11684:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11670:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1255,
														"nodeType": "IfStatement",
														"src": "11666:95:2",
														"trueBody": {
															"id": 1254,
															"nodeType": "Block",
															"src": "11687:74:2",
															"statements": [
																{
																	"expression": {
																		"id": 1248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1246,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1217,
																			"src": "11705:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1247,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11715:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11705:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1249,
																	"nodeType": "ExpressionStatement",
																	"src": "11705:12:2"
																},
																{
																	"expression": {
																		"id": 1252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1250,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1223,
																			"src": "11735:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11745:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11735:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1253,
																	"nodeType": "ExpressionStatement",
																	"src": "11735:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1256,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1217,
																	"src": "11778:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11787:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11778:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11792:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11778:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1270,
														"nodeType": "IfStatement",
														"src": "11774:95:2",
														"trueBody": {
															"id": 1269,
															"nodeType": "Block",
															"src": "11795:74:2",
															"statements": [
																{
																	"expression": {
																		"id": 1263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1261,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1217,
																			"src": "11813:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1262,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11823:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11813:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1264,
																	"nodeType": "ExpressionStatement",
																	"src": "11813:12:2"
																},
																{
																	"expression": {
																		"id": 1267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1265,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1223,
																			"src": "11843:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1266,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11853:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11843:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1268,
																	"nodeType": "ExpressionStatement",
																	"src": "11843:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1271,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1217,
																	"src": "11886:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11895:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11886:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11900:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11886:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1285,
														"nodeType": "IfStatement",
														"src": "11882:95:2",
														"trueBody": {
															"id": 1284,
															"nodeType": "Block",
															"src": "11903:74:2",
															"statements": [
																{
																	"expression": {
																		"id": 1278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1276,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1217,
																			"src": "11921:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11931:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11921:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1279,
																	"nodeType": "ExpressionStatement",
																	"src": "11921:12:2"
																},
																{
																	"expression": {
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1280,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1223,
																			"src": "11951:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11961:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11951:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1283,
																	"nodeType": "ExpressionStatement",
																	"src": "11951:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1286,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1217,
																	"src": "11994:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12003:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11994:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12007:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11994:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1296,
														"nodeType": "IfStatement",
														"src": "11990:64:2",
														"trueBody": {
															"id": 1295,
															"nodeType": "Block",
															"src": "12010:44:2",
															"statements": [
																{
																	"expression": {
																		"id": 1293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1291,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1223,
																			"src": "12028:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12038:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12028:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1294,
																	"nodeType": "ExpressionStatement",
																	"src": "12028:11:2"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1298,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1223,
													"src": "12080:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1221,
												"id": 1299,
												"nodeType": "Return",
												"src": "12073:13:2"
											}
										]
									},
									"documentation": {
										"id": 1215,
										"nodeType": "StructuredDocumentation",
										"src": "11185:240:2",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11439:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "11446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11445:15:2"
									},
									"returnParameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "11484:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11484:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11483:9:2"
									},
									"scope": 1341,
									"src": "11430:663:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1339,
										"nodeType": "Block",
										"src": "12329:173:2",
										"statements": [
											{
												"id": 1338,
												"nodeType": "UncheckedBlock",
												"src": "12339:157:2",
												"statements": [
													{
														"assignments": [
															1313
														],
														"declarations": [
															{
																"constant": false,
																"id": 1313,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12371:6:2",
																"nodeType": "VariableDeclaration",
																"scope": 1338,
																"src": "12363:14:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1312,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12363:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1317,
														"initialValue": {
															"arguments": [
																{
																	"id": 1315,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1304,
																	"src": "12387:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1314,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1301,
																	1340
																],
																"referencedDeclaration": 1301,
																"src": "12380:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12380:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12363:30:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1318,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1313,
																"src": "12414:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1331,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$483",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1322,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1319,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1307,
																					"src": "12424:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$483",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1320,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 483,
																						"src": "12436:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$483_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1321,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12445:2:2",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 481,
																					"src": "12436:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$483",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12424:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1330,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1328,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1323,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12451:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1326,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1324,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1313,
																									"src": "12457:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 1325,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12466:1:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "12457:10:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1327,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12456:12:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12451:17:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1329,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1304,
																					"src": "12471:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12451:25:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12424:52:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1333,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12483:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12424:60:2",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12479:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1335,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12423:62:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12414:71:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1311,
														"id": 1337,
														"nodeType": "Return",
														"src": "12407:78:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "12099:143:2",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12256:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12271:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "12263:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12263:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12287:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "12278:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$483",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1306,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1305,
														"name": "Rounding",
														"nameLocations": [
															"12278:8:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 483,
														"src": "12278:8:2"
													},
													"referencedDeclaration": 483,
													"src": "12278:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$483",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12262:34:2"
									},
									"returnParameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "12320:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12320:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12319:9:2"
									},
									"scope": 1341,
									"src": "12247:255:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1342,
							"src": "202:12302:2",
							"usedErrors": []
						}
					],
					"src": "103:12402:2"
				},
				"id": 2
			},
			"contracts/interfaces/IExchangeAggregator.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IExchangeAggregator.sol",
					"exportedSymbols": {
						"IExchangeAggregator": [
							1373
						]
					},
					"id": 1374,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1343,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IExchangeAggregator",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1373,
							"linearizedBaseContracts": [
								1373
							],
							"name": "IExchangeAggregator",
							"nameLocation": "68:19:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IExchangeAggregator.swapData",
									"id": 1356,
									"members": [
										{
											"constant": false,
											"id": 1345,
											"mutability": "mutable",
											"name": "input",
											"nameLocation": "127:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 1356,
											"src": "119:13:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1344,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "119:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1347,
											"mutability": "mutable",
											"name": "totalAmount",
											"nameLocation": "147:11:3",
											"nodeType": "VariableDeclaration",
											"scope": 1356,
											"src": "142:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1346,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "142:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1349,
											"mutability": "mutable",
											"name": "feeAmount",
											"nameLocation": "173:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 1356,
											"src": "168:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1348,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "168:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1351,
											"mutability": "mutable",
											"name": "swapper",
											"nameLocation": "200:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 1356,
											"src": "192:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1350,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "192:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1353,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "223:4:3",
											"nodeType": "VariableDeclaration",
											"scope": 1356,
											"src": "217:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1352,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "217:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1355,
											"mutability": "mutable",
											"name": "sender",
											"nameLocation": "245:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 1356,
											"src": "237:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1354,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "237:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "swapData",
									"nameLocation": "101:8:3",
									"nodeType": "StructDefinition",
									"scope": 1373,
									"src": "94:164:3",
									"visibility": "public"
								},
								{
									"functionSelector": "2906799b",
									"id": 1364,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "273:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "296:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "278:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_swapData_$1356_calldata_ptr",
													"typeString": "struct IExchangeAggregator.swapData"
												},
												"typeName": {
													"id": 1358,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1357,
														"name": "swapData",
														"nameLocations": [
															"278:8:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1356,
														"src": "278:8:3"
													},
													"referencedDeclaration": 1356,
													"src": "278:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_swapData_$1356_storage_ptr",
														"typeString": "struct IExchangeAggregator.swapData"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "316:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "301:18:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1360,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "301:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "277:43:3"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "329:0:3"
									},
									"scope": 1373,
									"src": "264:66:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5d86acf1",
									"id": 1372,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapNativeIn",
									"nameLocation": "344:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "375:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "357:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_swapData_$1356_calldata_ptr",
													"typeString": "struct IExchangeAggregator.swapData"
												},
												"typeName": {
													"id": 1366,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1365,
														"name": "swapData",
														"nameLocations": [
															"357:8:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1356,
														"src": "357:8:3"
													},
													"referencedDeclaration": 1356,
													"src": "357:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_swapData_$1356_storage_ptr",
														"typeString": "struct IExchangeAggregator.swapData"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "395:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "380:18:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1368,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "380:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:43:3"
									},
									"returnParameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:0:3"
									},
									"scope": 1373,
									"src": "335:82:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1374,
							"src": "58:361:3",
							"usedErrors": []
						}
					],
					"src": "32:387:3"
				},
				"id": 3
			},
			"contracts/libraries/utils.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/utils.sol",
					"exportedSymbols": {
						"ECDSA": [
							476
						],
						"IExchangeAggregator": [
							1373
						],
						"Math": [
							1341
						],
						"Strings": [
							174
						],
						"utils": [
							1458
						]
					},
					"id": 1459,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1375,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"id": 1376,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1459,
							"sourceUnit": 477,
							"src": "58:62:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IExchangeAggregator.sol",
							"file": "../interfaces/IExchangeAggregator.sol",
							"id": 1377,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1459,
							"sourceUnit": 1374,
							"src": "121:47:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "utils",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1458,
							"linearizedBaseContracts": [
								1458
							],
							"name": "utils",
							"nameLocation": "178:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1380,
									"libraryName": {
										"id": 1378,
										"name": "ECDSA",
										"nameLocations": [
											"196:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 476,
										"src": "196:5:4"
									},
									"nodeType": "UsingForDirective",
									"src": "190:24:4",
									"typeName": {
										"id": 1379,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "206:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 1423,
										"nodeType": "Block",
										"src": "307:177:4",
										"statements": [
											{
												"expression": {
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1389,
															"name": "sig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "317:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1391,
														"indexExpression": {
															"hexValue": "3634",
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "321:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "64"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "317:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30783162",
														"id": 1392,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "327:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_27_by_1",
															"typeString": "int_const 27"
														},
														"value": "0x1b"
													},
													"src": "317:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1394,
												"nodeType": "ExpressionStatement",
												"src": "317:14:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1399,
																"name": "sig",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1386,
																"src": "364:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1396,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1384,
																		"src": "350:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1395,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1457,
																	"src": "345:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "345:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "356:7:4",
															"memberName": "recover",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 301,
															"src": "345:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$",
																"typeString": "function (bytes32,bytes memory) pure returns (address)"
															}
														},
														"id": 1400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "345:23:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1401,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1382,
														"src": "372:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "345:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1404,
												"nodeType": "IfStatement",
												"src": "341:46:4",
												"trueBody": {
													"functionReturnParameters": 1388,
													"id": 1403,
													"nodeType": "Return",
													"src": "379:8:4"
												}
											},
											{
												"expression": {
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1405,
															"name": "sig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "396:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1407,
														"indexExpression": {
															"hexValue": "3634",
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "400:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "64"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "396:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30783163",
														"id": 1408,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "406:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_28_by_1",
															"typeString": "int_const 28"
														},
														"value": "0x1c"
													},
													"src": "396:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1410,
												"nodeType": "ExpressionStatement",
												"src": "396:14:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1416,
																		"name": "sig",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1386,
																		"src": "447:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1413,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1384,
																				"src": "433:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1412,
																			"name": "hash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1457,
																			"src": "428:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 1414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "428:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"id": 1415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "439:7:4",
																	"memberName": "recover",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 301,
																	"src": "428:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$",
																		"typeString": "function (bytes32,bytes memory) pure returns (address)"
																	}
																},
																"id": 1417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "428:23:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1418,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "455:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "428:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "646174612074616d7065726564",
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "461:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_172e1c47a0125d0a352f8ffca79c6b565a3cd8208f66bba6694ab61ad1abbb25",
																"typeString": "literal_string \"data tampered\""
															},
															"value": "data tampered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_172e1c47a0125d0a352f8ffca79c6b565a3cd8208f66bba6694ab61ad1abbb25",
																"typeString": "literal_string \"data tampered\""
															}
														],
														"id": 1411,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "420:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "420:57:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1422,
												"nodeType": "ExpressionStatement",
												"src": "420:57:4"
											}
										]
									},
									"id": 1424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkSig",
									"nameLocation": "233:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "250:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "242:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "242:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "269:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "256:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1383,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "256:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "288:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "275:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1385,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "275:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "241:51:4"
									},
									"returnParameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "307:0:4"
									},
									"scope": 1458,
									"src": "224:260:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1444,
										"nodeType": "Block",
										"src": "596:59:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1441,
															"name": "sig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1429,
															"src": "644:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1437,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1427,
																			"src": "629:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_swapData_$1356_calldata_ptr",
																				"typeString": "struct IExchangeAggregator.swapData calldata"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_struct$_swapData_$1356_calldata_ptr",
																				"typeString": "struct IExchangeAggregator.swapData calldata"
																			}
																		],
																		"expression": {
																			"id": 1435,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "618:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "622:6:4",
																		"memberName": "encode",
																		"nodeType": "MemberAccess",
																		"src": "618:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 1438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "618:16:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1434,
																"name": "hash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1457,
																"src": "613:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "613:22:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "636:7:4",
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 301,
														"src": "613:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address)"
														}
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "613:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1433,
												"id": 1443,
												"nodeType": "Return",
												"src": "606:42:4"
											}
										]
									},
									"functionSelector": "4f5fdbe5",
									"id": 1445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "signer",
									"nameLocation": "499:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "544:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "506:42:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_swapData_$1356_calldata_ptr",
													"typeString": "struct IExchangeAggregator.swapData"
												},
												"typeName": {
													"id": 1426,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1425,
														"name": "IExchangeAggregator.swapData",
														"nameLocations": [
															"506:19:4",
															"526:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1356,
														"src": "506:28:4"
													},
													"referencedDeclaration": 1356,
													"src": "506:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_swapData_$1356_storage_ptr",
														"typeString": "struct IExchangeAggregator.swapData"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "563:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "550:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1428,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "550:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "505:62:4"
									},
									"returnParameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "588:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "588:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "587:9:4"
									},
									"scope": 1458,
									"src": "490:165:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1456,
										"nodeType": "Block",
										"src": "725:39:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1453,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1447,
															"src": "752:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1452,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "742:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "742:15:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1451,
												"id": 1455,
												"nodeType": "Return",
												"src": "735:22:4"
											}
										]
									},
									"id": 1457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hash",
									"nameLocation": "670:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "688:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "675:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1446,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "675:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "674:19:4"
									},
									"returnParameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "716:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1449,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "716:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "715:9:4"
									},
									"scope": 1458,
									"src": "661:103:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1459,
							"src": "170:596:4",
							"usedErrors": []
						}
					],
					"src": "32:734:4"
				},
				"id": 4
			}
		}
	}
}